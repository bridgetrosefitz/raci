{"version":3,"sources":["components/TaskModal.js","components/EditTaskModal.js","components/DeleteProjectWarningModal.js","components/EditProjectModal.js","components/Nav.js","api/helper.js","api/Project.js","api/UserTask.js","api/Flag.js","api/Function.js","api/User.js","api/Task.js","api/Membership.js","api/index.js","components/RACITable.js","components/Login.js","components/SignUp.js","components/CreateProjectModal.js","components/ProjectsList.js","components/Arrow.js","components/PhotoSlideshow.js","components/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["TaskModal","props","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","floated","icon","labelPosition","primary","onClick","onTriggerButtonClick","size","Icon","name","Header","Content","Description","Form","Field","placeholder","value","taskName","onChange","handleTextFieldChange","createDropdowns","Actions","type","event","data","text","handleSubmit","positive","EditTaskModal","putSelectedTaskDataInState","task","id","color","handleDelete","basic","Grid","Column","width","projectName","inverted","deleteProject","projectId","EditProjectModal","style","marginLeft","backgroundColor","populateMembersToEdit","Input","error","projectNameHasError","content","pointing","onProjectNameChange","createDropdown","deleteProjectWarningModal","onSubmit","Nav","Menu","borderless","attached","border","position","Item","userFullName","onBack","backText","logOut","API_HOST","AUTH_HEADERS","headers","localStorage","token","index","fetch","then","res","json","show","a","ok","Promise","reject","create","body","method","JSON","stringify","destroy","update","projectStartDate","userTask","userTaskId","userId","taskId","user_id","task_id","flagId","login","email","password","signup","first_name","last_name","profile","available_projects","project_id","memberId","membershipId","Project","UserTask","Flag","Function","User","Task","Membership","createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","greaterThan","Container","secondary","Component","ResponsiveContainer","RACITable","putProjectDataInState","toggleLoader","match","params","API","functions","attributes","projectNameForUpdating","tasks","creator","members","catch","history","push","putAllUsersDataInState","allUsers","createTeamMemberOptions","map","member","key","mapAllUsersToDropdown","user","parseInt","full_name","createDropdownForEditProjectModal","defaultValues","Dropdown","fluid","multiple","selection","options","defaultValue","handleDropdownChangeForEditProjectModal","createDropdownsForEditTaskModal","raciFunction","functionName","toLowerCase","includes","handleDropdownChangeForEditTaskModal","createDropdownsForCreateTaskModal","handleDropdownChangeForCreateModal","mapAllUsersToDropdownOptions","raciFunctionId","taskToCreateUserIds","responsible","accountable","consulted","informed","taskToEditUserIds","projectToEditMembers","taskNameForUpdating","target","createUserTasks","dataFromTaskCreation","userTasksToCreate","userIdsForUserTasksToCreate","forEach","function_id","handleSubmitOnTaskModal","preventDefault","handleSubmitOnEditTaskModal","userIdsForUserTasksToDelete","selectedTaskUserIds","userTaskIdsForUserTasksToDelete","selectedTask","user_task","filter","n","user_task_id","getKeys","Object","values","deleteThesePuppiesFiltered","concat","apply","itemInArray","undefined","apiPromises","allSettled","handleSubmitOnEditProjectModal","existingMemberIds","projectToEditUserIds","membersToDeleteIds","membersToCreateIds","membershipIdsForMembershipsToDelete","membership_id","putSelectedProjectMembersDataInState","membersToShoveInState","taskToPutInState","task_name","handleNewMemberSelection","newMembersToAdd","handleFlagging","flags","flag","flag_id","createNewMembers","topMessage","header","message","errors","hideTopMessage","setTimeout","showAddUsers","deleteUserTask","redirectToProjectsIndexPage","handleProjectNameChange","taskText","authenticateMe","Message","hidden","as","handleDropdownChange","Label","Group","circular","Popup","padding","initials","Table","celled","Row","HeaderCell","Body","length","Cell","user_full_name","user_initials","i","marginTop","marginBottom","user_first_name","Footer","fullWidth","raciFunctions","colSpan","Login","isValidEmailAddress","address","loginInfoIsFull","loginInfo","e","handleChange","prevState","height","textAlign","margin","lineHeight","fontSize","borderRadius","Card","centered","paddingTop","paddingBottom","paddingLeft","paddingRight","to","SignUp","signupInfoIsFull","signupInfo","onDropdownChange","dropdownOptions","onCancel","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","at","Sidebar","Pushable","animation","onHide","vertical","visible","Pusher","dimmed","ProjectsList","putProjectsDataInState","projects","clearProjectNameField","createNewProject","creator_id","createProjectCards","project","redirectToProjectPage","createCardGroup","itemsPerRow","CreateProjectModal","newProjectNameHasError","propsForCreateProjectModal","Arrow","direction","slideshowArrow","className","onTouchStart","PhotoSlideshow","dataAos","dataAosDuration","photos","arrowColor","currentPhotoIndex","setCurrentPhotoIndex","altText","split","changePhoto","photosLastIndex","data-aos","data-aos-duration","alt","src","appScreenshots","raciDefinitions","description","HomepageHeading","fontWeight","Visibility","once","Segment","minHeight","LandingPage","container","stackable","verticalAlign","items","flexWrap","maxWidth","divided","List","link","href","App","loaderIsActive","clear","trueOrFalse","location","pathname","Dimmer","active","Loader","path","render","routerProps","withRouter","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0zCA6DeA,MA1Df,SAAmBC,GAAQ,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAGxB,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QACE,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAI,EACJC,cAAgB,OAChBC,SAAO,EACPC,QAASd,EAAMe,qBACfC,KAAK,QANP,UAOI,cAACC,EAAA,EAAD,CAAMC,KAAK,gBAPf,eALJ,UAgBE,cAACb,EAAA,EAAMc,OAAP,8BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,yCACA,uBACEC,YAAY,0BACZC,MAAOzB,EAAM0B,SACbC,SAAU3B,EAAM4B,2BAGnB5B,EAAM6B,yBAIb,eAACxB,EAAA,EAAMyB,QAAP,WACE,cAACrB,EAAA,EAAD,CAEAK,QAAS,kBAAMV,GAAQ,IAFvB,oBAKA,cAACK,EAAA,EAAD,CACIsB,KAAK,SACLpB,KAAK,YACLG,QAAS,SAACkB,EAAOC,GACf,IAAMC,EAAOD,EAAKP,SAClBtB,GAAQ,GACRJ,EAAMmC,aAAaH,EAAOE,IAE5BE,UAAQ,EARZ,gCC+BOC,MAzEf,SAAuBrC,GAAQ,IAAD,EACJE,oBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,KAQ5B,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QACE,cAACC,EAAA,EAAD,CACEE,MAAI,EACJG,QAZyB,WAC/Bd,EAAMsC,2BAA2BtC,EAAMuC,KAAKC,KAYtC9B,QAAQ,QAHV,SAIE,cAACO,EAAA,EAAD,CAAMC,KAAK,oBATjB,UAaA,cAACb,EAAA,EAAMc,OAAP,wBACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UACE,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACE,yCACA,uBACEC,YAAY,0BACZC,MAAOzB,EAAM0B,SACbC,SAAU3B,EAAM4B,2BAGnB5B,EAAM6B,gBAAgB7B,EAAMuC,aAInC,eAAClC,EAAA,EAAMyB,QAAP,WACE,eAACrB,EAAA,EAAD,CACEE,MAAI,EACJC,cAAc,QACd6B,MAAM,MACN/B,QAAQ,OACRI,QAAS,WACP,IAAMyB,EAAOvC,EAAMuC,KACnBnC,GAAQ,GACRJ,EAAM0C,aAAaH,IARvB,wBAYA,cAACtB,EAAA,EAAD,CAAMC,KAAK,+BAEX,cAACT,EAAA,EAAD,CACEK,QAAS,kBAAMV,GAAQ,IADzB,oBAIA,cAACK,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,EAAOC,GACf,IAAMM,EAAOvC,EAAMuC,KACnBnC,GAAQ,GACRJ,EAAMmC,aAAaH,EAAOO,IAE5BH,UAAQ,EAPV,gCCzDO,WAACpC,GAAW,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAGxB,OACE,eAACC,EAAA,EAAD,CACEsC,OAAK,EACLrC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNa,KAAK,QACLR,QAAS,eAACC,EAAA,EAAD,CACTgC,MAAM,MACN/B,QAAQ,OAFC,UAGT,cAACO,EAAA,EAAD,CAAMC,KAAK,4BAHF,oBANX,UAYE,eAACC,EAAA,EAAD,CAAQR,MAAI,EAAZ,UACE,cAACM,EAAA,EAAD,CAAMC,KAAK,4BACX,uBAFF,mDAKA,cAACb,EAAA,EAAMe,QAAP,UACA,eAACwB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,IACpB,cAACF,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,8CACc9C,EAAM+C,YADpB,0CAIE,cAACH,EAAA,EAAKC,OAAN,CAAaC,MAAO,SAIxB,eAACzC,EAAA,EAAMyB,QAAP,WACE,eAACrB,EAAA,EAAD,CAAQkC,OAAK,EAACF,MAAM,OAAOO,UAAQ,EAAClC,QAAS,kBAAMV,GAAQ,IAA3D,UACE,cAACa,EAAA,EAAD,CAAMC,KAAK,WADb,kBAGA,eAACT,EAAA,EAAD,CAAQgC,MAAM,MAAMO,UAAQ,EAC5BlC,QAAS,WACRd,EAAMiD,cAAcjD,EAAMkD,WAC3B9C,GAAQ,IAHR,UAIE,cAACa,EAAA,EAAD,CAAMC,KAAK,cAJb,yBCwCOiC,EA3EU,SAACnD,GAAW,IAAD,EACVC,IAAMC,UAAS,GADL,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,WAAOH,GAAQ,IACvBD,KAAMA,EACNK,QAAS,+BAAM,cAACC,EAAA,EAAD,CACb2C,MAAO,CAAEC,WAAY,QAASC,gBAAiB,SAC/C3C,MAAI,EACJ8B,MAAM,QACNzB,KAAK,MACLF,QAf2B,WAE/Bd,EAAMuD,yBAQW,SAOX,cAACtC,EAAA,EAAD,CACEC,KAAK,sBAZb,UAeE,cAACb,EAAA,EAAMc,OAAP,2BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UAIE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,iDACA,cAACD,EAAA,EAAKkC,MAAN,CACEC,MAAOzD,EAAM0D,oBAAsB,CAAEC,QAAS,2BAA4BC,SAAU,SAAY,KAChGjC,SAAU3B,EAAM6D,oBAChBpC,MAAOzB,EAAM+C,iBAGjB,eAACzB,EAAA,EAAKC,MAAN,WACE,iDACGvB,EAAM8D,yBAKjB,eAACzD,EAAA,EAAMyB,QAAP,WACGiC,EACC,CACEhB,YAAa/C,EAAM+C,YACnBG,UAAWlD,EAAMkD,UACjBD,cAAejD,EAAMiD,gBAGzB,cAACxC,EAAA,EAAD,CACEK,QAAS,WACPV,GAAQ,IAFZ,oBAOA,cAACK,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,GACR5B,GAAQ,GACRJ,EAAMgE,SAAShC,IAEjBI,UAAQ,EANV,mC,SCvCO6B,EAxBH,SAAAjE,GACV,OACE,cAACkE,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAS,MAAMhB,MAAO,CAAEiB,OAAQ,QAAjD,SACE,eAACH,EAAA,EAAKA,KAAN,CAAWI,SAAS,QAApB,UACE,cAACJ,EAAA,EAAKK,KAAN,UACCvE,EAAMwE,aAAN,uBAAqCxE,EAAMwE,cAAiB,KAE5DxE,EAAMyE,QACL,cAACP,EAAA,EAAKK,KAAN,UACE,cAAC9D,EAAA,EAAD,CACEK,QAASd,EAAMyE,OACf/D,QAAQ,QAFV,SAGEV,EAAM0E,aAEZ,cAACR,EAAA,EAAKK,KAAN,UACE,cAAC9D,EAAA,EAAD,CACEK,QAASd,EAAM2E,OADjB,6B,yBCjBGC,EAAQ,wDASRC,EAAe,CAC1BC,QAAQ,2BAPC,CACP,OAAU,mBACV,eAAgB,qBAKX,IAEL,cAAgB,UAAhB,OAA2BC,aAAaC,UCX/BC,EAAQ,WAGnB,OAFqBC,MAAM,GAAD,OAAIN,EAAJ,aAAyBC,GACXM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAI7CC,EAAO,SAACpC,GACnB,OAAOgC,MAAM,GAAD,OAAIN,EAAJ,qBAAyB1B,GAAa2B,GAC/CM,KADI,uCACC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CADD,wDAWI0D,EAAS,SAACC,GACrB,OAAOV,MAAM,GAAD,OAAIN,EAAJ,yBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAUH,MACpBT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGRW,EAAU,SAAC9C,GACtB,OAAOgC,MAAM,GAAD,OAAIN,EAAJ,qBAAyB1B,GAAzB,aACV2C,OAAQ,UACLhB,KAIMoB,EAAS,SAAC/C,EAAWH,EAAamD,GAC7C,OAAOhB,MAAM,GAAD,OAAIN,EAAJ,qBAAyB1B,GAAzB,aACV2C,OAAQ,MACRD,KAAME,KAAKC,UAAU,CACnB7E,KAAM6B,KAGL8B,IACFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCzCRM,EAAS,SAACQ,GACrB,OAAOjB,MAAM,GAAD,OAAIN,EAAJ,2BAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAUI,MAEtBhB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGNW,EAAU,SAACI,GACtB,OAAOlB,MAAM,GAAD,OAAIN,EAAJ,uBAA2BwB,GAA3B,aACVP,OAAQ,UACLhB,KCXMc,EAAS,SAACU,EAAQC,GAQ7B,OAAOpB,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CAACQ,QAASF,EAAQG,QAASF,QAIvCN,GAAU,SAACS,GACtB,OAAOvB,MAAM,GAAD,OAAIN,EAAJ,kBAAsB6B,GAAtB,YAAC,eACR5B,GADO,IAEVgB,OAAQ,aCnBCZ,GAAQ,WACnB,OAAOC,MAAM,GAAD,OAAIN,EAAJ,cAA0BC,GACrCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCFNJ,GAAQ,WACnB,OAAOC,MAAM,GAAD,OAAIN,EAAJ,WAAuBC,GAChCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGRqB,GAAQ,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OAAO1B,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBY,MAAOA,EACPC,SAAUA,OAGXzB,KARI,uCAQC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CARD,wDAkBI4E,GAAS,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,UAAWJ,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACpD,OAAO1B,MAAM,GAAD,OAAIN,EAAJ,uBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBe,WAAYA,EACZC,UAAWA,EACXJ,MAAOA,EACPC,SAAUA,OAGXzB,KAVI,uCAUC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CAVD,wDAoBI+E,GAAU,WACrB,OAAO9B,MAAM,GAAD,OAAIN,EAAJ,YAAwBC,GACnCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGN4B,GAAqB,WAChC,OAAO/B,MAAK,UAAKN,EAAL,uBAAoCC,GAC/CM,KADM,uCACD,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CADC,wDCnDI0D,GAAS,SAACzD,EAAMgB,GAC3B,OAAOgC,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnB7D,KAAMA,EACNgF,WAAYhE,OAGfiC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGNY,GAAS,SAACK,EAAQ5E,EAAUwB,GACvC,OAAOgC,MAAM,GAAD,OAAIN,EAAJ,kBAAsB0B,GAAtB,YAAC,eACRzB,GADO,IAEVgB,OAAQ,MACRD,KAAME,KAAKC,UAAU,CACrB7D,KAAMR,EACNwB,UAAWA,QAKF8C,GAAU,SAACM,GACtB,OAAOpB,MAAM,GAAD,OAAIN,EAAJ,kBAAsB0B,GAAtB,YAAC,eACRzB,GADO,IAEVgB,OAAQ,aC1BCF,GAAS,SAACwB,EAAUjE,GAC/B,OAAOgC,MAAM,GAAD,OAAIN,EAAJ,4BAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBQ,QAASY,EACTD,WAAYhE,OAGfiC,KARM,uCAQD,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CARC,wDAkBI+D,GAAU,SAACoB,GACtB,OAAOlC,MAAM,GAAD,OAAIN,EAAJ,wBAA4BwC,GAA5B,YAAC,eACRvC,GADO,IAEVgB,OAAQ,YAEPV,KAJI,uCAIC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEpD,EADF,QAEAmD,EAAII,GAFJ,yCAGKvD,GAHL,gCAKKwD,QAAQC,OAAOzD,IALpB,2CAJD,wDCZM,IAACoF,UAASC,WAAUC,OAAMC,WAAUC,OAAMC,OAAMC,c,GCYvBC,sBAAY,CAClDC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,G,GAAAA,qBAAsBC,G,GAAAA,MAQxBC,G,4MACJC,MAAQ,G,EAERC,cAAgB,kBAAM,EAAKC,SAAS,CAAEC,OAAO,K,EAC7CC,cAAgB,kBAAM,EAAKF,SAAS,CAAEC,OAAO,K,4CAE7C,WAAU,IACAE,EAAaC,KAAK1I,MAAlByI,SACAF,EAAUG,KAAKN,MAAfG,MAER,OACE,cAACL,GAAD,CAAOS,YAAY,SAAnB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,2BACIF,KAAK1I,OADT,IAEAuI,MAAOA,EAAQ,MAAQ,KACvBvF,UAAWuF,EACX3E,UAAW2E,EACXM,WAAYN,EACZvH,KAAK,WAEJyH,W,GArBoBxI,IAAM6I,WAgC/BC,GAAsB,SAAC/I,GAE3B,OACE,cAACiI,GAAD,UACE,cAAC,GAAD,2BAAsBjI,GAAtB,aAA8BA,EAAMyI,eAKrBO,G,kDACnB,aAAe,IAAD,8BACZ,gBA2CFC,sBAAwB,WACtB,EAAKjJ,MAAMkJ,cAAa,GAExB,IAAMhG,EAAY,EAAKlD,MAAMmJ,MAAMC,OAAO5G,GAE1C6G,GAAI7B,SAASvC,QACVE,MAAK,SAAAlD,GAAI,OAAI,EAAKqG,SAAS,CAC1BgB,UAAWrH,EAAKA,UAGpBoH,GAAIhC,QAAQ/B,KAAKpC,GACdiC,MAAK,SAAAlD,GAAS,EAAKqG,SAAS,CAC3BpF,UAAWjB,EAAKA,KAAKO,GACrBO,YAAad,EAAKA,KAAKsH,WAAWrI,KAClCsI,uBAAwBvH,EAAKA,KAAKsH,WAAWrI,KAC7CuI,MAAOxH,EAAKA,KAAKsH,WAAWE,MAC5BC,QAASzH,EAAKA,KAAKsH,WAAWG,QAC9BC,QAAS1H,EAAKA,KAAKsH,WAAWI,UAE9B,EAAK3J,MAAMkJ,cAAa,MAEzBU,OAAM,kBAAM,EAAK5J,MAAM6J,QAAQC,KAAK,iBAjE3B,EAoEdC,uBAAyB,WACvBV,GAAI5B,KAAKxC,QACRE,MAAK,SAAAlD,GAAI,OAAI,EAAKqG,SAAS,CAAC0B,SAAU/H,EAAKA,WAtEhC,EAyEdgI,wBAA0B,WACxB,OAAO,EAAK7B,MAAMuB,QAAQO,KAAI,SAAAC,GAAM,MAAK,CACnCC,IAAKD,EAAO3H,GACZN,KAAMiI,EAAOrD,WACbrF,MAAO0I,EAAO3H,QA7ER,EAiFd6H,sBAAwB,WACtB,OAAO,EAAKjC,MAAM4B,SAEfE,KAAI,SAAAI,GAAI,MAAK,CACZF,IAAKG,SAASD,EAAK9H,IACnBN,KAAMoI,EAAKf,WAAWiB,UACtB/I,MAAO8I,SAASD,EAAK9H,SAvFb,EA2FdiI,kCAAoC,WAClC,IAAMC,EAAgB,EAAKtC,MAAMuB,QAAU,EAAKvB,MAAMuB,QAAQO,KAAI,SAACC,GAAD,OAAYA,EAAO3H,MAAM,GAE3F,OACE,cAACmI,EAAA,EAAD,CACEnJ,YAAY,mBACZoJ,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAAS,EAAKV,wBACdW,aAAcN,EACd/I,SAAU,SAACK,EAAOC,GAAW,EAAKgJ,wCAAwChJ,OAtGlE,EA4GdiJ,gCAAkC,SAAC3I,GAEjC,OACE,EAAK6F,MAAMkB,UAAUY,KAAI,SAACiB,EAAclG,GACtC,IAAMmG,EAAeD,EAAa5B,WAAWrI,KAAKmK,cAC5CX,EAAgBnI,EAAOA,EAAK6I,GAAclB,KAAI,SAAA/D,GAAQ,OAAIA,EAASI,WAAW,GACpF,OACE,eAACjF,EAAA,EAAKC,MAAN,WAEE,gCAAQ4J,EAAa5B,WAAWrI,OAChC,cAACyJ,EAAA,EAAD,CACEnJ,YAAY,qBACZoJ,OAAK,EACLC,SAAU,CAAC,EAAE,GAAGS,SAASf,SAASY,EAAa3I,KAC/CwI,aAAc,CAAC,EAAE,GAAGM,SAASf,SAASY,EAAa3I,KAAOkI,EAAgBA,EAAc,GACxFI,WAAS,EACTC,QAAS,EAAKd,0BACdtI,SAAU,SAACK,EAAOC,GAAU,EAAKsJ,qCAAqCtJ,EAAMkJ,QATzElG,OApHD,EAqIduG,kCAAoC,SAACjJ,GAEnC,OACE,EAAK6F,MAAMkB,UAAUY,KAAI,SAACiB,EAAclG,GACjBkG,EAAa5B,WAAWrI,KAAKmK,cAClD,OACE,eAAC/J,EAAA,EAAKC,MAAN,WAEE,gCAAQ4J,EAAa5B,WAAWrI,OAChC,cAACyJ,EAAA,EAAD,CACEnJ,YAAY,qBACZoJ,OAAK,EACLC,SAAU,CAAC,EAAG,GAAGS,SAASf,SAASY,EAAa3I,KAChDsI,WAAS,EACTC,QAAS,EAAKd,0BACdtI,SAAU,SAACK,EAAOC,GAAW,EAAKwJ,mCAAmCxJ,EAAMkJ,QARxElG,OA5ID,EA4JdyG,6BAA+B,WAC7B,OAAO,EAAKtD,MAAM4B,SAASE,KAAI,SAAAI,GAAI,MAAK,CACtCF,IAAKE,EAAK9H,GACVN,KAAMoI,EAAKf,WAAWiB,UACtB/I,MAAO6I,EAAK9H,QAhKF,EAoKdiJ,mCAAqC,SAACxJ,EAAMkJ,GAE1C,IAAMQ,EAAiBpB,SAASY,EAAa3I,IAEtB,IAAnBmJ,EACF,EAAKrD,SAAS,CACZsD,oBAAoB,2BACf,EAAKxD,MAAMwD,qBADG,IAEjBC,YAAa,CAAC5J,EAAKR,WAIG,IAAnBkK,EACP,EAAKrD,SAAS,CACZsD,oBAAoB,2BACf,EAAKxD,MAAMwD,qBADG,IAEjBE,YAAa,CAAC7J,EAAKR,WAIG,IAAnBkK,EACP,EAAKrD,SAAS,CACZsD,oBAAoB,2BACf,EAAKxD,MAAMwD,qBADG,IAEjBG,UAAW9J,EAAKR,UAIM,IAAnBkK,GACP,EAAKrD,SAAS,CACZsD,oBAAoB,2BACf,EAAKxD,MAAMwD,qBADG,IAEjBI,SAAU/J,EAAKR,WApMT,EA0Md8J,qCAAuC,SAACtJ,EAAMkJ,GAE5C,IAAMQ,EAAiBpB,SAASY,EAAa3I,IAEtB,IAAnBmJ,EACF,EAAKrD,SAAS,CACZ2D,kBAAkB,2BACb,EAAK7D,MAAM6D,mBADC,IAEfJ,YAAa,CAAC5J,EAAKR,WAIG,IAAnBkK,EACP,EAAKrD,SAAS,CACZ2D,kBAAkB,2BACb,EAAK7D,MAAM6D,mBADC,IAEfH,YAAa,CAAC7J,EAAKR,WAIG,IAAnBkK,EACP,EAAKrD,SAAS,CACZ2D,kBAAkB,2BACb,EAAK7D,MAAM6D,mBADC,IAEfF,UAAW9J,EAAKR,UAIM,IAAnBkK,GACP,EAAKrD,SAAS,CACZ2D,kBAAkB,2BACb,EAAK7D,MAAM6D,mBADC,IAEfD,SAAU/J,EAAKR,WA1OT,EAgPdwJ,wCAA0C,SAAChJ,GACvC,EAAKqG,SAAS,CACZ4D,qBAAsBjK,EAAKR,SAlPnB,EAsPdG,sBAAwB,SAAAI,GACtB,EAAKsG,SAAS,CAIZ6D,oBAAqBnK,EAAMoK,OAAO3K,SA3PxB,EA+Pd4K,gBAAkB,SAACC,GAEjB,IAAMhG,EAASiE,SAAS+B,EAAqBrK,KAAKO,IAE5C+J,EAAoB,GAEpBC,EAA8B,EAAKpE,MAAMwD,oBAE/CY,EAA4BX,YAAYY,SAAQ,SAAApG,GAE9CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKfmG,EAA4BV,YAAYW,SAAQ,SAAApG,GAE9CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKfmG,EAA4BT,UAAUU,SAAQ,SAAApG,GAE5CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKfmG,EAA4BR,SAASS,SAAQ,SAAApG,GAE3CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAMfkG,EAAkBE,SAAQ,SAACtG,GACvBkD,GAAI/B,SAAS3B,OAAOQ,GACjBhB,KAAK,EAAK8D,0BAGf,EAAKX,SAAS,CACZiE,kBAAmB,MA1TX,EA8TdI,wBAA0B,SAAC3K,GACzBA,EAAM4K,iBACN,IAAM1J,EAAY,EAAKkF,MAAMlF,UACvBhB,EAAO,EAAKkG,MAAM+D,oBACxB9C,GAAI3B,KAAK/B,OAAOzD,EAAMgB,GACnBiC,MAAK,SAAAlD,GAAI,OAAI,EAAKoK,gBAAgBpK,OAnUzB,EAsUd4K,4BAA8B,SAAC7K,EAAOO,GACpCP,EAAM4K,iBAEN,IAAM1J,EAAY,EAAKkF,MAAMlF,UAEvBsJ,EAA8B,CAClCX,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNc,EAA8B,CAClCjB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNe,EAAsB,CAC1BlB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNgB,EAAkC,CACtCnB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAKNC,EAAoB,EAAK7D,MAAM6D,kBAKrCc,EAAoBlB,YAAc,EAAKzD,MAAM6E,aAAapB,YAAY3B,KAAI,SAAAgD,GACxE,OAAOA,EAAU3G,WAGnBwG,EAAoBjB,YAAc,EAAK1D,MAAM6E,aAAanB,YAAY5B,KAAI,SAAAgD,GACxE,OAAQA,EAAU3G,WAGpBwG,EAAoBhB,UAAY,EAAK3D,MAAM6E,aAAalB,UAAU7B,KAAI,SAAAgD,GACpE,OAAQA,EAAU3G,WAGpBwG,EAAoBf,SAAW,EAAK5D,MAAM6E,aAAajB,SAAS9B,KAAI,SAAAgD,GAClE,OAAQA,EAAU3G,WAMpBuG,EAA4BjB,YAAckB,EAAoBlB,YAAYsB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBJ,YAAYP,SAAS8B,MAC9HN,EAA4BhB,YAAciB,EAAoBjB,YAAYqB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBH,YAAYR,SAAS8B,MAC9HN,EAA4Bf,UAAYgB,EAAoBhB,UAAUoB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBF,UAAUT,SAAS8B,MACxHN,EAA4Bd,SAAWe,EAAoBf,SAASmB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBD,SAASV,SAAS8B,MAKrHZ,EAA4BX,YAAcI,EAAkBJ,YAAYsB,QAAO,SAAAC,GAAC,OAAKL,EAAoBlB,YAAYP,SAAS8B,MAC9HZ,EAA4BV,YAAcG,EAAkBH,YAAYqB,QAAO,SAAAC,GAAC,OAAKL,EAAoBjB,YAAYR,SAAS8B,MAC9HZ,EAA4BT,UAAYE,EAAkBF,UAAUoB,QAAO,SAAAC,GAAC,OAAKL,EAAoBhB,UAAUT,SAAS8B,MACxHZ,EAA4BR,SAAWC,EAAkBD,SAASmB,QAAO,SAAAC,GAAC,OAAKL,EAAoBf,SAASV,SAAS8B,MAIrHJ,EAAgCnB,YAAc,EAAKzD,MAAM6E,aAAapB,YAAY3B,KAAI,SAAAgD,GACpF,GAAIJ,EAA4BjB,YAAYP,SAAS4B,EAAU3G,SAC3D,OAAQ2G,EAAUG,gBAIxBL,EAAgClB,YAAc,EAAK1D,MAAM6E,aAAanB,YAAY5B,KAAI,SAAAgD,GACpF,GAAIJ,EAA4BhB,YAAYR,SAAS4B,EAAU3G,SAC7D,OAAQ2G,EAAUG,gBAItBL,EAAgCjB,UAAY,EAAK3D,MAAM6E,aAAalB,UAAU7B,KAAI,SAAAgD,GAChF,GAAIJ,EAA4Bf,UAAUT,SAAS4B,EAAU3G,SAC3D,OAAQ2G,EAAUG,gBAItBL,EAAgChB,SAAW,EAAK5D,MAAM6E,aAAajB,SAAS9B,KAAI,SAAAgD,GAC9E,GAAIJ,EAA4Bd,SAASV,SAAS4B,EAAU3G,SAC1D,OAAQ2G,EAAUG,gBAItB,IAAMC,EAAUC,OAAOC,OAAOR,GAExBS,EADqB,GAAGC,OAAOC,MAAM,GAAIL,GACOH,QAAO,SAACS,GAC5D,YAAuBC,IAAhBD,KAKHtH,EAAS/D,EAAKC,GACd+J,EAAoB,GAE1BC,EAA4BX,YAAYY,SAAQ,SAAApG,GAE9CkG,EAAkBzC,KACZ,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKnBmG,EAA4BV,YAAYW,SAAQ,SAAApG,GAE9CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKfmG,EAA4BT,UAAUU,SAAQ,SAAApG,GAE5CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAKfmG,EAA4BR,SAASS,SAAQ,SAAApG,GAE3CkG,EAAkBzC,KAChB,CACEtD,QAASF,EACToG,YAAa,EACbnG,QAASF,OAOf,IAAMyH,EAAc,GAIpBL,EAA2BhB,SAAQ,SAACrG,GAChC0H,EAAYhE,KAAKT,GAAI/B,SAAStB,QAAQI,OAKxCmG,EAAkBE,SAAQ,SAACtG,GACvB2H,EAAYhE,KAAKT,GAAI/B,SAAS3B,OAAOQ,OAKrC,EAAKiC,MAAM+D,sBAAwB,EAAK/D,MAAM6E,aAAavL,UACtB,KAAnC,EAAK0G,MAAM+D,qBACb2B,EAAYhE,KAAKT,GAAI3B,KAAKzB,OAAOK,EAAQ,EAAK8B,MAAM+D,oBAAqBjJ,IAM7EuC,QAAQsI,WAAWD,GAAa3I,KAAK,EAAK8D,wBAzfhC,EA6fd+E,+BAAiC,SAAChM,GAChCA,EAAM4K,iBACN,IAAM1J,EAAY,EAAKkF,MAAMlF,UACvB+K,EAAoB,EAAK7F,MAAMuB,QAAQO,KAAI,SAAAC,GAAM,OAAIA,EAAO3H,MAC5D0L,EAAuB,EAAK9F,MAAM8D,qBAClCiC,EAAqB,GACrBC,EAAqB,GACrBC,EAAsC,GAK5CH,EAAqBzB,SAAQ,SAAAjK,GACxByL,EAAkB3C,SAAS9I,IAG5B4L,EAAmBtE,KAAKtH,MAO5ByL,EAAkBxB,SAAQ,SAAAjK,GACpB0L,EAAqB5C,SAAS9I,IAGhC2L,EAAmBrE,KAAKtH,MAM5B,IAAMsL,EAAc,GAGpBM,EAAmB3B,SAAQ,SAAAtF,GAC1B2G,EAAYhE,KAAKT,GAAI1B,WAAWhC,OAAOwB,EAAUjE,OAKlD,EAAKkF,MAAMuB,QAAQ8C,SAAQ,SAAAtC,GACtBgE,EAAmB7C,SAASnB,EAAO3H,KACpC6L,EAAoCvE,KAAKK,EAAOmE,kBAIpDD,EAAoC5B,SAAQ,SAAArF,GAC1C0G,EAAYhE,KAAKT,GAAI1B,WAAW3B,QAAQoB,OAKtC,EAAKgB,MAAMrF,cAAgB,EAAKqF,MAAMoB,wBACE,KAAtC,EAAKpB,MAAMoB,wBACbsE,EAAYhE,KAAKT,GAAIhC,QAAQpB,OAAO/C,EAAW,EAAKkF,MAAMoB,yBAM9D/D,QAAQsI,WAAWD,GAAa3I,KAAK,EAAK8D,wBA3jB9B,EA+jBdsF,qCAAuC,WACrC,IAAIC,EAAwB,GAC5B,EAAKpG,MAAMuB,QAAQ8C,SAAQ,SAAAtC,GACzBqE,EAAqB,sBAAOA,GAAP,CAA8BrE,EAAO3H,QAE5D,EAAK8F,SAAS,CACZ4D,qBAAsBsC,KArkBZ,EAykBdlM,2BAA6B,SAACE,GAC5B,IAAIiM,EAAmB,KACnB/M,EAAW,KAETuK,EAAoB,CACxBJ,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGZ,EAAK5D,MAAMqB,MAAMgD,SAAQ,SAAAlK,GACpBA,EAAKC,KAAOA,IAGbiM,EAAmBlM,EACnBb,EAAWa,EAAKmM,UAIhBzC,EAAkBJ,YAActJ,EAAKsJ,YAAY3B,KAAI,SAAAgD,GAAS,OAAIA,EAAU3G,WAC5E0F,EAAkBH,YAAcvJ,EAAKuJ,YAAY5B,KAAI,SAAAgD,GAAS,OAAIA,EAAU3G,WAC5E0F,EAAkBF,UAAYxJ,EAAKwJ,UAAU7B,KAAI,SAAAgD,GAAS,OAAIA,EAAU3G,WACxE0F,EAAkBD,SAAWzJ,EAAKyJ,SAAS9B,KAAI,SAAAgD,GAAS,OAAIA,EAAU3G,eAI1E,EAAK+B,SAAS,CACZ2E,aAAcwB,EACdtC,oBAAqBzK,EACrBuK,kBAAmBA,KAvmBT,EA2mBdvJ,aAAe,SAACH,GACd8G,GAAI3B,KAAK1B,QAAQzD,EAAKC,IACrB2C,KAAK,EAAK8D,wBA7mBC,EAinBd0F,yBAA2B,SAAC3M,EAAOC,GACjC,EAAKqG,SAAS,CAACsG,gBAAiB3M,EAAKR,SAlnBzB,EAqnBdoN,eAAiB,SAACtM,GAEIA,EAAKuM,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKxI,WAEhC+E,SAAS,EAAKtL,MAAMqG,QAClC9D,EAAKuM,MAAMrC,SAAQ,SAAAsC,GACdA,EAAKxI,UAAY,EAAKvG,MAAMqG,QAC7BgD,GAAI9B,KAAKvB,QAAQ+I,EAAKC,SACrB7J,KAAK,EAAK8D,0BAKfI,GAAI9B,KAAK5B,OAAO,EAAK3F,MAAMqG,OAAQ9D,EAAKC,IACrC2C,KAAK,EAAK8D,wBAnoBH,EAuoBdgG,iBAAmB,WACjB,EAAK7G,MAAMwG,gBAAgBnC,SAAQ,SAACtF,GAElCkC,GAAI1B,WAAWhC,OAAOwB,EAAU,EAAKiB,MAAMlF,WACxCiC,KAAK,EAAK8D,uBACVW,OAAM,SAAC3H,GACN,EAAKqG,SAAS,CACZ4G,WAAY,CACVC,OAAQ,QACRC,QAASnN,EAAKoN,QAEhBC,gBAAgB,IAElBC,YAAW,kBAAM,EAAKjH,SAAS,CAC7BgH,gBAAgB,EAChBJ,WAAY,CAAEC,OAAO,GAAKC,QAAS,QAAS,WAGpD,EAAK9G,SAAS,CACZkH,cAAc,KA1pBJ,EA+pBdC,eAAiB,SAACvC,GAChB7D,GAAI/B,SAAStB,QAAQkH,EAAUG,cAC5BlI,KAAK,EAAK8D,wBAjqBD,EAwqBdhG,cAAgB,SAACC,GACfmG,GAAIhC,QAAQrB,QAAQ9C,GACnBiC,KAAK,EAAKuK,8BA1qBC,EA6qBdC,wBAA0B,SAAC3N,GACzB,IAAMe,EAAcf,EAAMoK,OAAO3K,MACjC,EAAK6G,SAAS,CAAEkB,uBAAwBzG,KA5qBxC,EAAKqF,MAAQ,CACX4B,SAAU,GACV4E,gBAAiB,GACjBY,cAAc,EACdF,gBAAgB,EAChBJ,WAAY,CACVC,OAAQ,GACRC,QAAS,IAEXlM,UAAW,GACXH,YAAa,GACbyG,uBAAwB,GACxBF,UAAW,GACXG,MAAO,GACPC,QAAS,GACTC,QAAS,GACTuC,qBAAsB,GACtBe,aAAc,CACZ3G,OAAQ,KACRsJ,SAAU,KACV/D,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAEZG,oBAAqB,GACrBP,oBAAqB,CACnBC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAEZC,kBAAmB,CACjBJ,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,KAvCF,E,qDAkrBd,WACQjH,aAAaC,OACf0D,KAAK1I,MAAM6P,iBACXnH,KAAKqB,yBACLrB,KAAKO,yBAELP,KAAK1I,MAAM6J,QAAQC,KAAK,Y,oBAI5B,WAAU,IAAD,OACP,OACE,eAAC,GAAD,2BAAyBpB,KAAK1I,OAA9B,cACE,eAAC8P,EAAA,EAAD,CAASC,OAAQrH,KAAKN,MAAMkH,eAA5B,UACE,cAACQ,EAAA,EAAQ3O,OAAT,UAAiBuH,KAAKN,MAAM8G,WAAWC,SACvC,4BACGzG,KAAKN,MAAM8G,WAAWE,aAG3B,eAACjO,EAAA,EAAD,CAAQ6O,GAAG,KAAX,UAAiBtH,KAAKN,MAAMrF,YAC1B,cAAC,EAAD,CACEG,UAAWwF,KAAKN,MAAMlF,UACtBK,sBAAuBmF,KAAK6F,qCAC5B1K,oBAAqB6E,KAAKiH,wBAC1B5M,YAAa2F,KAAKN,MAAMoB,uBACxB1F,eAAgB4E,KAAK+B,oCACrBwF,qBAAsBvH,KAAKuC,wCAC3BjH,SAAU0E,KAAKsF,+BACf/K,cAAeyF,KAAKzF,mBAIxB,cAACL,EAAA,EAAD,UACE8F,KAAKN,MAAMoH,aAET,cAAC5M,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACI,gCACE,cAAC6H,EAAA,EAAD,CAAUnJ,YAAY,YAAYG,SAAU+G,KAAKiG,yBAA0B/D,OAAK,EAACC,UAAQ,EAACC,WAAS,EAACC,QAASrC,KAAK2B,0BAClH,cAAC5J,EAAA,EAAD,CACEK,QAAS4H,KAAKuG,iBADhB,4BAMN,cAACrM,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACoN,EAAA,EAAMC,MAAP,CAAaC,UAAQ,EAArB,SACK1H,KAAKN,MAAMuB,QAAQO,KAAI,SAACC,EAAQlF,GAAT,OAAmB,cAACoL,EAAA,EAAD,CAAOrP,KAAK,OAAOsD,SAAS,gBAAgBlB,MAAO,CAAEkN,QAAS,GAAI3M,QAASwG,EAAOK,UAAWhK,QAAS,cAAC0P,EAAA,EAAD,UAAoB/F,EAAOoG,UAAftL,cAMvK,eAACuL,EAAA,EAAD,CAAOC,QAAM,EAAb,UACE,cAACD,EAAA,EAAMrP,OAAP,UACE,eAACqP,EAAA,EAAME,IAAP,WACE,cAACF,EAAA,EAAMG,WAAP,CAAkB7N,MAAM,OAAxB,kBACA,cAAC0N,EAAA,EAAMG,WAAP,CAAkB7N,MAAM,MAAxB,yBACA,cAAC0N,EAAA,EAAMG,WAAP,CAAkB7N,MAAM,MAAxB,yBACA,cAAC0N,EAAA,EAAMG,WAAP,CAAkB7N,MAAM,MAAxB,uBACA,cAAC0N,EAAA,EAAMG,WAAP,CAAkB7N,MAAM,MAAxB,2BAGJ,cAAC0N,EAAA,EAAMI,KAAP,UACClI,KAAKN,MAAMqB,MAAMS,KAAI,SAAC3H,EAAM0C,GAC3B,OAAQ,eAACuL,EAAA,EAAME,IAAP,CACNjN,MAAOlB,EAAKuM,MAAM+B,OAAS,EADrB,UAGN,cAACL,EAAA,EAAMM,KAAP,UACE,eAAClO,EAAA,EAAD,WACA,eAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,UACCP,EAAKmM,UACN,cAACwB,EAAA,EAAMC,MAAP,CAAaC,UAAQ,EAArB,SACG7N,EAAKuM,MAAM5E,KAAI,SAAC6E,EAAM9J,GAAP,OAAiB,cAACoL,EAAA,EAAD,CAAOrP,KAAK,OAAOsD,SAAS,gBAAgBlB,MAAO,CAAEkN,QAAS,GAAK3M,QAASoL,EAAKgC,eAAgBvQ,QAAS,cAAC0P,EAAA,EAAD,CAAmBzN,MAAM,MAAzB,SAAgCsM,EAAKiC,eAAzB/L,aAGvJ,eAACrC,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,EAAD,CACEP,KAAMA,EACNW,UAAW,EAAKkF,MAAMlF,UACtBrB,gBAAiB,kBAAM,EAAKqJ,gCAAgC3I,IAC5DD,2BAA4B,EAAKA,2BACjCZ,SAAU,EAAK0G,MAAM+D,oBACrBvK,sBAAuB,EAAKA,sBAC5BqO,qBAAsB,EAAK1E,qCAC3BpJ,aAAc,EAAK0K,4BACnBnK,aAAc,EAAKA,eAErB,cAACjC,EAAA,EAAD,CACEE,MAAI,EACJG,QAAS,WAAQ,EAAK+N,eAAetM,IACrCS,YAAYT,EAAKuM,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKxI,WAAS+E,SAAS,EAAKtL,MAAMqG,QACrEjD,MAAQb,EAAKuM,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKxI,WAAS+E,SAAS,EAAKtL,MAAMqG,QAAU,CAAE/C,gBAAiB,SAAY,KAC1G5C,QAAQ,QALV,SAME,cAACO,EAAA,EAAD,CACEwB,MAAOF,EAAKuM,MAAM+B,OAAS,EAAI,MAAQ,OACvC3P,KAAMqB,EAAKuM,MAAM+B,OAAS,EAAI,OAAS,2BAKjD,cAACL,EAAA,EAAMM,KAAP,UAEIvO,EAAKsJ,YAAY3B,KAAI,SAACgD,EAAW+D,GAC/B,OAAQ,eAACf,EAAA,EAAD,CAEI9M,MAAO,CAAE8N,UAAW,EAAGC,aAAc,GACvC1O,MAAOyK,EAAU3G,UAAY,EAAKvG,MAAMqG,QAAS,OAHnD,UAIK6G,EAAUkE,gBACX,cAACnQ,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAK2O,eAAevC,IACnChM,KAAK,aANJ+P,QAWrB,cAACT,EAAA,EAAMM,KAAP,UACIvO,EAAKuJ,YAAY5B,KAAI,SAACgD,EAAW+D,GAC/B,OAAQ,eAACf,EAAA,EAAD,CAEE9M,MAAO,CAAE8N,UAAW,EAAGC,aAAc,GACrC1O,MAAOyK,EAAU3G,UAAY,EAAKvG,MAAMqG,QAAS,OAHnD,UAIG6G,EAAUkE,gBACX,cAACnQ,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAK2O,eAAevC,IACnChM,KAAK,aANF+P,QAUrB,cAACT,EAAA,EAAMM,KAAP,UACEvO,EAAKwJ,UAAU7B,KAAI,SAACgD,EAAW+D,GAC7B,OAAQ,eAACf,EAAA,EAAD,CAEN9M,MAAO,CAAE8N,UAAW,EAAGC,aAAc,GACrC1O,MAAOyK,EAAU3G,UAAY,EAAKvG,MAAMqG,QAAS,OAH3C,UAIL6G,EAAUkE,gBACX,cAACnQ,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAK2O,eAAevC,IACnChM,KAAK,aANF+P,QAUX,cAACT,EAAA,EAAMM,KAAP,UACEvO,EAAKyJ,SAAS9B,KAAI,SAACgD,EAAW+D,GAC5B,OAAQ,eAACf,EAAA,EAAD,CAEN9M,MAAO,CAAE8N,UAAW,EAAGC,aAAc,GACrC1O,MAAOyK,EAAU3G,UAAY,EAAKvG,MAAMqG,QAAS,OAH3C,UAIL6G,EAAUkE,gBACX,cAACnQ,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAK2O,eAAevC,IACnChM,KAAK,aANF+P,UA9ENhM,QA2FT,cAACuL,EAAA,EAAMa,OAAP,CAAcC,WAAS,EAAvB,SACE,eAACd,EAAA,EAAME,IAAP,WACE,cAACF,EAAA,EAAMG,WAAP,UACE,cAAC,EAAD,CACEzN,UAAWwF,KAAKN,MAAMlF,UACtBqO,cAAe7I,KAAKN,MAAMkB,UAC1BzH,gBAAiB6G,KAAK8C,kCACtB9J,SAAUgH,KAAKN,MAAM6E,aAAayB,UAClC9M,sBAAuB8G,KAAK9G,sBAC5BqO,qBAAsBvH,KAAK+C,mCAC3B1K,qBAAsB,WACpB,EAAKuH,SAAS,CACZ2E,aAAc,CACZ3G,OAAQ,KACRoI,UAAW,KACX7C,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,OAIhB7J,aAAcuG,KAAKiE,4BAEvB,cAAC6D,EAAA,EAAMG,WAAP,CAAkBa,QAAQ,sB,GAx2BHvR,IAAM6I,W,4BClExB2I,G,kDAEnB,aAAe,IAAD,8BACZ,gBAWFC,oBAAsB,SAACC,GACrB,QAASA,EAAQxI,MAAM,UAbX,EAgBdyI,gBAAkB,WAEhB,OAAQ,EAAKxJ,MAAMyJ,UAAUjL,SAASiK,OAAS,GAlBnC,EAqBd1O,aAAe,SAAC2P,GACdA,EAAElF,iBACFvD,GAAI5B,KAAKf,MAAM,EAAK0B,MAAMyJ,WACzB1M,MAAK,SAAAlD,GACDA,EAAK+C,QACRD,aAAaC,MAAQ/C,EAAK+C,MAC1B,EAAKhF,MAAM6J,QAAQC,KAAK,iBAGzBF,OAAM,SAAC3H,GACN,EAAKqG,SAAS,CACZ+G,OAAQpN,EAAKoN,OAAO,KAEtBE,YAAW,kBAAM,EAAKjH,SAAS,CAC7B+G,OAAQ,SACL,SApCK,EAwCd0C,aAAe,SAACD,GACd,EAAKxJ,UAAS,SAAA0J,GAAS,MAAK,CACxBH,UAAU,2BACPG,EAAUH,WADJ,mBAERC,EAAE1F,OAAOlL,KAAO4Q,EAAE1F,OAAO3K,aAzC9B,EAAK2G,MAAQ,CACXyJ,UAAW,CACTlL,MAAO,GACPC,SAAU,IAEZyI,OAAQ,MARE,E,qDAiDd,WACE3G,KAAK1I,MAAMkJ,cAAa,GACpBnE,aAAaC,OACf0D,KAAK1I,MAAM6J,QAAQC,KAAK,e,oBAM5B,WAAS,IAAD,OACN,OACE,eAAClB,EAAA,EAAD,CAAWxF,MAAO,CAAC6O,OAAQ,QAASf,UAAW,MAAMgB,UAAU,SAA/D,UACE,qBAAK9O,MAAO,CACVkB,SAAU,WACV4M,UAAW,MACXC,aAAc,OAHhB,SAIE,cAAC1Q,EAAA,EAAD,CACEuP,GAAG,KACHlP,QAAS,kBAAM,EAAKd,MAAM6J,QAAQC,KAAK,MACvC1G,MAAO,CACL+O,OAAQ,SACRrP,MAAO,OACPmP,OAAQ,OACRG,WAAY,QACZC,SAAU,MACVC,aAAc,MACdhP,gBAAiB,UACjBb,MAAO,QAXX,oBAeF,eAAC8P,GAAA,EAAD,CAAMC,UAAQ,EAACpP,MAAO,CAAEqP,WAAY,GAAIC,cAAe,GAAIC,YAAa,GAAIC,aAAc,IAA1F,UACE,uCACA,eAACtR,EAAA,EAAD,CAAMmC,MAAOiF,KAAKN,MAAMiH,OAAxB,UACE,cAAC/N,EAAA,EAAKkC,MAAN,CACEhC,YAAY,QACZO,KAAK,QACLb,KAAK,QACLO,MAAOiH,KAAKN,MAAMzB,MAClBhF,SAAU+G,KAAKqJ,eACjB,uBACA,cAACzQ,EAAA,EAAKkC,MAAN,CACEhC,YAAY,WACZO,KAAK,WACLb,KAAK,WACLO,MAAOiH,KAAKN,MAAMxB,SAClBjF,SAAU+G,KAAKqJ,eACf,cAACjC,EAAA,EAAD,CACErM,OAAK,EACL0L,OAAQ,QACRxL,QAAS+E,KAAKN,MAAMiH,SAExB,uBACA,uBACA,cAAC5O,EAAA,EAAD,CACEK,QAAS4H,KAAKvG,aACdM,SAAOiG,KAAKgJ,oBAAoBhJ,KAAKN,MAAMyJ,UAAUlL,SAAU+B,KAAKkJ,oBAAoB,OACxF7P,KAAK,SAHP,uBAOF,uBA9BF,0BA+ByB,cAAC,KAAD,CAAM8Q,GAAG,UAAT,+B,GAjHE5S,IAAM6I,WCEpBgK,G,kDAEnB,aAAe,IAAD,8BACZ,gBAaFpB,oBAAsB,SAACC,GACrB,QAASA,EAAQxI,MAAM,UAfX,EAkBd4J,iBAAmB,WAClB,OAAQ,EAAK3K,MAAM4K,WAAWlM,WAAW+J,OAAS,GAAK,EAAKzI,MAAM4K,WAAWjM,UAAU8J,OAAS,GAAK,EAAKzI,MAAM4K,WAAWpM,SAASiK,OAAS,GAnBhI,EAsBdkB,aAAe,SAACD,GACd,EAAKxJ,UAAS,SAAA0J,GAAS,MAAK,CAC1BgB,WAAW,2BACNhB,EAAUgB,YADL,mBAEPlB,EAAE1F,OAAOlL,KAAO4Q,EAAE1F,OAAO3K,aA1BlB,EA+BdU,aAAe,SAAC2P,GACdA,EAAElF,iBACAvD,GAAI5B,KAAKZ,OAAO,EAAKuB,MAAM4K,YAC1B7N,MAAK,SAAAlD,GACDA,EAAK+C,QACND,aAAaC,MAAQ/C,EAAK+C,MAC1B,EAAKhF,MAAM6J,QAAQC,KAAK,iBAG3BF,OAAM,SAAC3H,GACHA,GACD,EAAKqG,SAAS,CACZ+G,OAAQpN,EAAKoN,OAAO,KAEtBE,YAAW,WACT,EAAKjH,SAAS,CACZ+G,OAAQ,SACL,MAGP,EAAK/G,SAAS,CACZ+G,OAAQ,oEAjDhB,EAAKjH,MAAQ,CACX4K,WAAY,CACVlM,WAAY,GACZC,UAAW,GACXJ,MAAO,GACPC,SAAU,IAEZyI,OAAQ,MAVE,E,qDA0Dd,WACE3G,KAAK1I,MAAMkJ,cAAa,K,oBAG1B,WAAW,IAAD,OAER,OACE,eAACN,EAAA,EAAD,CAAWxF,MAAO,CAAC6O,OAAQ,QAASf,UAAW,MAAOgB,UAAU,SAAhE,UACE,qBAAK9O,MAAO,CACVkB,SAAU,WACV4M,UAAW,MACXC,aAAc,OAHhB,SAKE,cAAC1Q,EAAA,EAAD,CACEuP,GAAG,KACHlP,QAAS,kBAAM,EAAKd,MAAM6J,QAAQC,KAAK,MACvC1G,MAAO,CACL+O,OAAQ,SACRrP,MAAO,OACPmP,OAAQ,OACRG,WAAY,QACZC,SAAU,MACVC,aAAc,MACdhP,gBAAiB,UACjBb,MAAO,QAXX,oBAeF,eAAC8P,GAAA,EAAD,CAAMC,UAAQ,EAACpP,MAAO,CAAEqP,WAAY,GAAIC,cAAe,GAAIC,YAAa,GAAIC,aAAc,IAA1F,UACE,yCACA,eAACtR,EAAA,EAAD,CAAMmC,MAAOiF,KAAKN,MAAMiH,OAAxB,UACE,cAAC/N,EAAA,EAAKkC,MAAN,CACEhC,YAAY,aACZO,KAAK,OACLb,KAAK,aACLO,MAAOiH,KAAKN,MAAMtB,WAClBnF,SAAU+G,KAAKqJ,eAEjB,uBACA,cAACzQ,EAAA,EAAKkC,MAAN,CACEhC,YAAY,YACZO,KAAK,OACLb,KAAK,YACLO,MAAOiH,KAAKN,MAAMrB,UAClBpF,SAAU+G,KAAKqJ,eAEjB,uBACA,cAACzQ,EAAA,EAAKkC,MAAN,CACEhC,YAAY,QACZO,KAAK,QACLb,KAAK,QACLO,MAAOiH,KAAKN,MAAMzB,MAClBhF,SAAU+G,KAAKqJ,eAEjB,uBACA,cAACzQ,EAAA,EAAKkC,MAAN,CACEhC,YAAY,WACZO,KAAK,WACLb,KAAK,WACLO,MAAOiH,KAAKN,MAAMxB,SAClBjF,SAAU+G,KAAKqJ,eAEjB,cAACjC,EAAA,EAAD,CACErM,OAAK,EACL0L,OAAQ,QACRxL,QAAS+E,KAAKN,MAAMiH,SAEtB,uBACA,uBACA,cAAC5O,EAAA,EAAD,CACEK,QAAS4H,KAAKvG,aACdM,SAAOiG,KAAKgJ,oBAAoBhJ,KAAKN,MAAM4K,WAAWrM,SAAU+B,KAAKqK,qBAAqB,OAC1FhR,KAAK,SAHP,+BAOF,uBAhDF,6BAiD4B,cAAC,KAAD,CAAM8Q,GAAG,SAAT,6B,GAzIA5S,IAAM6I,W,UCH3B,YAAC9I,GAAW,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAExB,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QAASR,EAAMQ,QAJjB,UAME,cAACH,EAAA,EAAMc,OAAP,6BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UAIE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,iDACA,cAACD,EAAA,EAAKkC,MAAN,CACEC,MAAOzD,EAAM0D,oBAAsB,CAAEC,QAAS,+BAAgCC,SAAU,SAAY,KACpGjC,SAAU3B,EAAM6D,oBAChBpC,MAAOzB,EAAM+C,YACbvB,YAAY,4BAGhB,eAACF,EAAA,EAAKC,MAAN,WACE,iDACA,cAACoJ,EAAA,EAAD,CACAnJ,YAAY,mBACZG,SAAU3B,EAAMiT,iBAChBrI,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAAS/K,EAAMkT,4BAKvB,eAAC7S,EAAA,EAAMyB,QAAP,WACE,cAACrB,EAAA,EAAD,CACEK,QACE,WACEV,GAAQ,GACRJ,EAAMmT,YAJZ,oBAQA,cAAC1S,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,GACR5B,GAAQ,GACRJ,EAAMgE,SAAShC,IAEjBI,UAAQ,EANV,mC,GCrCgCwF,sBAAY,CAClDC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,G,GAAAA,qBAAsBC,G,GAAAA,MAQxBC,G,4MACJC,MAAQ,G,EAERC,cAAgB,kBAAM,EAAKC,SAAS,CAAEC,OAAO,K,EAC7CC,cAAgB,kBAAM,EAAKF,SAAS,CAAEC,OAAO,K,4CAE7C,WAAU,IACAE,EAAaC,KAAK1I,MAAlByI,SACAF,EAAUG,KAAKN,MAAfG,MAER,OACE,cAAC,GAAD,CAAOI,YAAY,SAAnB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,CACEL,MAAOA,EAAQ,MAAQ,KACvBvF,UAAWuF,EACX3E,UAAW2E,EACXM,WAAYN,EACZvH,KAAK,QACL2D,OAAQ+D,KAAK1I,MAAM2E,OACnBH,aAAckE,KAAK1I,MAAMwE,eAE1BiE,W,GAtBoBxI,IAAM6I,WAiC/BsK,G,4MACJhL,MAAQ,G,EAERiL,kBAAoB,kBAAM,EAAK/K,SAAS,CAAEgL,eAAe,K,EAEzDC,aAAe,kBAAM,EAAKjL,SAAS,CAAEgL,eAAe,K,4CAEpD,WAAU,IAAD,OACC7K,EAAaC,KAAK1I,MAAlByI,SACA6K,EAAkB5K,KAAKN,MAAvBkL,cAER,OACE,cAAC,GAAD,CAAOE,GAAG,SAAV,SACE,eAACC,GAAA,EAAQC,SAAT,WACE,eAACD,GAAA,EAAD,CACEzD,GAAI9L,IACJyP,UAAU,UACVC,OAAQlL,KAAK2K,kBACbQ,UAAQ,EACRC,QAASR,EALX,UAOE,eAACpP,EAAA,EAAKK,KAAN,eAAamE,KAAK1I,MAAMwE,aAAX,uBAA0CkE,KAAK1I,MAAMwE,cAAiB,MACnF,cAACN,EAAA,EAAKK,KAAN,CAAWyL,GAAG,IAAI5M,MAAO,CAAEX,MAAO,WAAW3B,QAAS,WAAQ,EAAKd,MAAM2E,UAAzE,wBAEF,cAAC8O,GAAA,EAAQM,OAAT,CAAgBC,OAAQV,EAAxB,SACE,eAAC1K,EAAA,EAAD,CAAWxF,MAAO,CAAE+O,OAAQ,SAA5B,UACI,cAACjO,EAAA,EAAD,CAAM2E,WAAS,EAAC7H,KAAK,QAArB,SACE,cAACkD,EAAA,EAAKK,KAAN,CAAWzD,QAAS4H,KAAK6K,aAAzB,SACE,cAACtS,EAAA,EAAD,CAAMC,KAAK,gBAGhBuH,gB,GA/BexI,IAAM6I,WA4C9BC,GAAsB,SAAC/I,GAE3B,OACE,eAAC,GAAD,WACE,cAAC,GAAD,2BAAsBA,GAAtB,aAA8BA,EAAMyI,YACpC,cAAC,GAAD,2BAAqBzI,GAArB,aAA6BA,EAAMyI,gBASpBwL,G,kDAEnB,aAAe,IAAD,8BACZ,gBAWFlK,uBAAyB,WACvB,OAAOV,GAAI5B,KAAKxC,QACfE,MAAK,SAAAlD,GAAI,OAAI,EAAKqG,SAAS,CAAE0B,SAAU/H,EAAKA,WAdjC,EAiBdiS,uBAAyB,WACvB,EAAKlU,MAAMkJ,cAAa,GACxBG,GAAI5B,KAAKR,qBACR9B,MAAK,SAAAlD,GACJ,EAAKjC,MAAMkJ,cAAa,GACxB,EAAKZ,SAAS,CACZ6L,SAAUlS,EAAKA,WAvBP,EA6Bd0M,yBAA2B,SAAC3M,EAAOC,GACjC,EAAKqG,SAAS,CAAEsG,gBAAiB3M,EAAKR,SA9B1B,EAiCdkO,wBAA0B,SAAC3N,GAEzB,IAAMe,EAAcf,EAAMoK,OAAO3K,MAMjC,EAAK6G,SAAS,CAAEvF,YAAaA,KAzCjB,EA4Cd2I,6BAA+B,WAC7B,OAAO,EAAKtD,MAAM4B,SAASE,KAAI,SAAAI,GAAI,MAAK,CACtCF,IAAKE,EAAK9H,GACVN,KAAMoI,EAAKf,WAAWiB,UACtB/I,MAAO6I,EAAK9H,QAhDF,EAmDd4R,sBAAwB,WACtB,EAAK9L,SAAS,CAACvF,YAAa,MApDhB,EAuDdkM,iBAAmB,SAAC/L,GAClB,EAAKkF,MAAMwG,gBAAgBnC,SAAQ,SAACtF,EAAUlC,GAC5CoE,GAAI1B,WAAWhC,OAAOwB,EAAUjE,OAzDtB,EA6DdmR,iBAAmB,WACjBhL,GAAIhC,QAAQ1B,OAAO,CAACzE,KAAM,EAAKkH,MAAMrF,YAAauR,WAAY,EAAKtU,MAAMqG,SACtElB,MAAK,SAAAlD,GACJ,IAAMiB,EAAYjB,EAAKA,KAAKO,GAC5B,EAAKyM,iBAAiB/L,MAEvBiC,KAAK,EAAK+O,yBAnED,EAsEdK,mBAAqB,WACnB,OAAO,EAAKnM,MAAM+L,SAASjK,KAAI,SAACsK,EAASvP,GAEvC,OACE,cAACsN,GAAA,EAAD,CAEEpD,OAAQqF,EAAQjL,WAAWrI,KAC3BkC,MAAO,CAAE6O,OAAQ,QAGjBnR,QAAS,WACP,IAAMoC,EAAYsR,EAAQhS,GAC1B,EAAKiS,sBAAsBvR,KAPxB+B,OA3EC,EAyFdwP,sBAAwB,SAACvR,GACvB,EAAKlD,MAAM6J,QAAQC,KAAnB,oBAAqC5G,KA1FzB,EAwGdwR,gBAAkB,WAChB,OACE,qCACE,cAAC,GAAD,CAAOlB,GAAG,SAAV,SACI,eAACjB,GAAA,EAAKpC,MAAN,CAAYwE,YAAa,EAAGvR,MAAO,CAAE8N,UAAW,MAAOC,aAAc,OAArE,UACC,EAAKoD,qBACJ,cAACK,GAAD,CACElR,oBAAqB,EAAK0E,MAAMyM,uBAChCrU,QAAS,cAAC+R,GAAA,EAAD,CAAM9P,MAAM,OAAO0M,OAAQ,iCAAM,cAAClO,EAAA,EAAD,CAAMC,KAAK,OAAOuB,MAAM,SAAS,cAACtB,EAAA,EAAD,CAAQsB,MAAM,OAAd,8BAC3EqS,4BAA0B,EAC1B7B,iBAAkB,EAAKtE,yBACvBuE,gBAAiB,EAAKxH,+BACtB7H,oBAAqB,EAAK8L,wBAC1B5M,YAAa,EAAKqF,MAAMrF,YACxBiB,SAAU,EAAKqQ,iBACflB,SAAU,EAAKiB,6BAIvB,cAAC,GAAD,CAAOzL,YAAY,SAAnB,SACI,eAAC4J,GAAA,EAAKpC,MAAN,CAAYwE,YAAa,EAAGvR,MAAO,CAAE8N,UAAW,IAAhD,UACC,EAAKqD,qBACJ,cAACK,GAAD,CACElR,oBAAqB,EAAK0E,MAAMyM,uBAChCrU,QAAS,cAAC+R,GAAA,EAAD,CAAM9P,MAAM,OAAO0M,OAAQ,iCAAM,cAAClO,EAAA,EAAD,CAAMC,KAAK,OAAOuB,MAAM,SAAS,cAACtB,EAAA,EAAD,CAAQsB,MAAM,OAAd,8BAC3EqS,4BAA0B,EAC1B7B,iBAAkB,EAAKtE,yBACvBuE,gBAAiB,EAAKxH,+BACtB7H,oBAAqB,EAAK8L,wBAC1B5M,YAAa,EAAKqF,MAAMrF,YACxBiB,SAAU,EAAKqQ,iBACflB,SAAU,EAAKiB,iCApI3B,EAAKhM,MAAQ,CACX+L,SAAU,GACVnK,SAAU,GACVjH,YAAa,GACb6L,gBAAiB,GACjBiG,wBAAwB,GARd,E,qDA6Fd,WACM9P,aAAaC,OACf0D,KAAK1I,MAAM6P,iBACXnH,KAAKwL,yBACLxL,KAAKqB,0BAELrB,KAAK1I,MAAM6J,QAAQC,KAAK,Y,oBA8C5B,WACE,OACE,cAAC,GAAD,2BAAyBpB,KAAK1I,OAA9B,aACG0I,KAAKgM,yB,GAtJ4BzU,IAAM6I,WCnGjCiM,I,cAZD,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,UAAWlU,EAAqC,EAArCA,QAAS2B,EAA4B,EAA5BA,MAAOwS,EAAqB,EAArBA,eAEzC,OACE,mCACE,sBAAKC,UAAS,WAAMD,EAAc,0BAAsBD,GAAc,GAAxD,YAA8DA,EAA9D,YAA2EvS,EAA3E,oBAAoG0S,aAAcrU,EAASA,QAASA,EAAlJ,UACE,qBAAKoU,UAAS,UAAKF,EAAL,YAAkBvS,EAAlB,+BACd,qBAAKyS,UAAS,UAAKF,EAAL,YAAkBvS,EAAlB,uCC+BP2S,GAnCQ,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAAiB,EACzBtV,mBAAS,GADgB,mBACpEuV,EADoE,KACjDC,EADiD,KAGrEC,EAAUJ,EAAOE,GACpBG,MADa,WACHH,EAAoB,EADjB,MACuB,GACpCG,MAAM,KAAK,GAERC,EAAc,SAAAb,GAClB,IAAMc,EAAkBP,EAAO1E,OAAQ,EACtB,SAAdmE,EAECU,EADwB,IAAtBD,EACmBK,EAEAL,EAAoB,GAEpB,UAAdT,GAEPU,EADED,IAAsBK,EACH,EAEAL,EAAoB,IAK/C,OACE,sBAAKM,WAAUV,EAASW,oBAAmBV,EAAiBJ,UAAU,4BAAtE,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,cAAC,GAAD,CAAOD,gBAAc,EAACD,UAAU,OAAOvS,MAAO+S,EAAY1U,QAAS,kBAAM+U,EAAY,WACrF,cAAC,GAAD,CAAOZ,gBAAc,EAACD,UAAU,QAAQvS,MAAO+S,EAAY1U,QAAS,kBAAM+U,EAAY,YACtF,qBAAKX,UAAU,gBAAgBe,IAAKN,EAASO,IAAKX,EAAOE,S,8BChBzDU,GAAiB,CAAC,qDAAsD,qCAAsC,oCAAqC,0CAA2C,4CAA6C,2CAA4C,wC,GAErPvO,sBAAY,CAClDC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,G,GAAAA,qBAAsBC,G,GAAAA,MAQxBkO,GAAkB,CACtB,CACEjH,OAAQ,cACRkH,YACE,kCACF5T,MAAO,QAET,CACE0M,OAAQ,cACRkH,YACE,4CACF5T,MAAO,QAET,CACE0M,OAAQ,YACRkH,YACE,0BACF5T,MAAO,QAET,CACE0M,OAAQ,WACRkH,YACE,4CACF5T,MAAO,SAIL6T,GAAkB,SAACtW,GACvB,OACE,eAAC4I,EAAA,EAAD,CAAW1G,MAAI,EAAf,UACE,cAACf,EAAA,EAAD,CACE6O,GAAG,KACHrM,QAAQ,OACRX,UAAQ,EACRI,MAAO,CACLiP,SAAUrS,EAAM8H,OAAS,MAAQ,MACjCyO,WAAY,OACZpF,aAAc,EACdD,WAAWlR,EAAM8H,OAAS,OAC1BrF,MAAO,aAGX,cAACtB,EAAA,EAAD,CACE6O,GAAG,KACHrM,QAAQ,2DACRX,UAAQ,EACRI,MAAO,CACLiP,SAAUrS,EAAM8H,OAAS,QAAU,MACnCyO,WAAY,SACZpF,aAAc,EACdD,UAAWlR,EAAM8H,OAAS,QAAU,WAGxC,eAACrH,EAAA,EAAD,CACEK,QAAS,WACPd,EAAM6J,QAAQC,KAAK,YAGrB1G,MAAO,CACL8N,UAAWlR,EAAM8H,OAAS,MAAQ,SAEpCjH,SAAO,EAACG,KAAMhB,EAAM8H,OAAS,SAAW,OAR1C,wBAUE,cAAC7G,EAAA,EAAD,CAAMC,KAAK,uBAUbiH,G,4MACJC,MAAQ,G,EAERC,cAAgB,kBAAM,EAAKC,SAAS,CAAEC,OAAO,K,EAC7CC,cAAgB,kBAAM,EAAKF,SAAS,CAAEC,OAAO,K,4CAE7C,WAAU,IAAD,OACCE,EAAaC,KAAK1I,MAAlByI,SACAF,EAAUG,KAAKN,MAAfG,MAGV,OACI,eAAC,GAAD,CAAOI,YAAY,SAAnB,UACE,cAAC6N,GAAA,EAAD,CACEC,MAAM,EADR,SAGE,eAACC,GAAA,EAAD,CACE1T,UAAQ,EACRkP,UAAU,SACV9O,MAAO,CAAEuT,UAAW,IAAKrG,QAAS,WAClCuD,UAAQ,EAJV,UAME,cAAC3P,EAAA,EAAD,CACEqE,MAAOA,EAAQ,MAAQ,KACvBvF,UAAWuF,EACX3E,UAAW2E,EACXM,WAAYN,EACZvH,KAAK,QALP,SAOE,cAAC4H,EAAA,EAAD,UACE,eAAC1E,EAAA,EAAKK,KAAN,CAAWD,SAAS,QAApB,UACE,cAAC7D,EAAA,EAAD,CAAQK,QAAS,WAAQ,EAAKd,MAAM6J,QAAQC,KAAK,WAAakG,GAAG,IAAIhN,UAAWuF,EAAhF,oBAGA,cAAC9H,EAAA,EAAD,CAAQK,QAAS,WAAQ,EAAKd,MAAM6J,QAAQC,KAAK,YAAckG,GAAG,IAAIhN,UAAWuF,EAAO1H,QAAS0H,EAAOnF,MAAO,CAAEC,WAAY,SAA7H,4BAMN,cAAC,GAAD,eAAqBqF,KAAK1I,aAG7ByI,S,GA3CsBK,aAqDzBsK,G,4MACJhL,MAAQ,G,EAERiL,kBAAoB,kBAAM,EAAK/K,SAAS,CAAEgL,eAAe,K,EAEzDC,aAAe,kBAAM,EAAKjL,SAAS,CAAEgL,eAAe,K,4CAEpD,WAAU,IAAD,OACC7K,EAAaC,KAAK1I,MAAlByI,SACA6K,EAAkB5K,KAAKN,MAAvBkL,cAER,OACE,cAAC,GAAD,CAAOtD,GAAIyD,KAAQC,SAAUF,GAAG,SAAhC,SACE,eAACC,GAAA,EAAQC,SAAT,WACE,eAACD,GAAA,EAAD,CACEzD,GAAI9L,IACJyP,UAAU,UACV3Q,UAAQ,EACR4Q,OAAQlL,KAAK2K,kBACbQ,UAAQ,EACRC,QAASR,EANX,UAQE,cAACpP,EAAA,EAAKK,KAAN,CAAWyL,GAAG,IAAIlP,QAAS,WAAQ,EAAKd,MAAM6J,QAAQC,KAAK,WAA3D,oBACA,cAAC5F,EAAA,EAAKK,KAAN,CAAWyL,GAAG,IAAIlP,QAAS,WAAQ,EAAKd,MAAM6J,QAAQC,KAAK,YAA3D,wBAGF,eAAC2J,GAAA,EAAQM,OAAT,CAAgBC,OAAQV,EAAxB,UACE,eAACoD,GAAA,EAAD,CACE1T,UAAQ,EACRkP,UAAU,SACV9O,MAAO,CAAEuT,UAAW,IAAKrG,QAAS,WAClCuD,UAAQ,EAJV,UAMA,cAACjL,EAAA,EAAD,UACE,cAAC1E,EAAA,EAAD,CAAMlB,UAAQ,EAACY,UAAQ,EAACiF,WAAS,EAAC7H,KAAK,QAAvC,SACE,cAACkD,EAAA,EAAKK,KAAN,CAAWzD,QAAS4H,KAAK6K,aAAzB,SACE,cAACtS,EAAA,EAAD,CAAMC,KAAK,kBAIjB,cAAC,GAAD,2BAAqBwH,KAAK1I,OAA1B,IAAiC8H,QAAM,QAEtCW,c,GA1CiBK,aAsDxBC,GAAsB,SAAC/I,GAE3B,OACE,eAAC,GAAD,WACE,cAAC,GAAD,2BAAsBA,GAAtB,aAA8BA,EAAMyI,YACpC,cAAC,GAAD,2BAAqBzI,GAArB,aAA6BA,EAAMyI,gBASpBmO,G,uKAEnB,WACElO,KAAK1I,MAAMkJ,cAAa,K,oBAG1B,WAAU,IAAD,OAEP,OACE,eAAC,GAAD,2BAAyBR,KAAK1I,OAA9B,cACE,cAAC0W,GAAA,EAAD,CAAStT,MAAO,CAAEkN,QAAS,WAAauD,UAAQ,EAAhD,SACE,eAACjR,EAAA,EAAD,CAAMiU,WAAS,EAACC,WAAS,EAACC,cAAc,SAAxC,UACE,cAACL,GAAA,EAAD,CAAStT,MAAO,CAAEkN,QAAS,OAASuD,UAAQ,EAA5C,SACE,eAACjR,EAAA,EAAK8N,IAAN,WACE,cAAC,GAAD,CAAO8C,GAAG,SAAV,SACE,cAACjB,GAAA,EAAKpC,MAAN,CACEqC,UAAQ,EACRwE,MAAOZ,GACPhT,MAAO,CACL6T,SAAU,OACV9E,OAAQ,oBACR+E,SAAU,WAEhB,cAAC,GAAD,CAAOvO,YAAY,SAAnB,SACE,cAAC4J,GAAA,EAAKpC,MAAN,CACEqC,UAAQ,EACRwE,MAAOZ,GACPhT,MAAO,CACL6T,SAAU,SACV9E,OAAQ,oBACR+E,SAAU,gBAKlB,eAACtU,EAAA,EAAK8N,IAAN,WACA,eAAC9N,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC3B,EAAA,EAAD,CAAQ6O,GAAG,KAAK5M,MAAO,CAAEiP,SAAU,MAAOnB,UAAW,OAArD,gCAGA,oBAAG9N,MAAO,CAAEiP,SAAU,UAAtB,wBAEE,+BACE,iGACA,oJACA,wFAGJ,cAAClR,EAAA,EAAD,CAAQ6O,GAAG,KAAK5M,MAAO,CAAEiP,SAAU,OAAnC,0BAGA,mBAAGjP,MAAO,CAAEiP,SAAU,UAAtB,SACE,+BACE,qFACA,yFACA,6GAIJ,cAACzP,EAAA,EAAKC,OAAN,CAAanC,QAAQ,QAAQoC,MAAO,EAApC,SACE,cAAC,GAAD,CAAgByS,OAAQY,UAG9B,cAACvT,EAAA,EAAK8N,IAAN,UACE,cAAC9N,EAAA,EAAKC,OAAN,CAAaqP,UAAU,SAAvB,SACE,eAACzR,EAAA,EAAD,CACEK,QAAS,WACP,EAAKd,MAAM6J,QAAQC,KAAK,YAE1B1G,MAAO,CAAE+O,OAAQ,SACjBnR,KAAK,OALP,wBAOE,cAACC,EAAA,EAAD,CAAMC,KAAK,4BAOrB,cAACwV,GAAA,EAAD,CAAS1T,UAAQ,EAAC6Q,UAAQ,EAACzQ,MAAO,CAAEkN,QAAS,WAA7C,SACE,cAAC1H,EAAA,EAAD,UACE,cAAChG,EAAA,EAAD,CAAMuU,SAAO,EAACnU,UAAQ,EAAC8T,WAAS,EAAhC,SACE,cAAClU,EAAA,EAAK8N,IAAN,UACE,eAAC9N,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC3B,EAAA,EAAD,CAAQ6B,UAAQ,EAACgN,GAAG,KAAKrM,QAAQ,iDACjC,eAACyT,GAAA,EAAD,CAAMC,MAAI,EAACrU,UAAQ,EAAnB,UACE,cAACoU,GAAA,EAAK7S,KAAN,CAAWyL,GAAG,IAAIsH,KAAK,0CAA0ClL,OAAO,SAAxE,2BACA,cAACgL,GAAA,EAAK7S,KAAN,CAAWyL,GAAG,IAAIsH,KAAK,mCAAmClL,OAAO,SAAjE,2C,GAvFqBnM,IAAM6I,W,sCClNzCyO,G,4MAEJnP,MAAQ,CACNoP,gBAAgB,EAChBjR,QAAS,KACTiE,UAAW,M,EAGbqF,eAAiB,WACfxG,GAAI5B,KAAKT,UACN7B,MAAK,SAAAlD,GACJ,EAAKqG,SAAS,CACZ/B,QAASgE,SAAStI,EAAKA,KAAKO,IAC5BgI,UAAWvI,EAAKA,KAAKsH,WAAWiB,gB,EAIxC7F,OAAS,WACPI,aAAa0S,QACb,EAAKzX,MAAM6J,QAAQC,KAAK,W,EAG1BZ,aAAe,SAACwO,GACd,EAAKpP,SAAS,CAACkP,eAAgBE,K,EAWjChI,4BAA8B,WAC5B,EAAK1P,MAAM6J,QAAQC,KAAnB,c,uDATF,WACM/E,aAAaC,MACf0D,KAAKmH,iBACqC,MAAjCnH,KAAK1I,MAAM2X,SAASC,UAAqD,YAAjClP,KAAK1I,MAAM2X,SAASC,UACrElP,KAAK1I,MAAM6J,QAAQC,KAAK,Y,oBAS5B,WAAW,IAAD,OAER,OACE,gCACE,cAAC+N,GAAA,EAAD,CAAQ7U,UAAQ,EAAC8U,OAAQpP,KAAKN,MAAMoP,eAApC,SACE,cAACO,GAAA,EAAD,CAAQ/U,UAAQ,EAACW,QAAQ,cAE3B,eAAC,KAAD,WACE,cAAC,KAAD,CACEqU,KAAK,SACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGrI,eAAgB,EAAKA,eACrB2H,eAAgB,EAAKpP,MAAMoP,eAC3BtO,aAAc,EAAKA,aACnB3C,QAAS,EAAK6B,MAAM7B,cAChD,cAAC,KAAD,CACEyR,KAAK,UACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACKA,GADL,IAECV,eAAgB,EAAKpP,MAAMoP,eAC3BtO,aAAc,EAAKA,mBAC7C,cAAC,KAAD,CACE8O,KAAK,gBACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGrI,eAAgB,EAAKA,eACrB2H,eAAgB,EAAKpP,MAAMoP,eAC3BtO,aAAc,EAAKA,aACnB7C,OAAQ,EAAK+B,MAAM7B,QACnB9B,OAAQ,EAAKiL,4BACbhL,SAAU,mBACVF,aAAc,EAAK4D,MAAMoC,UACzB7F,OAAQ,EAAKA,aACzC,cAAC,KAAD,CACEqT,KAAK,YACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGrI,eAAgB,EAAKA,eACrB2H,eAAgB,EAAKpP,MAAMoP,eAC3BtO,aAAc,EAAKA,aACnB7C,OAAQ,EAAK+B,MAAM7B,QACnB/B,aAAc,EAAK4D,MAAMoC,UACzB7F,OAAQ,EAAKA,aACzC,cAAC,KAAD,CACEqT,KAAK,IACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGrI,eAAgB,EAAKA,eACrB2H,eAAgB,EAAKpP,MAAMoP,eAC3BtO,aAAc,EAAKA,aACnB7C,OAAQ,EAAK+B,MAAM7B,QACnB/B,aAAc,EAAK4D,MAAMoC,UACzB7F,OAAQ,EAAKA,uB,GA5FjC1E,IAAM6I,WAoGTqP,gBAAWZ,ICpGXa,GAZS,SAAAC,GAClBA,GAAeA,aAAuB7Q,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CmT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCAdM,IAASV,OACP,cAAC,KAAD,UACA,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,QAEgBC,SAASC,eAAe,SAM5CV,O","file":"static/js/main.af401203.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction TaskModal(props) {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button \n          floated='left'\n          icon\n          labelPosition = 'left'\n          primary\n          onClick={props.onTriggerButtonClick}\n          size='small'>\n            <Icon name='plus square' /> Add Task\n        </Button>\n      }\n    >\n      <Modal.Header>Create new task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input \n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n                />\n            </Form.Field>\n            {props.createDropdowns()}\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n        // color='black' \n        onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n            type='submit'\n            icon='checkmark'\n            onClick={(event, data) => {\n              const text = data.taskName\n              setOpen(false)\n              props.handleSubmit(event, text)\n              }}\n            positive>\n          Create task\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default TaskModal","import React, {useState} from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction EditTaskModal(props) {\n  const [open, setOpen] = useState(false)\n\n\n  const handleTriggerButtonClick = () => {\n    props.putSelectedTaskDataInState(props.task.id)\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button\n          icon\n          onClick={handleTriggerButtonClick}\n          floated='right'>\n          <Icon name='pencil square' />\n        </Button>\n      }\n    >\n    <Modal.Header>Edit task</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input\n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n              />\n            </Form.Field>\n            {props.createDropdowns(props.task)}\n        </Form>\n      </Modal.Description>\n    </Modal.Content>\n      <Modal.Actions>\n        <Button\n          icon\n          labelPosition='right'\n          color='red'\n          floated='left'\n          onClick={() => {\n            const task = props.task\n            setOpen(false)\n            props.handleDelete(task)\n          }}\n        >\n          Delete task\n        <Icon name='trash alternate outline' />\n        </Button>\n        <Button  \n          onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event, data) => {\n            const task = props.task\n            setOpen(false)\n            props.handleSubmit(event, task)\n          }}\n          positive>\n          Update task\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditTaskModal\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Grid } from 'semantic-ui-react'\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button\n      color='red'\n      floated='left'>\n      <Icon name='trash alternate outline'/>\n      Delete project</Button>}\n    >\n      <Header icon>\n        <Icon name='trash alternate outline' />\n        <br/>\n        Are you sure you want to delete this project?\n      </Header>\n      <Modal.Content>\n      <Grid>\n        <Grid.Column width={3}/>\n        <Grid.Column width={10}>\n        <p>\n          {`Delete \"${props.projectName}\" along with all associated tasks?`}\n        </p>\n          </Grid.Column>\n          <Grid.Column width={3}/>\n      </Grid>\n      \n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='grey' inverted onClick={() => setOpen(false)}>\n          <Icon name='remove' /> No, go back\n        </Button>\n        <Button color='red' inverted \n        onClick={() => \n        {props.deleteProject(props.projectId)\n        setOpen(false)}}>\n          <Icon name='checkmark' /> Yes, delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\nimport deleteProjectWarningModal from './DeleteProjectWarningModal'\n\n\nconst EditProjectModal = (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleTriggerButtonClick = () => {\n    // props.putSelectedProjectDataInState(props.project.id)\n    props.populateMembersToEdit()\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => {setOpen(true)}}\n      open={open}\n      trigger={<span><Button\n        style={{ marginLeft: '1.5vh', backgroundColor: \"white\" }}\n        icon\n        color='white'\n        size='big'\n        onClick={handleTriggerButtonClick}\n        >\n          <Icon \n            name='pencil square' />\n      </Button></span>}\n    >\n      <Modal.Header>Edit Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Project must have a name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n                {props.createDropdown}  \n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        {deleteProjectWarningModal(\n          {\n            projectName: props.projectName, \n            projectId: props.projectId, \n            deleteProject: props.deleteProject\n          }\n        )}\n        <Button\n          onClick={() => {\n            setOpen(false)               \n          // props.onCancel()\n          }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Update project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditProjectModal","import React from 'react'\nimport { Menu, Button } from 'semantic-ui-react'\n\nconst Nav = props => {\n  return(\n    <Menu borderless attached='top' style={{ border: 'none'}}>\n      <Menu.Menu position='right'>\n        <Menu.Item>\n        {props.userFullName ? `Logged in as ${props.userFullName}` : ''}\n        </Menu.Item>\n        {props.onBack &&\n          <Menu.Item>\n            <Button\n              onClick={props.onBack}\n              floated=\"right\"\n            >{props.backText}</Button>\n          </Menu.Item>}\n        <Menu.Item>\n          <Button\n            onClick={props.logOut}\n          >Log out</Button>\n        </Menu.Item>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nexport default Nav","// export const API_HOST = `http://localhost:3001/api/v1`;\nexport const API_HOST = `https://enigmatic-fortress-89780.herokuapp.com/api/v1`;\n\nexport const REQUEST_HEADERS = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const AUTH_HEADERS = { \n  headers: { \n    ...REQUEST_HEADERS.headers, \n    'Authorization': `Bearer ${localStorage.token}` \n  }\n};","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  const fetchPromise = fetch(`${API_HOST}/projects`, AUTH_HEADERS)\n  const parsedFetchPromise = fetchPromise.then(res => res.json())\n  return parsedFetchPromise;\n}\n\nexport const show = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, AUTH_HEADERS)\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const create = (body) => {\n  return fetch(`${API_HOST}/projects`, {\n    ...AUTH_HEADERS, \n    method: 'POST',\n    body: JSON.stringify(body)\n  }).then(res => res.json())\n}\n\nexport const destroy = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS\n  })\n}\n\nexport const update = (projectId, projectName, projectStartDate) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      name: projectName,\n      // start_date: projectStartDate\n    }),\n    ...AUTH_HEADERS\n  }).then(res => res.json())\n}\n\n// export const AUTH_HEADERS = \n// {\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.token}`\n//   }\n// };\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const create = (userTask) => {\n  return fetch(`${API_HOST}/user_tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify(userTask)\n  })\n  .then(res => res.json())\n}\n\nexport const destroy = (userTaskId) => {\n  return fetch(`${API_HOST}/user_tasks/${userTaskId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS})\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\n\nexport const create = (userId, taskId) => {\n\n  // Example object destructuring. \n  // If I pass an object {user_id: X, task_id: Y} as an argument when this function is called, \n  // I can put {user_id, task_id} in the parameters here, and I will end up with \n  // two variables with those key names + values already assigned\n  // const {user_id, task_id} = body \n\n  return fetch(`${API_HOST}/flags`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({user_id: userId, task_id: taskId})\n  })\n}\n\nexport const destroy = (flagId) => {\n  return fetch(`${API_HOST}/flags/${flagId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/functions`, AUTH_HEADERS)\n  .then(res => res.json())\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/users/`, AUTH_HEADERS)\n    .then(res => res.json())\n}\n\nexport const login = ({email, password}) => {\n  return fetch(`${API_HOST}/login`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const signup = ({first_name, last_name, email, password}) => {\n  return fetch(`${API_HOST}/signup`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const profile = () => {\n  return fetch(`${API_HOST}/profile`, AUTH_HEADERS)\n  .then(res => res.json())\n}\n\nexport const available_projects = () => {\n  return fetch (`${API_HOST}/available_projects`, AUTH_HEADERS)\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\n  ","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (text, projectId) => {\n  return fetch(`${API_HOST}/tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      text: text,\n      project_id: projectId\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const update = (taskId, taskName, projectId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'PUT',\n    body: JSON.stringify({\n    text: taskName,\n    projectId: projectId\n    })\n  })\n}\n\nexport const destroy = (taskId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (memberId, projectId) => {\n  return fetch(`${API_HOST}/memberships`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      user_id: memberId,\n      project_id: projectId\n    })\n  })\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport const destroy = (membershipId) => {\n  return fetch(`${API_HOST}/memberships/${membershipId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE',\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}","// import all (*) the methods from all Model.js files; then export them all as one object (default) so that whenever you import you get all of them\n\nimport * as Project from './Project.js'\nimport * as UserTask from './UserTask.js'\nimport * as Flag from './Flag.js'\nimport * as Function from './Function.js'\nimport * as User from './User.js'\nimport * as Task from './Task.js'\nimport * as Membership from './Membership'\n\nexport default {Project, UserTask, Flag, Function, User, Task, Membership}","import React from \"react\";\nimport { createMedia } from '@artsy/fresnel'\nimport PropTypes from 'prop-types'\nimport { \n  Grid, \n  Icon, \n  Label, \n  Table, \n  Button, \n  Form, \n  Dropdown, \n  Message, \n  Header, \n  Container, \n  TableBody, \n  Popup } from 'semantic-ui-react';\nimport TaskModal from './TaskModal';\nimport EditTaskModal from './EditTaskModal';\nimport EditProjectModal from './EditProjectModal';\nimport Nav from './Nav'\nimport API from '../api';\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nclass DesktopContainer extends React.Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return(\n      <Media greaterThan='mobile'>\n        <Container>\n          <Nav \n          {...this.props} \n          fixed={fixed ? 'top' : null}\n          inverted={!fixed}\n          pointing={!fixed}\n          secondary={!fixed}\n          size='large'\n          />\n          {children}\n        </Container>\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = (props) => {\n\n  return (\n    <MediaContextProvider>\n      <DesktopContainer {...props}>{props.children}</DesktopContainer>\n    </MediaContextProvider>\n  )\n}\n\nexport default class RACITable extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allUsers: [],\n      newMembersToAdd: [],\n      showAddUsers: false,\n      hideTopMessage: true,\n      topMessage: {\n        header: '',\n        message: '',\n      },\n      projectId: '',\n      projectName: '',\n      projectNameForUpdating: '',\n      functions: [],\n      tasks: [],\n      creator: {},\n      members: [],\n      projectToEditMembers: [],\n      selectedTask: {\n        taskId: null,\n        taskText: null,\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskNameForUpdating: '',\n      taskToCreateUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskToEditUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      }\n    }\n  }\n\n  putProjectDataInState = () => {\n    this.props.toggleLoader(true)\n\n    const projectId = this.props.match.params.id\n\n    API.Function.index()\n      .then(data => this.setState({\n        functions: data.data\n      }))\n\n    API.Project.show(projectId)\n      .then(data => {this.setState({\n        projectId: data.data.id,\n        projectName: data.data.attributes.name,\n        projectNameForUpdating: data.data.attributes.name,\n        tasks: data.data.attributes.tasks,\n        creator: data.data.attributes.creator,\n        members: data.data.attributes.members,\n        })\n        this.props.toggleLoader(false)\n      })\n      .catch(() => this.props.history.push('/projects'))\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({allUsers: data.data}))\n  }\n\n  createTeamMemberOptions = () => {\n    return this.state.members.map(member => ({\n          key: member.id,\n          text: member.first_name,\n          value: member.id\n        }))\n  }\n\n  mapAllUsersToDropdown = () => {\n    return this.state.allUsers\n      // .filter(user => (!this.state.members.map(member => member.id).includes(parseInt(user.id))))\n      .map(user => ({\n        key: parseInt(user.id),\n        text: user.attributes.full_name,\n        value: parseInt(user.id)\n      }))\n  }\n\n  createDropdownForEditProjectModal = () => {\n    const defaultValues = this.state.members ? this.state.members.map((member) => member.id) : []\n    \n    return (\n      <Dropdown\n        placeholder='Add team members'\n        fluid\n        multiple\n        selection\n        options={this.mapAllUsersToDropdown()}\n        defaultValue={defaultValues}\n        onChange={(event, data) => { this.handleDropdownChangeForEditProjectModal(data) }}\n\n      />\n    )\n  }\n\n  createDropdownsForEditTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        const defaultValues = task ? task[functionName].map(userTask => userTask.user_id) : [];\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3,4].includes(parseInt(raciFunction.id))}\n              defaultValue={[3,4].includes(parseInt(raciFunction.id)) ? defaultValues : defaultValues[0]}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => {this.handleDropdownChangeForEditTaskModal(data, raciFunction)}}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  createDropdownsForCreateTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3, 4].includes(parseInt(raciFunction.id))}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => { this.handleDropdownChangeForCreateModal(data, raciFunction) }}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({\n      key: user.id,\n      text: user.attributes.full_name,\n      value: user.id\n    }))\n  }\n\n  handleDropdownChangeForCreateModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditTaskModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1){\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditProjectModal = (data) => {\n      this.setState({\n        projectToEditMembers: data.value\n      })\n  }\n\n  handleTextFieldChange = event => {\n    this.setState({\n      // selectedTask: {\n      //   ...this.state.selectedTask,\n      // task_name: event.target.value}\n      taskNameForUpdating: event.target.value\n    })\n  }\n\n  createUserTasks = (dataFromTaskCreation) => {\n\n    const taskId = parseInt(dataFromTaskCreation.data.id)\n\n    const userTasksToCreate = []\n\n    const userIdsForUserTasksToCreate = this.state.taskToCreateUserIds\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 1,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n      // Send the now-complete userTasks to the server for creation\n      \n    userTasksToCreate.forEach((userTask) => {\n        API.UserTask.create(userTask)\n          .then(this.putProjectDataInState)\n    })\n\n      this.setState({\n        userTasksToCreate: []\n      })\n}\n\n  handleSubmitOnTaskModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const text = this.state.taskNameForUpdating\n    API.Task.create(text, projectId)\n      .then(data => this.createUserTasks(data))\n  }\n\n  handleSubmitOnEditTaskModal = (event, task) => {\n    event.preventDefault()\n\n    const projectId = this.state.projectId\n\n    const userIdsForUserTasksToCreate = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const selectedTaskUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userTaskIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n    \n    // Assign data from state to our little variable here, for convenience\n\n    const taskToEditUserIds = this.state.taskToEditUserIds\n\n    // Parse data out of selectedTask (i.e. the user_ids for user_tasks already in the database) \n    // into the same shape as taskToEditUserIds\n\n    selectedTaskUserIds.responsible = this.state.selectedTask.responsible.map(user_task => {\n      return(user_task.user_id)\n    })\n\n    selectedTaskUserIds.accountable = this.state.selectedTask.accountable.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.consulted = this.state.selectedTask.consulted.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.informed = this.state.selectedTask.informed.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    // For each function, do a diff to find the user_ids which have been removed \n    // from selectedTask (i.e. those we need to delete)\n\n    userIdsForUserTasksToDelete.responsible = selectedTaskUserIds.responsible.filter(n => !taskToEditUserIds.responsible.includes(n))\n    userIdsForUserTasksToDelete.accountable = selectedTaskUserIds.accountable.filter(n => !taskToEditUserIds.accountable.includes(n))\n    userIdsForUserTasksToDelete.consulted = selectedTaskUserIds.consulted.filter(n => !taskToEditUserIds.consulted.includes(n))\n    userIdsForUserTasksToDelete.informed = selectedTaskUserIds.informed.filter(n => !taskToEditUserIds.informed.includes(n))\n\n    // For each function, do a diff to find the user_ids which have been added \n    // to selectedTask (i.e. those we need to create)\n    \n    userIdsForUserTasksToCreate.responsible = taskToEditUserIds.responsible.filter(n => !selectedTaskUserIds.responsible.includes(n))\n    userIdsForUserTasksToCreate.accountable = taskToEditUserIds.accountable.filter(n => !selectedTaskUserIds.accountable.includes(n))\n    userIdsForUserTasksToCreate.consulted = taskToEditUserIds.consulted.filter(n => !selectedTaskUserIds.consulted.includes(n))\n    userIdsForUserTasksToCreate.informed = taskToEditUserIds.informed.filter(n => !selectedTaskUserIds.informed.includes(n))\n  \n    // Build array of user task IDs which need to be deleted\n\n    userTaskIdsForUserTasksToDelete.responsible = this.state.selectedTask.responsible.map(user_task => {\n      if (userIdsForUserTasksToDelete.responsible.includes(user_task.user_id)) {\n          return (user_task.user_task_id)\n        }\n      })\n\n    userTaskIdsForUserTasksToDelete.accountable = this.state.selectedTask.accountable.map(user_task => {\n      if (userIdsForUserTasksToDelete.accountable.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.consulted = this.state.selectedTask.consulted.map(user_task => {\n      if (userIdsForUserTasksToDelete.consulted.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.informed = this.state.selectedTask.informed.map(user_task => {\n      if (userIdsForUserTasksToDelete.informed.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    const getKeys = Object.values(userTaskIdsForUserTasksToDelete)\n    const deleteThesePuppies = [].concat.apply([], getKeys)\n    const deleteThesePuppiesFiltered = deleteThesePuppies.filter((itemInArray) => {\n      return itemInArray !== undefined\n    })\n\n    // Build user tasks to be created\n\n    const taskId = task.id\n    const userTasksToCreate = []\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n            {\n              task_id: taskId,\n              function_id: 1,\n              user_id: userId\n            }\n        )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Delete user tasks\n\n    deleteThesePuppiesFiltered.forEach((userTaskId) => {\n        apiPromises.push(API.UserTask.destroy(userTaskId))\n    })\n\n    // Send user tasks to the server for creation!\n\n      userTasksToCreate.forEach((userTask) => {\n          apiPromises.push(API.UserTask.create(userTask))\n      })  \n\n      // Update the task text\n\n      if (this.state.taskNameForUpdating !== this.state.selectedTask.taskName) {\n        if (this.state.taskNameForUpdating !== '') {\n          apiPromises.push(API.Task.update(taskId, this.state.taskNameForUpdating, projectId))\n        } else {\n          // do error thing here\n        }\n      }\n\n      Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n\n  handleSubmitOnEditProjectModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const existingMemberIds = this.state.members.map(member => member.id)\n    const projectToEditUserIds = this.state.projectToEditMembers\n    const membersToDeleteIds = []\n    const membersToCreateIds = []\n    const membershipIdsForMembershipsToDelete = []\n\n    // Check if there are any IDs in projectToEditUserIds which are not in existingMembers, \n    // and add them to membersToCreate\n    \n    projectToEditUserIds.forEach(id => {\n      if(existingMemberIds.includes(id)) {\n        return\n      } else {\n        membersToCreateIds.push(id) \n      }\n    })\n\n    // Check if there are any IDs which have been removed, when compared with existing Members\n    // and add them to membersToDelete\n    \n    existingMemberIds.forEach(id => {\n      if (projectToEditUserIds.includes(id)) {\n        return\n      } else {\n        membersToDeleteIds.push(id) \n      }\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Create Memberships\n    membersToCreateIds.forEach(memberId => {\n     apiPromises.push(API.Membership.create(memberId, projectId))\n    })\n\n    // Delete Memberships\n\n    this.state.members.forEach(member => {\n      if(membersToDeleteIds.includes(member.id)) {\n        membershipIdsForMembershipsToDelete.push(member.membership_id)\n      }\n    })\n\n    membershipIdsForMembershipsToDelete.forEach(membershipId => {\n      apiPromises.push(API.Membership.destroy(membershipId))\n    })\n\n    // Update the text on the project, if it has changed\n\n    if (this.state.projectName !== this.state.projectNameForUpdating) {\n      if (this.state.projectNameForUpdating !== '') {\n        apiPromises.push(API.Project.update(projectId, this.state.projectNameForUpdating))\n      } else {\n        // do error thing here\n      }\n    }\n\n    Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n      \n  putSelectedProjectMembersDataInState = () => {\n    let membersToShoveInState = []\n    this.state.members.forEach(member => {\n      membersToShoveInState = [...membersToShoveInState, member.id]\n      })\n    this.setState({\n      projectToEditMembers: membersToShoveInState\n    })\n  }\n\n  putSelectedTaskDataInState = (id) => {\n    let taskToPutInState = null\n    let taskName = null\n\n    const taskToEditUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    this.state.tasks.forEach(task => {\n      if(task.id === id) {\n        // Get the task / user task data to put into state\n\n        taskToPutInState = task\n        taskName = task.task_name\n\n        // Get an array of IDs for the user tasks, organized by function\n\n        taskToEditUserIds.responsible = task.responsible.map(user_task => user_task.user_id)\n        taskToEditUserIds.accountable = task.accountable.map(user_task => user_task.user_id)\n        taskToEditUserIds.consulted = task.consulted.map(user_task => user_task.user_id)\n        taskToEditUserIds.informed = task.informed.map(user_task => user_task.user_id)\n      }  \n    })\n\n    this.setState({\n      selectedTask: taskToPutInState,\n      taskNameForUpdating: taskName,\n      taskToEditUserIds: taskToEditUserIds\n    })\n  }\n\n  handleDelete = (task) => {\n    API.Task.destroy(task.id)\n    .then(this.putProjectDataInState)\n\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({newMembersToAdd: data.value})\n  }\n\n  handleFlagging = (task) => {\n    let flagToDeleteId = null\n    const flagUserIds = task.flags.map(flag => flag.user_id)\n\n    if (flagUserIds.includes(this.props.userId)) {\n      task.flags.forEach(flag => {\n        if(flag.user_id === this.props.userId) {\n          API.Flag.destroy(flag.flag_id)\n          .then(this.putProjectDataInState)\n        }\n      })\n    }\n    else {\n      API.Flag.create(this.props.userId, task.id)\n        .then(this.putProjectDataInState)\n    }\n  }\n\n  createNewMembers = () => {\n    this.state.newMembersToAdd.forEach((memberId) => {\n\n      API.Membership.create(memberId, this.state.projectId)  \n        .then(this.putProjectDataInState)\n        .catch((data) => {\n          this.setState({\n            topMessage: {\n              header: 'Error',\n              message: data.errors\n            },\n            hideTopMessage: false\n          })\n          setTimeout(() => this.setState({ \n            hideTopMessage: true, \n            topMessage: { header: ``, message: '' } }), 2000)\n        })\n    })\n    this.setState({ \n      showAddUsers: false,\n      // newMembersToAdd: [] \n    })\n  }\n\n  deleteUserTask = (user_task) => {\n    API.UserTask.destroy(user_task.user_task_id)\n      .then(this.putProjectDataInState)\n      // .then(() => {\n      //   this.setState({ hideTopMessage: false, topMessage: { header: `successfully deleted ${user_task.full_name} from task`, message: 'woooh!'}})\n      //   setTimeout(() => this.setState({ hideTopMessage: true, topMessage: { header: ``, message: '' } }), 1000)\n      // })\n  }\n\n  deleteProject = (projectId) => {\n    API.Project.destroy(projectId)\n    .then(this.redirectToProjectsIndexPage)\n  }\n\n  handleProjectNameChange = (event) => {\n    const projectName = event.target.value;\n    this.setState({ projectNameForUpdating: projectName })\n  }\n\n  componentDidMount() {\n      if (localStorage.token) {\n        this.props.authenticateMe()\n        this.putAllUsersDataInState()\n        this.putProjectDataInState()\n      } else {\n        this.props.history.push('/login')\n      }\n  }\n\n    render() {\n      return(\n        <ResponsiveContainer {...this.props}>\n          <Message hidden={this.state.hideTopMessage}>\n            <Message.Header>{this.state.topMessage.header}</Message.Header>\n            <p>\n              {this.state.topMessage.message}\n            </p>\n          </Message>\n          <Header as=\"h1\">{this.state.projectName}\n            <EditProjectModal \n              projectId={this.state.projectId}\n              populateMembersToEdit={this.putSelectedProjectMembersDataInState}\n              onProjectNameChange={this.handleProjectNameChange}\n              projectName={this.state.projectNameForUpdating}\n              createDropdown={this.createDropdownForEditProjectModal()}\n              handleDropdownChange={this.handleDropdownChangeForEditProjectModal}\n              onSubmit={this.handleSubmitOnEditProjectModal}\n              deleteProject={this.deleteProject}\n            />\n          </Header>\n          \n          <Grid>\n          { this.state.showAddUsers ?\n            (\n              <Grid.Column width={8}>\n                  <div>\n                    <Dropdown placeholder='Add Users' onChange={this.handleNewMemberSelection} fluid multiple selection options={this.mapAllUsersToDropdown()} />\n                    <Button\n                      onClick={this.createNewMembers}\n                    >Add users</Button>\n                  </div>\n              </Grid.Column>\n            ) :(\n              <Grid.Column width={8}>\n                <Label.Group circular>\n                    {this.state.members.map((member, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6}} content={member.full_name} trigger={<Label key={index}>{member.initials}</Label>}></Popup>)}\n                </Label.Group>\n              </Grid.Column>\n            )\n          }\n          </Grid>\n          <Table celled> \n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width='four'>Task</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Responsible</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Accountable</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Consulted</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Informed</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.tasks.map((task, index) => {\n              return (<Table.Row \n                error={task.flags.length > 0}\n                key={index}>\n                <Table.Cell>\n                  <Grid>\n                  <Grid.Column width={11}>\n                  {task.task_name}\n                  <Label.Group circular>\n                    {task.flags.map((flag, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6 }} content={flag.user_full_name} trigger={<Label key={index} color=\"red\">{flag.user_initials}</Label>}></Popup>)}\n                  </Label.Group>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                      <EditTaskModal\n                        task={task}\n                        projectId={this.state.projectId}\n                        createDropdowns={() => this.createDropdownsForEditTaskModal(task)}\n                        putSelectedTaskDataInState={this.putSelectedTaskDataInState}\n                        taskName={this.state.taskNameForUpdating}\n                        handleTextFieldChange={this.handleTextFieldChange}\n                        handleDropdownChange={this.handleDropdownChangeForEditTaskModal}\n                        handleSubmit={this.handleSubmitOnEditTaskModal}\n                        handleDelete={this.handleDelete}\n                      />\n                      <Button\n                        icon\n                        onClick={() => { this.handleFlagging(task) }}\n                        inverted={!(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? true : false)}\n                        style={(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? { backgroundColor: 'white' } : null)}\n                        floated=\"right\">\n                        <Icon\n                          color={task.flags.length > 0 ? 'red' : 'grey'}\n                          name={task.flags.length > 0 ? 'flag' : 'flag outline'}></Icon>\n                      </Button>\n                    </Grid.Column>\n                  </Grid>\n                </Table.Cell>\n                <Table.Cell>\n                  {\n                    task.responsible.map((user_task, i) => {\n                      return (<Label \n                                key={i}\n                                  style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                  {user_task.user_first_name}\n                                  <Icon\n                                    onClick={() => this.deleteUserTask(user_task)}\n                                    name='delete' />\n                                </Label>)\n                    })\n                      }\n                </Table.Cell>\n                <Table.Cell>{\n                    task.accountable.map((user_task, i) => {\n                      return (<Label\n                                key={i}\n                                style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                {user_task.user_first_name}\n                                <Icon\n                                  onClick={() => this.deleteUserTask(user_task)}\n                                  name='delete' />\n                              </Label>)\n                  } )}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.consulted.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.informed.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n              </Table.Row>)\n            })}  \n            </Table.Body>\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <TaskModal\n                    projectId={this.state.projectId}\n                    raciFunctions={this.state.functions}\n                    createDropdowns={this.createDropdownsForCreateTaskModal}\n                    taskName={this.state.selectedTask.task_name}\n                    handleTextFieldChange={this.handleTextFieldChange}\n                    handleDropdownChange={this.handleDropdownChangeForCreateModal}\n                    onTriggerButtonClick={() => {\n                      this.setState({\n                        selectedTask: {\n                          taskId: null,\n                          task_name: null,\n                          responsible: [],\n                          accountable: [],\n                          consulted: [],\n                          informed: []\n                        }\n                      })\n                    }}\n                    handleSubmit={this.handleSubmitOnTaskModal} />\n                </Table.HeaderCell>\n                <Table.HeaderCell colSpan='4'>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </ResponsiveContainer>\n      )\n    }\n\n}\n\n\n// const DropDown = (props) => {\n//   const handleOnChange = (e, data) => {\n//     props.onDropChange(`hello! ${data.value}`)\n//   }\n//   return (\n//     <select onChange={handleOnChange}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//     </select>\n//   )\n// }\n\n\n// <DropDown onDropChange={(alertMessage) => alert(alertMessage)} options={[{ text: 'hi', value: 2 }, { text: 'yo', value: 3 }]} />\n\n\n// Everytime you change the Dropdown, \n// there should be an alert which alerts \n// the third argument of your custom callback for onChange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Button, Form, Card, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport API from '../api'\n\nexport default class Login extends React.Component {\n  \n  constructor() {\n    super()\n\n    this.state = {\n      loginInfo: {\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  loginInfoIsFull = () => {\n\n    return (this.state.loginInfo.password.length > 1 ? true : false)\n  }\n \n  handleSubmit = (e) => {\n    e.preventDefault()\n    API.User.login(this.state.loginInfo)\n    .then(data => {\n      if(data.token) {\n      localStorage.token = data.token\n      this.props.history.push('/projects')\n      } \n    })\n    .catch((data) => {\n      this.setState({\n        errors: data.errors[0]\n        })\n      setTimeout(() => this.setState({\n        errors: null,\n       }), 2000)\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n        loginInfo: {\n        ...prevState.loginInfo,\n        [e.target.name]: e.target.value\n        }\n    }))\n  }\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n    if (localStorage.token) {\n      this.props.history.push('/projects')\n    }\n  }\n\n\n\n  render(){\n    return(\n      <Container style={{height: '100vh', marginTop: '1%'}}textAlign=\"center\">\n        <div style={{\n          position: 'relative',\n          marginTop: '2em',\n          marginBottom: '3em'}}>\n          <Button \n            as='h1'\n            onClick={() => this.props.history.push('/')}\n            style={{\n              margin: '0 auto',\n              width: '80px',\n              height: '30px',\n              lineHeight: '0.5em',\n              fontSize: '1em',\n              borderRadius: '4px',\n              backgroundColor: '#2185d0',\n              color: '#fff'\n            }}\n            >RACI</Button>\n        </div>\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Login</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange} />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange} />\n              <Message\n                error\n                header={'Error'}\n                content={this.state.errors}  \n                ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.loginInfo.email) && this.loginInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Log in\n            </Button>\n          </Form>\n          <br />\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </Card>\n      </Container>\n    )\n  }\n}","// do componentDidMount wiht same fetch request etc as login but post to signup not login\n\nimport React from 'react'\nimport { Button, Form, Container, Card, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport API from '../api'\n\nexport default class SignUp extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      signupInfo: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  signupInfoIsFull = () => {\n   return (this.state.signupInfo.first_name.length > 1 && this.state.signupInfo.last_name.length > 1 && this.state.signupInfo.password.length > 1 ? true : false)\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n      signupInfo: {\n        ...prevState.signupInfo,\n        [e.target.name]: e.target.value\n      }\n    }))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n      API.User.signup(this.state.signupInfo)\n      .then(data => {\n        if(data.token) {\n          localStorage.token = data.token\n          this.props.history.push('/projects')\n        }\n      })\n      .catch((data) => {\n        if(data) {\n          this.setState({\n            errors: data.errors[0]\n          })\n          setTimeout(() => {\n            this.setState({\n              errors: null\n            })}, 2000)\n        }\n        else {\n          this.setState({\n            errors: 'There was a problem creating your account. Please try again'\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n  }\n  \n  render () {\n    \n    return (\n      <Container style={{height: '100vh', marginTop: '1%'}} textAlign=\"center\">\n        <div style={{\n          position: 'relative',\n          marginTop: '2em',\n          marginBottom: '3em'\n        }}>\n          <Button\n            as='h1'\n            onClick={() => this.props.history.push('/')}\n            style={{\n              margin: '0 auto',\n              width: '80px',\n              height: '30px',\n              lineHeight: '0.5em',\n              fontSize: '1em',\n              borderRadius: '4px',\n              backgroundColor: '#2185d0',\n              color: '#fff'\n            }}\n          >RACI</Button>\n        </div>\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Sign up</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='First name'\n              type='text'\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Last name'\n              type='text'\n              name='last_name'\n              value={this.state.last_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <Message \n              error\n              header={'Error'}\n              content={this.state.errors}\n            ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.signupInfo.email) && this.signupInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Create account\n            </Button>\n          </Form>\n          <br />\n          Already have an account?  <Link to=\"/login\">Login</Link>\n        </Card>\n      </Container>)\n  }\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={props.trigger}\n    >\n      <Modal.Header>Create Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Please enter your first name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n                placeholder='Describe the project'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n              <Dropdown \n              placeholder='Add team members' \n              onChange={props.onDropdownChange} \n              fluid \n              multiple \n              selection \n              options={props.dropdownOptions} />\n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          onClick={\n            () => {\n              setOpen(false)\n              props.onCancel()\n            }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Create project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { createMedia } from '@artsy/fresnel'\nimport PropTypes from 'prop-types'\nimport { \n  Card, \n  Header, \n  Icon, \n  Container, \n  Menu, \n  Sidebar} from 'semantic-ui-react';\nimport CreateProjectModal from './CreateProjectModal';\nimport Nav from './Nav'\nimport API from '../api';\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nclass DesktopContainer extends React.Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Media greaterThan='mobile'>\n        <Container>\n          <Nav\n            fixed={fixed ? 'top' : null}\n            inverted={!fixed}\n            pointing={!fixed}\n            secondary={!fixed}\n            size='large'\n            logOut={this.props.logOut} \n            userFullName={this.props.userFullName}>\n          </Nav>\n          {children}\n        </Container>\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends React.Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Media at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item> {this.props.userFullName ? `Logged in as ${this.props.userFullName}` : ''}</Menu.Item>\n            <Menu.Item as='a' style={{ color: '#2185d0'}}onClick={() => { this.props.logOut() }}>Log out</Menu.Item>\n          </Sidebar>\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Container style={{ margin: '0 1em' }}>\n                <Menu secondary size='large'>\n                  <Menu.Item onClick={this.handleToggle}>\n                    <Icon name='sidebar' />\n                  </Menu.Item>\n                </Menu>\n              {children}\n              </Container>\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = (props) => {\n\n  return (\n    <MediaContextProvider>\n      <DesktopContainer {...props}>{props.children}</DesktopContainer>\n      <MobileContainer {...props}>{props.children}</MobileContainer>\n    </MediaContextProvider>\n  )\n}\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default class ProjectsList extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      projects: [],\n      allUsers: [],\n      projectName: '',\n      newMembersToAdd: [],\n      newProjectNameHasError: false,\n    }\n  }\n\n  putAllUsersDataInState = () => {\n    return API.User.index()\n    .then(data => this.setState({ allUsers: data.data }))\n  }\n\n  putProjectsDataInState = () => {\n    this.props.toggleLoader(true)\n    API.User.available_projects()\n    .then(data => {\n      this.props.toggleLoader(false)\n      this.setState({\n        projects: data.data\n      })\n    }\n    )\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({ newMembersToAdd: data.value })\n  }\n\n  handleProjectNameChange = (event) => {\n\n    const projectName = event.target.value;\n    // if (projectName.length < 2) {\n    //   this.setState({newProjectNameHasError: true})\n    // } else {\n    //   this.setState({ newProjectNameHasError: false })\n    // }\n    this.setState({ projectName: projectName})\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({ \n      key: user.id, \n      text: user.attributes.full_name, \n      value: user.id }))\n  }\n\n  clearProjectNameField = () => {\n    this.setState({projectName: \"\"})\n  }\n\n  createNewMembers = (projectId) => {\n    this.state.newMembersToAdd.forEach((memberId, index) => {\n      API.Membership.create(memberId, projectId)\n    })\n  }\n\n  createNewProject = () => {\n    API.Project.create({name: this.state.projectName, creator_id: this.props.userId})\n      .then(data => {\n        const projectId = data.data.id\n        this.createNewMembers(projectId)\n      })\n      .then(this.putProjectsDataInState)\n  }\n\n  createProjectCards = () => {\n    return this.state.projects.map((project, index) => {\n\n      return (\n        <Card\n          key={index}\n          header={project.attributes.name}\n          style={{ height: '15vh' }}\n          // description={''}\n          // meta={''}\n          onClick={() => {\n            const projectId = project.id\n            this.redirectToProjectPage(projectId)}\n           }>\n        </Card>\n      )\n    })\n  }\n\n  redirectToProjectPage = (projectId) => {\n    this.props.history.push(`/projects/${projectId}`)\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.authenticateMe()\n      this.putProjectsDataInState()\n      this.putAllUsersDataInState()\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n\n  createCardGroup = () => {\n    return (\n      <>\n        <Media at='mobile'>      \n            <Card.Group itemsPerRow={1} style={{ marginTop: '1em', marginBottom: '2em' }}>\n            {this.createProjectCards()}\n              <CreateProjectModal\n                projectNameHasError={this.state.newProjectNameHasError}\n                trigger={<Card color=\"blue\" header={<span><Icon name=\"plus\" color=\"blue\" /><Header color=\"blue\">Add project</Header></span>}/>}\n                propsForCreateProjectModal\n                onDropdownChange={this.handleNewMemberSelection}\n                dropdownOptions={this.mapAllUsersToDropdownOptions()}\n                onProjectNameChange={this.handleProjectNameChange}\n                projectName={this.state.projectName}\n                onSubmit={this.createNewProject}\n                onCancel={this.clearProjectNameField}\n              />\n            </Card.Group>\n        </Media>\n        <Media greaterThan='mobile'>\n            <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n            {this.createProjectCards()}\n              <CreateProjectModal\n                projectNameHasError={this.state.newProjectNameHasError}\n                trigger={<Card color=\"blue\" header={<span><Icon name=\"plus\" color=\"blue\" /><Header color=\"blue\">Add project</Header></span>}/>}\n                propsForCreateProjectModal\n                onDropdownChange={this.handleNewMemberSelection}\n                dropdownOptions={this.mapAllUsersToDropdownOptions()}\n                onProjectNameChange={this.handleProjectNameChange}\n                projectName={this.state.projectName}\n                onSubmit={this.createNewProject}\n                onCancel={this.clearProjectNameField}\n              />\n            </Card.Group>\n        </Media>\n        </>\n\n    )\n  }\n\n\n  render() {\n    return (\n      <ResponsiveContainer {...this.props}>\n        {this.createCardGroup()}\n      </ResponsiveContainer>\n    )\n  }\n}\n","import '../arrow.css'\n\nconst Arrow = ({direction, onClick, color, slideshowArrow }) => {\n\n  return(\n    <>\n      <div className={` ${slideshowArrow ? `slideshow-arrow-${direction}` : ''} ${direction} ${color}-arrow nav-arrow`} onTouchStart={onClick} onClick={onClick}>\n        <div className={`${direction} ${color}-arrow nav-arrow-left-tip`}></div>\n        <div className={`${direction} ${color}-arrow nav-arrow-right-tip`}></div>\n      </div>\n    </>\n  )\n}\n\nexport default Arrow","import '../photo-slideshow.css'\nimport { useState } from 'react'\nimport Arrow from './Arrow'\n\nconst PhotoSlideshow = ({ dataAos, dataAosDuration, photos, arrowColor }) => {\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0)\n\n  const altText = photos[currentPhotoIndex]\n    .split(`-${currentPhotoIndex + 1}-`)[1]\n    .split('.')[0]\n\n  const changePhoto = direction => {\n    const photosLastIndex = photos.length -1\n    if(direction === 'left') {\n      if (currentPhotoIndex === 0) {\n        setCurrentPhotoIndex(photosLastIndex)\n      } else {\n        setCurrentPhotoIndex(currentPhotoIndex - 1)\n      }\n    } else if (direction === 'right') {\n      if (currentPhotoIndex === photosLastIndex) {\n        setCurrentPhotoIndex(0)\n      } else {\n        setCurrentPhotoIndex(currentPhotoIndex + 1)\n      }\n    }\n  }\n\n  return (\n    <div data-aos={dataAos} data-aos-duration={dataAosDuration} className=\"photo-slideshow-container\">\n      <div className='slideshow-panel-left'/>\n      <div className='slideshow-panel-right' />\n      <Arrow slideshowArrow direction='left' color={arrowColor} onClick={() => changePhoto('left')} />\n      <Arrow slideshowArrow direction='right' color={arrowColor} onClick={() => changePhoto('right')} />\n      <img className='project-image' alt={altText} src={photos[currentPhotoIndex]}/>\n    </div>\n  )\n}\n\nexport default PhotoSlideshow","import { createMedia } from '@artsy/fresnel'\nimport PhotoSlideshow from './PhotoSlideshow'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  List,\n  Menu,\n  Segment,\n  Sidebar,\n  Visibility,\n  Card\n} from 'semantic-ui-react'\n\nconst appScreenshots = ['/app-screenshots/raci-1-project-and-tasks-page.png', '/app-screenshots/raci-2-signup.png', '/app-screenshots/raci-3-login.png', '/app-screenshots/raci-4-login-error.png', '/app-screenshots/raci-5-projects-page.png', '/app-screenshots/raci-6-edit-project.png', '/app-screenshots/raci-7-new-task.png']\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nconst raciDefinitions = [\n  {\n    header: 'Responsible',\n    description:\n      'You are hands-on doing the work',\n    color: 'blue',\n  },\n  {\n    header: 'Accountable',\n    description:\n      'You are answerable for timing and quality',\n    color: 'blue'\n  },\n  {\n    header: 'Consulted',\n    description:\n      'Your input is necessary',\n    color: 'blue'\n  },\n  {\n    header: 'Informed',\n    description:\n      'You need updates to do your own work well',\n    color: 'blue'\n  },\n]\n\nconst HomepageHeading = (props) => {\n  return(\n    <Container text >\n      <Header\n        as='h1'\n        content='RACI'\n        inverted\n        style={{\n          fontSize: props.mobile ? '2em' : '4em',\n          fontWeight: 'bold',\n          marginBottom: 0,\n          marginTop: props.mobile ? '1em' : '1em',\n          color: '#2185d0'\n        }}\n      />\n      <Header\n        as='h1'\n        content='Do only what you need to. Know the rest is getting done.'\n        inverted\n        style={{\n          fontSize: props.mobile ? '1.5em' : '3em',\n          fontWeight: 'normal',\n          marginBottom: 0,\n          marginTop: props.mobile ? '0.2em' : '0.5em',\n        }}\n      />\n      <Button \n        onClick={() => {\n          props.history.push('/signup')\n          }\n        }\n        style={{\n          marginTop: props.mobile ? '2em' : '2.2em'\n        }}\n        primary size={props.mobile ? 'medium' : 'huge'}>\n        Get Started\n        <Icon name='right arrow' />\n      </Button>\n    </Container>\n  )\n}\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n \n  return (\n      <Media greaterThan='mobile'>\n        <Visibility\n          once={false}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 600, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n            >\n              <Container>\n                <Menu.Item position='right'>\n                  <Button onClick={() => { this.props.history.push('/login') }} as='a' inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button onClick={() => { this.props.history.push('/signup') }} as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n            <HomepageHeading {...this.props}/>\n          </Segment>\n        </Visibility>\n        {children}\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Media as={Sidebar.Pushable} at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item as='a' onClick={() => { this.props.history.push('/login') }}>Log in</Menu.Item>\n            <Menu.Item as='a' onClick={() => { this.props.history.push('/signup') }}>Sign Up</Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical\n            >\n            <Container>\n              <Menu inverted pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading {...this.props} mobile />\n            </Segment>\n            {children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = (props) => {\n\n  return(\n    <MediaContextProvider>\n      <DesktopContainer {...props}>{props.children}</DesktopContainer>\n      <MobileContainer {...props}>{props.children}</MobileContainer>\n    </MediaContextProvider>\n  )\n}\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default class LandingPage extends React.Component  {\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n  }\n\n  render() {\n\n    return(\n      <ResponsiveContainer {...this.props}>\n        <Segment style={{ padding: '2em 0em' }} vertical>\n          <Grid container stackable verticalAlign='middle'>\n            <Segment style={{ padding: '0em' }} vertical>\n              <Grid.Row>\n                <Media at='mobile'>\n                  <Card.Group \n                    centered \n                    items={raciDefinitions} \n                    style={{ \n                      flexWrap: 'wrap', \n                      margin: '2em auto 3em auto', \n                      maxWidth: '70%'}} />\n                </Media>  \n                <Media greaterThan='mobile'>\n                  <Card.Group\n                    centered\n                    items={raciDefinitions}\n                    style={{\n                      flexWrap: 'nowrap',\n                      margin: '6em auto 3em auto',\n                      maxWidth: '70%'\n                    }} />\n                </Media>\n              </Grid.Row>\n            </Segment>\n              <Grid.Row>              \n              <Grid.Column width={9}>\n                <Header as='h3' style={{ fontSize: '2em', marginTop: '2em' }}>\n                  The RACI Framework\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                  RACI helps:\n                  <ol>\n                    <li>reduce the risk of low quality work due to murky accountability</li>\n                    <li>make sure the right people have input on tasks (and gives team members authority to make decisions without input!)</li>\n                    <li>prompt conversations about workload and capacity</li>\n                  </ol>\n                </p>\n                <Header as='h3' style={{ fontSize: '2em' }}>\n                  How it works\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                  <ul>\n                    <li>Create a project, and define tasks for that project</li>\n                    <li>Show which team members are R, A, C, or I for each task</li>\n                    <li>Team members can flag tasks when a scoping or workload issue arises</li>\n                  </ul>\n                </p>\n              </Grid.Column>\n                <Grid.Column floated='right' width={6}>\n                  <PhotoSlideshow photos={appScreenshots} />\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column textAlign='center'>\n                <Button  \n                  onClick={() => {\n                    this.props.history.push('/signup')\n                  }}\n                  style={{ margin: '3em 0' }}\n                  size='huge'>\n                  Get started\n                  <Icon name='right arrow' />\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        {/* Footer */}\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  <Header inverted as='h4' content='© 2021 Bridget Fitzgerald. I ♥ RACI.' />\n                  <List link inverted>\n                    <List.Item as='a' href='https://github.com/bridgetrosefitz/raci' target='_blank'>View the code</List.Item>\n                    <List.Item as='a' href='mailto:bridgetrosefitz@gmail.com' target='_blank'>Contact</List.Item>\n                  </List>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </ResponsiveContainer>\n    )\n  }\n}","import './App.css';\nimport React from 'react';\nimport RACITable from './components/RACITable';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport ProjectsList from './components/ProjectsList';\nimport LandingPage from './components/LandingPage'; \nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport API from './api'\n\nclass App extends React.Component {\n\n  state = {\n    loaderIsActive: true,\n    user_id: null,\n    full_name: null\n  }\n\n  authenticateMe = () => {\n    API.User.profile()\n      .then(data => {\n        this.setState({ \n          user_id: parseInt(data.data.id), \n          full_name: data.data.attributes.full_name\n        })})\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n\n  toggleLoader = (trueOrFalse) => {\n    this.setState({loaderIsActive: trueOrFalse})\n  }\n  \n  componentDidMount() {\n    if (localStorage.token) {\n      this.authenticateMe()\n    } else if (this.props.location.pathname !== '/' || this.props.location.pathname === '/signup' ) {\n      this.props.history.push('/login')\n      }\n    }\n\n  redirectToProjectsIndexPage = () => {\n    this.props.history.push(`/projects`)\n  }\n\n  \n  render () {\n\n    return (\n      <div>\n        <Dimmer inverted active={this.state.loaderIsActive} >\n          <Loader inverted content='Loading' />\n        </Dimmer>\n        <Switch>\n          <Route \n            path=\"/login\" \n            render={routerProps => <Login \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe} \n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      user_id={this.state.user_id}/>} />\n          <Route \n            path=\"/signup\" \n            render={routerProps => <SignUp \n                                    {...routerProps}\n                                    loaderIsActive={this.state.loaderIsActive}\n                                    toggleLoader={this.toggleLoader}/>} />\n          <Route \n            path=\"/projects/:id\" \n            render={routerProps => <RACITable \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe}\n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      onBack={this.redirectToProjectsIndexPage}\n                                      backText={'Back to Projects'}\n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut}/>} />\n          <Route \n            path=\"/projects\" \n            render={routerProps => <ProjectsList \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe}\n                                      loaderIsActive={this.state.loaderIsActive} \n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut} />} />\n          <Route \n            path=\"/\"\n            render={routerProps => <LandingPage\n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe} \n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut} />} />\n        </Switch>\n      </div>\n    )\n\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}