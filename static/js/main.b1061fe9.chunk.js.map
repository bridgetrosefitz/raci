{"version":3,"sources":["components/TaskModal.js","components/EditTaskModal.js","components/DeleteProjectWarningModal.js","components/EditProjectModal.js","components/Nav.js","api/helper.js","api/Project.js","api/UserTask.js","api/Flag.js","api/Function.js","api/User.js","api/Task.js","api/Membership.js","api/index.js","components/RACITable.js","components/Login.js","components/SignUp.js","components/CreateProjectModal.js","components/ProjectsList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskModal","props","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","floated","icon","labelPosition","primary","onClick","onTriggerButtonClick","size","Icon","name","Header","Content","Description","Form","Field","placeholder","value","taskName","onChange","handleTextFieldChange","createDropdowns","Actions","type","event","data","text","handleSubmit","positive","EditTaskModal","putSelectedTaskDataInState","task","id","color","handleDelete","basic","Grid","Column","width","projectName","inverted","deleteProject","projectId","style","marginLeft","backgroundColor","populateMembersToEdit","Input","error","projectNameHasError","content","pointing","onProjectNameChange","createDropdown","deleteProjectWarningModal","onSubmit","Menu","borderless","attached","border","position","Item","userFullName","onBack","backText","logOut","API_HOST","AUTH_HEADERS","headers","localStorage","token","index","fetch","then","res","json","show","a","ok","Promise","reject","create","body","method","JSON","stringify","destroy","update","projectStartDate","userTask","userTaskId","userId","taskId","user_id","task_id","flagId","login","email","password","signup","first_name","last_name","profile","available_projects","project_id","memberId","membershipId","Project","UserTask","Flag","Function","User","Task","Membership","RACITable","putProjectDataInState","match","params","API","setState","attributes","projectNameForUpdating","tasks","creator","members","catch","history","push","functions","putAllUsersDataInState","allUsers","createTeamMemberOptions","state","map","member","key","mapAllUsersToDropdown","user","parseInt","full_name","createDropdownForEditProjectModal","defaultValues","Dropdown","fluid","multiple","selection","options","defaultValue","handleDropdownChangeForEditProjectModal","createDropdownsForEditTaskModal","raciFunction","functionName","toLowerCase","includes","handleDropdownChangeForEditTaskModal","createDropdownsForCreateTaskModal","handleDropdownChangeForCreateModal","raciFunctionId","taskToCreateUserIds","responsible","accountable","consulted","informed","taskToEditUserIds","projectToEditMembers","taskNameForUpdating","target","createUserTasks","dataFromTaskCreation","userTasksToCreate","userIdsForUserTasksToCreate","forEach","function_id","handleSubmitOnTaskModal","preventDefault","handleSubmitOnEditTaskModal","userIdsForUserTasksToDelete","selectedTaskUserIds","userTaskIdsForUserTasksToDelete","selectedTask","user_task","filter","n","user_task_id","getKeys","Object","values","deleteThesePuppiesFiltered","concat","apply","itemInArray","undefined","apiPromises","allSettled","handleSubmitOnEditProjectModal","existingMemberIds","projectToEditUserIds","membersToDeleteIds","membersToCreateIds","membershipIdsForMembershipsToDelete","membership_id","putSelectedProjectMembersDataInState","membersToShoveInState","taskToPutInState","task_name","handleNewMemberSelection","newMembersToAdd","handleFlagging","flags","flag","flag_id","createNewMembers","topMessage","header","message","errors","hideTopMessage","setTimeout","showAddUsers","deleteUserTask","redirectToProjectsIndexPage","handleProjectNameChange","taskText","this","authenticateMe","Container","Message","hidden","Nav","as","EditProjectModal","handleDropdownChange","Label","Group","circular","Popup","padding","initials","Table","celled","Row","HeaderCell","Body","length","Cell","user_full_name","user_initials","i","marginTop","marginBottom","user_first_name","Footer","fullWidth","raciFunctions","colSpan","Component","Login","isValidEmailAddress","address","loginInfoIsFull","loginInfo","e","handleChange","prevState","height","textAlign","Card","centered","paddingTop","paddingBottom","paddingLeft","paddingRight","to","SignUp","signupInfoIsFull","signupInfo","onDropdownChange","dropdownOptions","onCancel","ProjectsList","putProjectsDataInState","projects","mapAllUsersToDropdownOptions","clearProjectNameField","createNewProject","creator_id","createProjectCards","project","redirectToProjectPage","createCardGroup","itemsPerRow","CreateProjectModal","newProjectNameHasError","App","clear","location","pathname","path","render","routerProps","withRouter","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1061fe9.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction TaskModal(props) {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button \n          floated='left'\n          icon\n          labelPosition = 'left'\n          primary\n          onClick={props.onTriggerButtonClick}\n          size='small'>\n            <Icon name='plus square' /> Add Task\n        </Button>\n      }\n    >\n      <Modal.Header>Create new task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input \n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n                />\n            </Form.Field>\n            {props.createDropdowns()}\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n        // color='black' \n        onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n            type='submit'\n            icon='checkmark'\n            onClick={(event, data) => {\n              const text = data.taskName\n              setOpen(false)\n              props.handleSubmit(event, text)\n              }}\n            positive>\n          Create task\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default TaskModal","import React, {useState} from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction EditTaskModal(props) {\n  const [open, setOpen] = useState(false)\n\n\n  const handleTriggerButtonClick = () => {\n    props.putSelectedTaskDataInState(props.task.id)\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button\n          icon\n          onClick={handleTriggerButtonClick}\n          floated='right'>\n          <Icon name='pencil square' />\n        </Button>\n      }\n    >\n    <Modal.Header>Edit task</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input\n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n              />\n            </Form.Field>\n            {props.createDropdowns(props.task)}\n        </Form>\n      </Modal.Description>\n    </Modal.Content>\n      <Modal.Actions>\n        <Button\n          icon\n          labelPosition='right'\n          color='red'\n          floated='left'\n          onClick={() => {\n            const task = props.task\n            setOpen(false)\n            props.handleDelete(task)\n          }}\n        >\n          Delete task\n        <Icon name='trash alternate outline' />\n        </Button>\n        <Button  \n          onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event, data) => {\n            const task = props.task\n            setOpen(false)\n            props.handleSubmit(event, task)\n          }}\n          positive>\n          Update task\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditTaskModal\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Grid } from 'semantic-ui-react'\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button\n      color='red'\n      floated='left'>\n      <Icon name='trash alternate outline'/>\n      Delete project</Button>}\n    >\n      <Header icon>\n        <Icon name='trash alternate outline' />\n        <br/>\n        Are you sure you want to delete this project?\n      </Header>\n      <Modal.Content>\n      <Grid>\n        <Grid.Column width={3}/>\n        <Grid.Column width={10}>\n        <p>\n          {`Delete \"${props.projectName}\" along with all associated tasks?`}\n        </p>\n          </Grid.Column>\n          <Grid.Column width={3}/>\n      </Grid>\n      \n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='grey' inverted onClick={() => setOpen(false)}>\n          <Icon name='remove' /> No, go back\n        </Button>\n        <Button color='red' inverted \n        onClick={() => \n        {props.deleteProject(props.projectId)\n        setOpen(false)}}>\n          <Icon name='checkmark' /> Yes, delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\nimport deleteProjectWarningModal from './DeleteProjectWarningModal'\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleTriggerButtonClick = () => {\n    props.populateMembersToEdit()\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => {setOpen(true)}}\n\n      open={open}\n      trigger={<span><Button\n        style={{ marginLeft: '1.5vh', backgroundColor: \"white\" }}\n        icon\n        color='white'\n        size='big'\n        onClick={handleTriggerButtonClick}\n        >\n          <Icon \n            name='pencil square' />\n      </Button></span>}\n    >\n      <Modal.Header>Edit Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Project must have a name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n                {props.createDropdown}  \n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        {deleteProjectWarningModal(\n          {\n            projectName: props.projectName, \n            projectId: props.projectId, \n            deleteProject: props.deleteProject\n          }\n        )}\n        <Button\n          onClick={() => {setOpen(false)}}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Update project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Menu, Button } from 'semantic-ui-react'\n\nexport default (props) => (\n  <Menu borderless attached='top' style={{ border: 'none'}}>\n    <Menu.Menu position='right'>\n      <Menu.Item>\n      {props.userFullName ? `Logged in as ${props.userFullName}` : ''}\n      </Menu.Item>\n      {props.onBack && \n      <Menu.Item>\n        <Button\n          onClick={props.onBack}\n          floated=\"right\"\n        >{props.backText}</Button>\n      </Menu.Item>}\n      <Menu.Item>\n        <Button\n          onClick={props.logOut}\n        >Log out</Button>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n)","// export const API_HOST = `http://localhost:3001/api/v1`;\n\nexport const API_HOST = `https://enigmatic-fortress-89780.herokuapp.com/api/v1`;\n\nexport const REQUEST_HEADERS = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const AUTH_HEADERS = { \n  headers: { \n    ...REQUEST_HEADERS.headers, \n    'Authorization': `Bearer ${localStorage.token}` \n  }\n};","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  const fetchPromise = fetch(`${API_HOST}/projects`, AUTH_HEADERS)\n  const parsedFetchPromise = fetchPromise.then(res => res.json())\n  return parsedFetchPromise;\n}\n\nexport const show = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, AUTH_HEADERS)\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const create = (body) => {\n  return fetch(`${API_HOST}/projects`, {\n    ...AUTH_HEADERS, \n    method: 'POST',\n    body: JSON.stringify(body)\n  }).then(res => res.json())\n}\n\nexport const destroy = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS\n  })\n}\n\nexport const update = (projectId, projectName, projectStartDate) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      name: projectName,\n      // start_date: projectStartDate\n    }),\n    ...AUTH_HEADERS\n  }).then(res => res.json())\n}\n\n// export const AUTH_HEADERS = \n// {\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.token}`\n//   }\n// };\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const create = (userTask) => {\n  return fetch(`${API_HOST}/user_tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify(userTask)\n  })\n  .then(res => res.json())\n}\n\nexport const destroy = (userTaskId) => {\n  return fetch(`${API_HOST}/user_tasks/${userTaskId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS})\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\n\nexport const create = (userId, taskId) => {\n\n  // Example object destructuring. \n  // If I pass an object {user_id: X, task_id: Y} as an argument when this function is called, \n  // I can put {user_id, task_id} in the parameters here, and I will end up with \n  // two variables with those key names + values already assigned\n  // const {user_id, task_id} = body \n\n  return fetch(`${API_HOST}/flags`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({user_id: userId, task_id: taskId})\n  })\n}\n\nexport const destroy = (flagId) => {\n  return fetch(`${API_HOST}/flags/${flagId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/functions`, AUTH_HEADERS)\n  .then(res => res.json())\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/users/`, AUTH_HEADERS)\n    .then(res => res.json())\n}\n\nexport const login = ({email, password}) => {\n  return fetch(`${API_HOST}/login`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const signup = ({first_name, last_name, email, password}) => {\n  return fetch(`${API_HOST}/signup`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const profile = () => {\n  return fetch(`${API_HOST}/profile`, AUTH_HEADERS)\n  .then(res => res.json())\n}\n\nexport const available_projects = () => {\n  return fetch (`${API_HOST}/available_projects`, AUTH_HEADERS)\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\n  ","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (text, projectId) => {\n  return fetch(`${API_HOST}/tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      text: text,\n      project_id: projectId\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const update = (taskId, taskName, projectId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'PUT',\n    body: JSON.stringify({\n    text: taskName,\n    projectId: projectId\n    })\n  })\n}\n\nexport const destroy = (taskId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (memberId, projectId) => {\n  return fetch(`${API_HOST}/memberships`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      user_id: memberId,\n      project_id: projectId\n    })\n  })\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport const destroy = (membershipId) => {\n  return fetch(`${API_HOST}/memberships/${membershipId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE',\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}","// import all (*) the methods from all Model.js files; then export them all as one object (default) so that whenever you import you get all of them\n\nimport * as Project from './Project.js'\nimport * as UserTask from './UserTask.js'\nimport * as Flag from './Flag.js'\nimport * as Function from './Function.js'\nimport * as User from './User.js'\nimport * as Task from './Task.js'\nimport * as Membership from './Membership'\n\nexport default {Project, UserTask, Flag, Function, User, Task, Membership}","import React from \"react\";\nimport { Grid, Icon, Label, Table, Button, Form, Dropdown, Message, Header, Container, TableBody, Popup } from 'semantic-ui-react';\nimport TaskModal from './TaskModal';\nimport EditTaskModal from './EditTaskModal';\nimport EditProjectModal from './EditProjectModal';\nimport Nav from './Nav'\nimport { Link } from 'react-router-dom';\nimport API from '../api';\n\nexport default class RACITable extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allUsers: [],\n      newMembersToAdd: [],\n      showAddUsers: false,\n      hideTopMessage: true,\n      topMessage: {\n        header: '',\n        message: '',\n      },\n      projectId: '',\n      projectName: '',\n      projectNameForUpdating: '',\n      functions: [],\n      tasks: [],\n      creator: {},\n      members: [],\n      projectToEditMembers: [],\n      selectedTask: {\n        taskId: null,\n        taskText: null,\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskNameForUpdating: '',\n      taskToCreateUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskToEditUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      }\n    }\n  }\n\n  putProjectDataInState = () => {\n    const projectId = this.props.match.params.id\n\n    API.Project.show(projectId)\n      .then(data => this.setState({\n        projectId: data.data.id,\n        projectName: data.data.attributes.name,\n        projectNameForUpdating: data.data.attributes.name,\n        tasks: data.data.attributes.tasks,\n        creator: data.data.attributes.creator,\n        members: data.data.attributes.members,\n      }))\n      .catch(() => this.props.history.push('/projects'))\n\n    API.Function.index()\n      .then(data => this.setState({\n        functions: data.data\n      }\n      ))\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({allUsers: data.data}))\n  }\n\n  createTeamMemberOptions = () => {\n    return this.state.members.map(member => ({\n          key: member.id,\n          text: member.first_name,\n          value: member.id\n        }))\n  }\n\n  mapAllUsersToDropdown = () => {\n    return this.state.allUsers\n      // .filter(user => (!this.state.members.map(member => member.id).includes(parseInt(user.id))))\n      .map(user => ({\n        key: parseInt(user.id),\n        text: user.attributes.full_name,\n        value: parseInt(user.id)\n      }))\n  }\n\n  createDropdownForEditProjectModal = () => {\n    const defaultValues = this.state.members ? this.state.members.map((member) => member.id) : []\n    \n    return (\n      <Dropdown\n        placeholder='Add team members'\n        fluid\n        multiple\n        selection\n        options={this.mapAllUsersToDropdown()}\n        defaultValue={defaultValues}\n        onChange={(event, data) => { this.handleDropdownChangeForEditProjectModal(data) }}\n\n      />\n    )\n  }\n\n  createDropdownsForEditTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        const defaultValues = task ? task[functionName].map(userTask => userTask.user_id) : [];\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3,4].includes(parseInt(raciFunction.id))}\n              defaultValue={[3,4].includes(parseInt(raciFunction.id)) ? defaultValues : defaultValues[0]}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => {this.handleDropdownChangeForEditTaskModal(data, raciFunction)}}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  createDropdownsForCreateTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3, 4].includes(parseInt(raciFunction.id))}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => { this.handleDropdownChangeForCreateModal(data, raciFunction) }}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  handleDropdownChangeForCreateModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditTaskModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1){\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditProjectModal = (data) => {\n      this.setState({\n        projectToEditMembers: data.value\n      })\n  }\n\n  handleTextFieldChange = event => {\n    this.setState({\n      // selectedTask: {\n      //   ...this.state.selectedTask,\n      // task_name: event.target.value}\n      taskNameForUpdating: event.target.value\n    })\n  }\n\n  createUserTasks = (dataFromTaskCreation) => {\n\n    const taskId = parseInt(dataFromTaskCreation.data.id)\n\n    const userTasksToCreate = []\n\n    const userIdsForUserTasksToCreate = this.state.taskToCreateUserIds\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 1,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n      // Send the now-complete userTasks to the server for creation\n      \n    userTasksToCreate.forEach((userTask) => {\n        API.UserTask.create(userTask)\n          .then(this.putProjectDataInState)\n    })\n\n      this.setState({\n        userTasksToCreate: []\n      })\n}\n\n  handleSubmitOnTaskModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const text = this.state.taskNameForUpdating\n    API.Task.create(text, projectId)\n      .then(data => this.createUserTasks(data))\n  }\n\n  handleSubmitOnEditTaskModal = (event, task) => {\n    event.preventDefault()\n\n    const projectId = this.state.projectId\n\n    const userIdsForUserTasksToCreate = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const selectedTaskUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userTaskIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n    \n    // Assign data from state to our little variable here, for convenience\n\n    const taskToEditUserIds = this.state.taskToEditUserIds\n\n    // Parse data out of selectedTask (i.e. the user_ids for user_tasks already in the database) \n    // into the same shape as taskToEditUserIds\n\n    selectedTaskUserIds.responsible = this.state.selectedTask.responsible.map(user_task => {\n      return(user_task.user_id)\n    })\n\n    selectedTaskUserIds.accountable = this.state.selectedTask.accountable.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.consulted = this.state.selectedTask.consulted.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.informed = this.state.selectedTask.informed.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    // For each function, do a diff to find the user_ids which have been removed \n    // from selectedTask (i.e. those we need to delete)\n\n    userIdsForUserTasksToDelete.responsible = selectedTaskUserIds.responsible.filter(n => !taskToEditUserIds.responsible.includes(n))\n    userIdsForUserTasksToDelete.accountable = selectedTaskUserIds.accountable.filter(n => !taskToEditUserIds.accountable.includes(n))\n    userIdsForUserTasksToDelete.consulted = selectedTaskUserIds.consulted.filter(n => !taskToEditUserIds.consulted.includes(n))\n    userIdsForUserTasksToDelete.informed = selectedTaskUserIds.informed.filter(n => !taskToEditUserIds.informed.includes(n))\n\n    // For each function, do a diff to find the user_ids which have been added \n    // to selectedTask (i.e. those we need to create)\n    \n    userIdsForUserTasksToCreate.responsible = taskToEditUserIds.responsible.filter(n => !selectedTaskUserIds.responsible.includes(n))\n    userIdsForUserTasksToCreate.accountable = taskToEditUserIds.accountable.filter(n => !selectedTaskUserIds.accountable.includes(n))\n    userIdsForUserTasksToCreate.consulted = taskToEditUserIds.consulted.filter(n => !selectedTaskUserIds.consulted.includes(n))\n    userIdsForUserTasksToCreate.informed = taskToEditUserIds.informed.filter(n => !selectedTaskUserIds.informed.includes(n))\n  \n    // Build array of user task IDs which need to be deleted\n\n    userTaskIdsForUserTasksToDelete.responsible = this.state.selectedTask.responsible.map(user_task => {\n      if (userIdsForUserTasksToDelete.responsible.includes(user_task.user_id)) {\n          return (user_task.user_task_id)\n        }\n      })\n\n    userTaskIdsForUserTasksToDelete.accountable = this.state.selectedTask.accountable.map(user_task => {\n      if (userIdsForUserTasksToDelete.accountable.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.consulted = this.state.selectedTask.consulted.map(user_task => {\n      if (userIdsForUserTasksToDelete.consulted.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.informed = this.state.selectedTask.informed.map(user_task => {\n      if (userIdsForUserTasksToDelete.informed.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    const getKeys = Object.values(userTaskIdsForUserTasksToDelete)\n    const deleteThesePuppies = [].concat.apply([], getKeys)\n    const deleteThesePuppiesFiltered = deleteThesePuppies.filter((itemInArray) => {\n      return itemInArray !== undefined\n    })\n\n    // Build user tasks to be created\n\n    const taskId = task.id\n    const userTasksToCreate = []\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n            {\n              task_id: taskId,\n              function_id: 1,\n              user_id: userId\n            }\n        )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Delete user tasks\n\n    deleteThesePuppiesFiltered.forEach((userTaskId) => {\n        apiPromises.push(API.UserTask.destroy(userTaskId))\n    })\n\n    // Send user tasks to the server for creation!\n\n      userTasksToCreate.forEach((userTask) => {\n          apiPromises.push(API.UserTask.create(userTask))\n      })  \n\n      // Update the task text\n\n      if (this.state.taskNameForUpdating !== this.state.selectedTask.taskName) {\n        if (this.state.taskNameForUpdating !== '') {\n          apiPromises.push(API.Task.update(taskId, this.state.taskNameForUpdating, projectId))\n        } else {\n          // do error thing here\n        }\n      }\n\n      Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n\n  handleSubmitOnEditProjectModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const existingMemberIds = this.state.members.map(member => member.id)\n    const projectToEditUserIds = this.state.projectToEditMembers\n    const membersToDeleteIds = []\n    const membersToCreateIds = []\n    const membershipIdsForMembershipsToDelete = []\n\n    // Check if there are any IDs in projectToEditUserIds which are not in existingMembers, \n    // and add them to membersToCreate\n    \n    projectToEditUserIds.forEach(id => {\n      if(existingMemberIds.includes(id)) {\n        return\n      } else {\n        membersToCreateIds.push(id) \n      }\n    })\n\n    // Check if there are any IDs which have been removed, when compared with existing Members\n    // and add them to membersToDelete\n    \n    existingMemberIds.forEach(id => {\n      if (projectToEditUserIds.includes(id)) {\n        return\n      } else {\n        membersToDeleteIds.push(id) \n      }\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Create Memberships\n    membersToCreateIds.forEach(memberId => {\n     apiPromises.push(API.Membership.create(memberId, projectId))\n    })\n\n    // Delete Memberships\n\n    this.state.members.forEach(member => {\n      if(membersToDeleteIds.includes(member.id)) {\n        membershipIdsForMembershipsToDelete.push(member.membership_id)\n      }\n    })\n\n    membershipIdsForMembershipsToDelete.forEach(membershipId => {\n      apiPromises.push(API.Membership.destroy(membershipId))\n    })\n\n    // Update the text on the project, if it has changed\n\n    if (this.state.projectName !== this.state.projectNameForUpdating) {\n      if (this.state.projectNameForUpdating !== '') {\n        apiPromises.push(API.Project.update(projectId, this.state.projectNameForUpdating))\n      } else {\n        // do error thing here\n      }\n    }\n\n    Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n      \n  putSelectedProjectMembersDataInState = () => {\n    let membersToShoveInState = []\n    this.state.members.forEach(member => {\n      membersToShoveInState = [...membersToShoveInState, member.id]\n      })\n    this.setState({\n      projectToEditMembers: membersToShoveInState\n    })\n  }\n\n  putSelectedTaskDataInState = (id) => {\n    let taskToPutInState = null\n    let taskName = null\n\n    const taskToEditUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    this.state.tasks.forEach(task => {\n      if(task.id === id) {\n        // Get the task / user task data to put into state\n\n        taskToPutInState = task\n        taskName = task.task_name\n\n        // Get an array of IDs for the user tasks, organized by function\n\n        taskToEditUserIds.responsible = task.responsible.map(user_task => user_task.user_id)\n        taskToEditUserIds.accountable = task.accountable.map(user_task => user_task.user_id)\n        taskToEditUserIds.consulted = task.consulted.map(user_task => user_task.user_id)\n        taskToEditUserIds.informed = task.informed.map(user_task => user_task.user_id)\n      }  \n    })\n\n    this.setState({\n      selectedTask: taskToPutInState,\n      taskNameForUpdating: taskName,\n      taskToEditUserIds: taskToEditUserIds\n    })\n  }\n\n  handleDelete = (task) => {\n    API.Task.destroy(task.id)\n    .then(this.putProjectDataInState)\n\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({newMembersToAdd: data.value})\n  }\n\n  handleFlagging = (task) => {\n    let flagToDeleteId = null\n    const flagUserIds = task.flags.map(flag => flag.user_id)\n\n    if (flagUserIds.includes(this.props.userId)) {\n      task.flags.forEach(flag => {\n        if(flag.user_id === this.props.userId) {\n          API.Flag.destroy(flag.flag_id)\n          .then(this.putProjectDataInState)\n        }\n      })\n    }\n    else {\n      API.Flag.create(this.props.userId, task.id)\n        .then(this.putProjectDataInState)\n    }\n  }\n\n  createNewMembers = () => {\n    this.state.newMembersToAdd.forEach((memberId) => {\n\n      API.Membership.create(memberId, this.state.projectId)  \n        .then(this.putProjectDataInState)\n        .catch((data) => {\n          this.setState({\n            topMessage: {\n              header: 'Error',\n              message: data.errors\n            },\n            hideTopMessage: false\n          })\n          setTimeout(() => this.setState({ \n            hideTopMessage: true, \n            topMessage: { header: ``, message: '' } }), 2000)\n        })\n    })\n    this.setState({ \n      showAddUsers: false,\n      // newMembersToAdd: [] \n    })\n  }\n\n  deleteUserTask = (user_task) => {\n    API.UserTask.destroy(user_task.user_task_id)\n      .then(this.putProjectDataInState)\n      // .then(() => {\n      //   this.setState({ hideTopMessage: false, topMessage: { header: `successfully deleted ${user_task.full_name} from task`, message: 'woooh!'}})\n      //   setTimeout(() => this.setState({ hideTopMessage: true, topMessage: { header: ``, message: '' } }), 1000)\n      // })\n  }\n\n  deleteProject = (projectId) => {\n    API.Project.destroy(projectId)\n    .then(this.redirectToProjectsIndexPage)\n  }\n\n  redirectToProjectsIndexPage = () => {\n    this.props.history.push(`/projects`)\n  }\n\n  handleProjectNameChange = (event) => {\n    const projectName = event.target.value;\n    this.setState({ projectNameForUpdating: projectName })\n  }\n\n  componentDidMount() {\n      if (localStorage.token) {\n        this.props.authenticateMe()\n        this.putAllUsersDataInState()\n        this.putProjectDataInState()\n      } else {\n        this.props.history.push('/login')\n      }\n  }\n\n    render() {\n      return(\n        <Container>\n          <Message hidden={this.state.hideTopMessage}>\n            <Message.Header>{this.state.topMessage.header}</Message.Header>\n            <p>\n              {this.state.topMessage.message}\n            </p>\n          </Message>\n          <Nav logOut={this.props.logOut} onBack={this.redirectToProjectsIndexPage} backText={'Back to Projects'} userFullName={this.props.userFullName}/>\n          <Header as=\"h1\">{this.state.projectName}\n            <EditProjectModal \n              projectId={this.state.projectId}\n              populateMembersToEdit={this.putSelectedProjectMembersDataInState}\n              onProjectNameChange={this.handleProjectNameChange}\n              projectName={this.state.projectNameForUpdating}\n              createDropdown={this.createDropdownForEditProjectModal()}\n              handleDropdownChange={this.handleDropdownChangeForEditProjectModal}\n              onSubmit={this.handleSubmitOnEditProjectModal}\n              deleteProject={this.deleteProject}\n            />\n          </Header>\n          \n          <Grid>\n          { this.state.showAddUsers ?\n            (\n              <Grid.Column width={8}>\n                  <div>\n                    <Dropdown placeholder='Add Users' onChange={this.handleNewMemberSelection} fluid multiple selection options={this.mapAllUsersToDropdown()} />\n                    <Button\n                      onClick={this.createNewMembers}\n                    >Add users</Button>\n                  </div>\n              </Grid.Column>\n            ) :(\n              <Grid.Column width={8}>\n                <Label.Group circular>\n                    {this.state.members.map((member, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6}} content={member.full_name} trigger={<Label key={index}>{member.initials}</Label>}></Popup>)}\n                </Label.Group>\n              </Grid.Column>\n            )\n          }\n\n            {/* <Popup content='Add users to your feed' trigger={<Button icon='add' />} /> */}\n\n\n\n          </Grid>\n          \n       \n          <Table celled> \n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width='four'>Task</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Responsible</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Accountable</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Consulted</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Informed</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.tasks.map((task, index) => {\n              return (<Table.Row \n                error={task.flags.length > 0}\n                key={index}>\n                <Table.Cell>\n                  <Grid>\n                  <Grid.Column width={11}>\n                  {task.task_name}\n                  <Label.Group circular>\n                    {task.flags.map((flag, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6 }} content={flag.user_full_name} trigger={<Label key={index} color=\"red\">{flag.user_initials}</Label>}></Popup>)}\n                  </Label.Group>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                      <EditTaskModal\n                        task={task}\n                        projectId={this.state.projectId}\n                        createDropdowns={() => this.createDropdownsForEditTaskModal(task)}\n                        putSelectedTaskDataInState={this.putSelectedTaskDataInState}\n                        taskName={this.state.taskNameForUpdating}\n                        handleTextFieldChange={this.handleTextFieldChange}\n                        handleDropdownChange={this.handleDropdownChangeForEditTaskModal}\n                        handleSubmit={this.handleSubmitOnEditTaskModal}\n                        handleDelete={this.handleDelete}\n                      />\n                      <Button\n                        icon\n                        onClick={() => { this.handleFlagging(task) }}\n                        inverted={!(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? true : false)}\n                        floated=\"right\">\n                        <Icon\n                          color=\"grey\"\n                          name=\"flag outline\"></Icon>\n                      </Button>\n                    </Grid.Column>\n                  </Grid>\n                </Table.Cell>\n                <Table.Cell>\n                  {\n                    task.responsible.map((user_task, i) => {\n                      return (<Label \n                                key={i}\n                                  style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                  {user_task.user_first_name}\n                                  <Icon\n                                    onClick={() => this.deleteUserTask(user_task)}\n                                    name='delete' />\n                                </Label>)\n                    })\n                      }\n                </Table.Cell>\n                <Table.Cell>{\n                    task.accountable.map((user_task, i) => {\n                      return (<Label\n                                key={i}\n                                style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                {user_task.user_first_name}\n                                <Icon\n                                  onClick={() => this.deleteUserTask(user_task)}\n                                  name='delete' />\n                              </Label>)\n                  } )}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.consulted.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.informed.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n              </Table.Row>)\n            })}  \n            </Table.Body>\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <TaskModal\n                    projectId={this.state.projectId}\n                    raciFunctions={this.state.functions}\n                    createDropdowns={this.createDropdownsForCreateTaskModal}\n                    taskName={this.state.selectedTask.task_name}\n                    handleTextFieldChange={this.handleTextFieldChange}\n                    handleDropdownChange={this.handleDropdownChangeForCreateModal}\n                    onTriggerButtonClick={() => {\n                      this.setState({\n                        selectedTask: {\n                          taskId: null,\n                          task_name: null,\n                          responsible: [],\n                          accountable: [],\n                          consulted: [],\n                          informed: []\n                        }\n                      })\n                    }}\n                    handleSubmit={this.handleSubmitOnTaskModal} />\n                </Table.HeaderCell>\n                <Table.HeaderCell colSpan='4'>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Container>\n      )\n    }\n\n}\n\n\n// const TestComponent = (props) => {\n//   props.fab\n//   return (\n//     <select onChange={(event, data) => props.onChange(event, data, 2)}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//       {/* <option value={2}>hi</option>\n//       <option value={3}>yo</option> */}\n//     </select>\n//   )\n// }\n\n// <TestComponent onChange={(hi, fab, gu) => {alert(gu)}} fab='poop' options={[{text: 'hi', value: 2}, {text: 'yo', value: 3}]}/>\n\n\n{/* <select id=\"poop\"></select>\n\ndocument.querySelector(\"#poop\").addEventListener(\"change\", (event,poop, gu,sup, pickles) => {\n\n})\n\nmyFunciton(event) */}\n\n\n\n// const DropDown = (props) => {\n//   const handleOnChange = (e, data) => {\n//     props.onDropChange(`hello! ${data.value}`)\n//   }\n//   return (\n//     <select onChange={handleOnChange}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//     </select>\n//   )\n// }\n\n\n// <DropDown onDropChange={(alertMessage) => alert(alertMessage)} options={[{ text: 'hi', value: 2 }, { text: 'yo', value: 3 }]} />\n\n\n// Everytime you change the Dropdown, \n// there should be an alert which alerts \n// the third argument of your custom callback for onChange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Input, Button, Form, Card, Container, Grid, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { API_HOST } from '../api/helper';\nimport API from '../api'\n\nexport default class Login extends React.Component {\n  \n  constructor() {\n    super()\n\n    this.state = {\n      loginInfo: {\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  loginInfoIsFull = () => {\n\n    return (this.state.loginInfo.password.length > 1 ? true : false)\n  }\n \n  handleSubmit = (e) => {\n    e.preventDefault()\n    API.User.login(this.state.loginInfo)\n    .then(data => {\n      if(data.token) {\n      localStorage.token = data.token\n      this.props.history.push('/projects')\n      } \n    })\n    .catch((data) => {\n      this.setState({\n        errors: data.errors[0]\n        })\n      setTimeout(() => this.setState({\n        errors: null,\n       }), 2000)\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n        loginInfo: {\n        ...prevState.loginInfo,\n        [e.target.name]: e.target.value\n        }\n    }))\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.history.push('/projects')\n    }\n  }\n\n  render(){\n    return(\n      <Container style={{height: '100vh', marginTop: '10%'}}textAlign=\"center\">\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Login</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange} />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange} />\n              <Message\n                error\n                header={'Error'}\n                content={this.state.errors}  \n                ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.loginInfo.email) && this.loginInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Log in\n            </Button>\n          </Form>\n          <br />\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </Card>\n      </Container>\n    )\n  }\n}","// do componentDidMount wiht same fetch request etc as login but post to signup not login\n\nimport React from 'react'\nimport { Button, Form, Container, Card, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport API from '../api'\n\nexport default class SignUp extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      signupInfo: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  signupInfoIsFull = () => {\n   return (this.state.signupInfo.first_name.length > 1 && this.state.signupInfo.last_name.length > 1 && this.state.signupInfo.password.length > 1 ? true : false)\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n      signupInfo: {\n        ...prevState.signupInfo,\n        [e.target.name]: e.target.value\n      }\n    }))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n      API.User.signup(this.state.signupInfo)\n      .then(data => {\n        if(data.token) {\n          localStorage.token = data.token\n          this.props.history.push('/projects')\n        }\n      })\n      .catch((data) => {\n        if(data) {\n          this.setState({\n            errors: data.errors[0]\n          })\n          setTimeout(() => {\n            this.setState({\n              errors: null\n            })}, 2000)\n        }\n        else {\n          this.setState({\n            errors: 'There was a problem creating your account. Please try again'\n          })\n        }\n      })\n  }\n\n  render () {\n    \n    return (\n      <Container style={{height: '100vh', marginTop: '10%'}} textAlign=\"center\">\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Sign up</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='First name'\n              type='text'\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Last name'\n              type='text'\n              name='last_name'\n              value={this.state.last_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <Message \n              error\n              header={'Error'}\n              content={this.state.errors}\n            ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.signupInfo.email) && this.signupInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Create account\n            </Button>\n          </Form>\n          <br />\n          Already have an account?  <Link to=\"/login\">Login</Link>\n        </Card>\n      </Container>)\n  }\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={props.trigger}\n    >\n      <Modal.Header>Create Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Please enter your first name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n                placeholder='Describe the project'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n              <Dropdown \n              placeholder='Add team members' \n              onChange={props.onDropdownChange} \n              fluid \n              multiple \n              selection \n              options={props.dropdownOptions} />\n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          onClick={\n            () => {\n              setOpen(false)\n              props.onCancel()\n            }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Create project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { Card, Button, Header, Icon, Container, Menu} from 'semantic-ui-react';\nimport CreateProjectModal from './CreateProjectModal';\nimport Nav from './Nav'\nimport API from '../api';\n\nexport default class ProjectsList extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      projects: [],\n      allUsers: [],\n      projectName: '',\n      newMembersToAdd: [],\n      newProjectNameHasError: false,\n    }\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({ allUsers: data.data }))\n  }\n\n  putProjectsDataInState = () => {\n    API.User.available_projects()\n    .then(data => {\n      this.setState({\n        projects: data.data\n      })}\n    )\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({ newMembersToAdd: data.value })\n  }\n\n  handleProjectNameChange = (event) => {\n\n    const projectName = event.target.value;\n    // if (projectName.length < 2) {\n    //   this.setState({newProjectNameHasError: true})\n    // } else {\n    //   this.setState({ newProjectNameHasError: false })\n    // }\n    this.setState({ projectName: projectName})\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({ \n      key: user.id, \n      text: user.attributes.full_name, \n      value: user.id }))\n  }\n\n  clearProjectNameField = () => {\n    this.setState({projectName: \"\"})\n  }\n\n  createNewMembers = (projectId) => {\n    this.state.newMembersToAdd.forEach((memberId, index) => {\n      API.Membership.create(memberId, projectId)\n    })\n  }\n\n  createNewProject = () => {\n    API.Project.create({name: this.state.projectName, creator_id: this.props.userId})\n      .then(data => {\n        const projectId = data.data.id\n        this.createNewMembers(projectId)\n      })\n      .then(this.putProjectsDataInState)\n  }\n\n  createProjectCards = () => {\n    return this.state.projects.map((project, index) => {\n\n      return (\n        <Card\n          key={index}\n          header={project.attributes.name}\n          style={{ height: '15vh' }}\n          // description={''}\n          // meta={''}\n          onClick={() => {\n            const projectId = project.id\n            this.redirectToProjectPage(projectId)}\n           }>\n        </Card>\n      )\n    })\n  }\n\n  redirectToProjectPage = (projectId) => {\n    this.props.history.push(`/projects/${projectId}`)\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.authenticateMe()\n      this.putProjectsDataInState()\n      this.putAllUsersDataInState()\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n  \n \n  createCardGroup = () => {\n    return(\n      <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n      {this.createProjectCards()}\n        <CreateProjectModal\n          projectNameHasError={this.state.newProjectNameHasError}\n          trigger={<Card color=\"blue\" header={<span><Icon name=\"plus\" color=\"blue\" /><Header color=\"blue\">Add project</Header></span>}/>}\n          onDropdownChange={this.handleNewMemberSelection}\n          dropdownOptions={this.mapAllUsersToDropdownOptions()}\n          onProjectNameChange={this.handleProjectNameChange}\n          projectName={this.state.projectName}\n          onSubmit={this.createNewProject}\n          onCancel={this.clearProjectNameField}\n        />\n      </Card.Group>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav logOut={this.props.logOut} userFullName={this.props.userFullName}/>\n        {this.createCardGroup()}\n      </Container>\n    )\n  }\n}","import './App.css';\nimport React from 'react';\nimport RACITable from './components/RACITable';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport ProjectsList from './components/ProjectsList';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport API from './api'\n\nclass App extends React.Component {\n\n  state = {\n    user_id: null,\n    full_name: null\n\n  }\n\n  authenticateMe = () => {\n    API.User.profile()\n      .then(data => {\n        this.setState({ \n          user_id: parseInt(data.data.id), \n          full_name: data.data.attributes.full_name\n        })})\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n  \n  componentDidMount() {\n    if (localStorage.token) {\n      this.authenticateMe()\n    } else {\n      if (this.props.location.pathname !== '/signup') {\n        this.props.history.push('/login')\n      }\n    }\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Switch>\n          <Route \n            path=\"/login\" \n            render={routerProps => <Login {...routerProps} authenticateMe={this.authenticateMe} user_id={this.state.user_id}/> } />\n          <Route \n            path=\"/signup\" \n            render={routerProps => <SignUp {...routerProps}/>} />\n          <Route \n            path=\"/projects/:id\" \n            render={routerProps => <RACITable {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut}/>} />\n          <Route \n            path=\"/projects\" \n            render={routerProps => <ProjectsList {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut} />} />\n          <Route \n            path=\"/\"\n            render={routerProps => <ProjectsList {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut} />} />\n        </Switch>\n      </div>\n    )\n\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}