{"version":3,"sources":["components/TaskModal.js","components/EditTaskModal.js","components/DeleteProjectWarningModal.js","components/Nav.js","api/helper.js","api/Project.js","api/UserTask.js","api/Flag.js","api/Function.js","api/User.js","api/Task.js","api/Membership.js","api/index.js","components/RACITable.js","components/Login.js","components/SignUp.js","components/CreateProjectModal.js","components/ProjectsList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskModal","props","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","floated","icon","labelPosition","primary","onClick","onTriggerButtonClick","size","Icon","name","Header","Content","Description","Form","Field","placeholder","value","taskName","onChange","handleTextFieldChange","createDropdowns","Actions","type","event","data","text","handleSubmit","positive","EditTaskModal","putSelectedTaskDataInState","task","id","color","handleDelete","basic","Grid","Column","width","projectName","inverted","deleteProject","projectId","Menu","borderless","attached","style","border","position","Item","userFullName","onBack","backText","logOut","API_HOST","AUTH_HEADERS","headers","localStorage","token","index","fetch","then","res","json","show","create","body","method","JSON","stringify","destroy","userTask","userTaskId","userId","taskId","user_id","task_id","flagId","login","email","password","signup","first_name","last_name","profile","project_id","memberId","a","ok","Promise","reject","Project","UserTask","Flag","Function","User","Task","Membership","RACITable","putProjectDataInState","match","params","API","setState","attributes","tasks","creator","members","functions","putAllUsersDataInState","allUsers","createTeamMemberOptions","state","map","member","key","createDropdownsForEditModal","raciFunction","functionName","toLowerCase","defaultValues","Dropdown","fluid","multiple","includes","parseInt","defaultValue","selection","options","handleDropdownChangeForEditModal","createDropdownsForCreateModal","handleDropdownChangeForCreateModal","raciFunctionId","taskToCreateUserIds","responsible","accountable","consulted","informed","taskToEditUserIds","selectedTask","task_name","target","createUserTasks","dataFromTaskCreation","userTasksToCreate","userIdsForUserTasksToCreate","forEach","push","function_id","handleSubmitOnTaskModal","preventDefault","handleSubmitOnEditTaskModal","userIdsForUserTasksToDelete","selectedTaskUserIds","userTaskIdsForUserTasksToDelete","user_task","filter","n","user_task_id","getKeys","Object","values","deleteThesePuppiesFiltered","concat","apply","itemInArray","undefined","taskToPutInState","handleNewMemberSelection","newMembersToAdd","handleFlagging","flags","flag","flag_id","createNewMembers","showAddUsers","deleteUserTask","redirectToProjectsIndexPage","mapAllUsersToDropdown","user","full_name","history","hideTopMessage","topMessage","header","message","taskText","this","authenticateMe","Container","Message","hidden","Nav","as","Label","Group","circular","initials","Table","celled","Row","HeaderCell","Body","error","length","Cell","user_initials","handleDropdownChange","i","user_full_name","Footer","fullWidth","raciFunctions","colSpan","DeleteProjectWarningModal","Component","Login","e","handleChange","height","marginTop","textAlign","Card","centered","paddingTop","paddingBottom","paddingLeft","paddingRight","Input","to","SignUp","projectNameHasError","content","pointing","onProjectNameChange","onDropdownChange","dropdownOptions","onCancel","onSubmit","ProjectsList","putProjectsDataInState","projects","handleProjectNameChange","newProjectNameHasError","mapAllUsersToDropdownOptions","clearProjectNameField","createNewProject","creator_id","createProjectCards","project","description","meta","redirectToProjectPage","createCardGroup","itemsPerRow","CreateProjectModal","App","clear","location","pathname","path","render","routerProps","withRouter","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cea917f4.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction TaskModal(props) {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button \n          floated='left'\n          icon\n          labelPosition = 'left'\n          primary\n          onClick={props.onTriggerButtonClick}\n          size='small'>\n            <Icon name='plus square' /> Add Task\n        </Button>\n      }\n    >\n      <Modal.Header>Create new task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input \n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n                />\n            </Form.Field>\n            {props.createDropdowns()}\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n        // color='black' \n        onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n            type='submit'\n            icon='checkmark'\n            onClick={(event, data) => {\n              const text = data.taskName\n              setOpen(false)\n              props.handleSubmit(event, text)\n              }}\n            positive>\n          Create task\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default TaskModal","import React, {useState} from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction EditTaskModal(props) {\n  const [open, setOpen] = useState(false)\n\n\n  const handleTriggerButtonClick = () => {\n    props.putSelectedTaskDataInState(props.task.id)\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button\n          icon\n          onClick={handleTriggerButtonClick}\n          floated='right'>\n          <Icon name='pencil square' />\n        </Button>\n      }\n    >\n    <Modal.Header>Edit task</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input\n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n              />\n            </Form.Field>\n            {props.createDropdowns(props.task)}\n        </Form>\n      </Modal.Description>\n    </Modal.Content>\n      <Modal.Actions>\n        <Button\n          icon\n          labelPosition='right'\n          color='red'\n          floated='left'\n          onClick={() => {\n            const task = props.task\n            setOpen(false)\n            props.handleDelete(task)\n          }}\n        >\n          Delete task\n        <Icon name='trash alternate outline' />\n        </Button>\n        <Button  \n          onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event, data) => {\n            const task = props.task\n            setOpen(false)\n            props.handleSubmit(event, task)\n          }}\n          positive>\n          Update task\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditTaskModal\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Grid } from 'semantic-ui-react'\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button\n      color='red'\n      floated='right'>\n      <Icon name='trash alternate outline'/>\n      Delete project</Button>}\n    >\n      <Header icon>\n        <Icon name='trash alternate outline' />\n        <br/>\n        Are you sure you want to delete this Project?\n      </Header>\n      <Modal.Content>\n      <Grid>\n        <Grid.Column width={3}/>\n        <Grid.Column width={10}>\n        <p>\n          {`Delete \"${props.projectName}\" along with all associated tasks?`}\n        </p>\n          </Grid.Column>\n          <Grid.Column width={3}/>\n      </Grid>\n      \n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='grey' inverted onClick={() => setOpen(false)}>\n          <Icon name='remove' /> No, go back\n        </Button>\n        <Button color='red' inverted \n        onClick={() => \n        {props.deleteProject(props.projectId)\n        setOpen(false)}}>\n          <Icon name='checkmark' /> Yes, delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Menu, Button } from 'semantic-ui-react'\n\nexport default (props) => (\n  <Menu borderless attached='top' style={{ border: 'none'}}>\n    <Menu.Menu position='right'>\n      <Menu.Item>\n      {`Logged in as ${props.userFullName}`}\n      </Menu.Item>\n      {props.onBack && \n      <Menu.Item>\n        <Button\n          onClick={props.onBack}\n          floated=\"right\"\n        >{props.backText}</Button>\n      </Menu.Item>}\n      <Menu.Item>\n        <Button\n          onClick={props.logOut}\n        >Log out</Button>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n)","// export const API_HOST = `http://localhost:3001/api/v1`;\n\nexport const API_HOST = `https://enigmatic-fortress-89780.herokuapp.com/api/v1`;\n\nexport const REQUEST_HEADERS = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const AUTH_HEADERS = { \n  headers: { \n    ...REQUEST_HEADERS.headers, \n    'Authorization': `Bearer ${localStorage.token}` \n  }\n};","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  const fetchPromise = fetch(`${API_HOST}/projects`, AUTH_HEADERS)\n  const parsedFetchPromise = fetchPromise.then(res => res.json())\n  return parsedFetchPromise;\n}\n\nexport const show = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, AUTH_HEADERS).then(res => res.json());\n}\n\nexport const create = (body) => {\n  return fetch(`${API_HOST}/projects`, {\n    ...AUTH_HEADERS, \n    method: 'POST',\n    body: JSON.stringify(body)\n  }).then(res => res.json())\n}\n\nexport const destroy = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS\n  })\n}\n\n// export const AUTH_HEADERS = \n// {\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.token}`\n//   }\n// };\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const create = (userTask) => {\n  return fetch(`${API_HOST}/user_tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify(userTask)\n  })\n  .then(res => res.json())\n}\n\nexport const destroy = (userTaskId) => {\n  return fetch(`${API_HOST}/user_tasks/${userTaskId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS})\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\n\nexport const create = (userId, taskId) => {\n\n  // Example object destructuring. \n  // If I pass an object {user_id: X, task_id: Y} as an argument when this function is called, \n  // I can put {user_id, task_id} in the parameters here, and I will end up with \n  // two variables with those key names + values already assigned\n  // const {user_id, task_id} = body \n\n  return fetch(`${API_HOST}/flags`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({user_id: userId, task_id: taskId})\n  })\n}\n\nexport const destroy = (flagId) => {\n  return fetch(`${API_HOST}/flags/${flagId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/functions`, AUTH_HEADERS)\n  .then(res => res.json())\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/users/`, AUTH_HEADERS)\n    .then(res => res.json())\n}\n\nexport const login = ({email, password}) => {\n  return fetch(`${API_HOST}/login`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  })\n    .then(res => res.json())\n}\n\nexport const signup = ({first_name, last_name, email, password}) => {\n  return fetch(`${API_HOST}/signup`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password\n    })\n  })\n    .then(res => res.json())\n}\n\nexport const profile = () => {\n  return fetch(`${API_HOST}/profile`, AUTH_HEADERS)\n  .then(res => res.json())\n}\n\n  ","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (text, projectId) => {\n  return fetch(`${API_HOST}/tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      text: text,\n      project_id: projectId\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const destroy = (taskId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (memberId, projectId) => {\n  return fetch(`${API_HOST}/memberships`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      user_id: memberId,\n      project_id: projectId\n    })\n  })\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}","// import all (*) the methods from all Model.js files; then export them all as one object (default) so that whenever you import you get all of them\n\nimport * as Project from './Project.js'\nimport * as UserTask from './UserTask.js'\nimport * as Flag from './Flag.js'\nimport * as Function from './Function.js'\nimport * as User from './User.js'\nimport * as Task from './Task.js'\nimport * as Membership from './Membership'\n\nexport default {Project, UserTask, Flag, Function, User, Task, Membership}","import React from \"react\";\nimport { Grid, Icon, Label, Table, Button, Form, Dropdown, Message, Header, Container } from 'semantic-ui-react';\nimport TaskModal from './TaskModal';\nimport EditTaskModal from './EditTaskModal';\nimport DeleteProjectWarningModal from './DeleteProjectWarningModal'\nimport Nav from './Nav'\nimport { Link } from 'react-router-dom';\nimport API from '../api';\n\nexport default class RACITable extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allUsers: [],\n      newMembersToAdd: [],\n      showAddUsers: false,\n      hideTopMessage: true,\n      topMessage: {\n        header: '',\n        message: '',\n      },\n      projectId: '',\n      projectName: '',\n      functions: [],\n      tasks: [],\n      creator: {},\n      members: [],\n      selectedTask: {\n        taskId: null,\n        taskText: null,\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskToCreateUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskToEditUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      }\n    }\n  }\n\n  putProjectDataInState = () => {\n    const projectId = this.props.match.params.id\n\n    API.Project.show(projectId)\n      .then(data => this.setState({\n        projectId: data.data.id,\n        projectName: data.data.attributes.name,\n        tasks: data.data.attributes.tasks,\n        creator: data.data.attributes.creator,\n        members: data.data.attributes.members,\n      }))\n\n    API.Function.index()\n      .then(data => this.setState({\n        functions: data.data\n      }\n      ))\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({allUsers: data.data}))\n  }\n\n  createTeamMemberOptions = () => {\n    return this.state.members.map(member => ({\n          key: member.first_name,\n          text: member.first_name,\n          value: member.id\n        }))   \n  }\n\n  createDropdownsForEditModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        const defaultValues = task ? task[functionName].map(userTask => userTask.user_id) : [];\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3,4].includes(parseInt(raciFunction.id))}\n              defaultValue={[3,4].includes(parseInt(raciFunction.id)) ? defaultValues : defaultValues[0]}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => {this.handleDropdownChangeForEditModal(data, raciFunction)}}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  createDropdownsForCreateModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3, 4].includes(parseInt(raciFunction.id))}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => { this.handleDropdownChangeForCreateModal(data, raciFunction) }}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  handleDropdownChangeForCreateModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1){\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleTextFieldChange = event => {\n    this.setState({\n      selectedTask: {\n        ...this.state.selectedTask,\n      task_name: event.target.value}\n    })\n  }\n\n  createUserTasks = (dataFromTaskCreation) => {\n\n    const taskId = parseInt(dataFromTaskCreation.data.id)\n\n    const userTasksToCreate = []\n\n    const userIdsForUserTasksToCreate = this.state.taskToCreateUserIds\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 1,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n      // Send the now-complete userTasks to the server for creation\n      \n    userTasksToCreate.forEach((userTask) => {\n        API.UserTask.create(userTask)\n          .then(this.putProjectDataInState)\n    })\n\n      this.setState({\n        userTasksToCreate: []\n      })\n}\n\n  handleSubmitOnTaskModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const text = this.state.selectedTask.task_name\n    API.Task.create(text, projectId)\n      .then(data => this.createUserTasks(data))\n  }\n\n  handleSubmitOnEditTaskModal = (event, task) => {\n    event.preventDefault()\n\n    const userIdsForUserTasksToCreate = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const selectedTaskUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userTaskIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n    \n    // Assign data from state to our little variable here, for convenience\n\n    const taskToEditUserIds = this.state.taskToEditUserIds\n\n    // Parse data out of selectedTask (i.e. the user_ids for user_tasks already in the database) \n    // into the same shape as taskToEditUserIds\n\n    selectedTaskUserIds.responsible = this.state.selectedTask.responsible.map(user_task => {\n      return(user_task.user_id)\n    })\n\n    selectedTaskUserIds.accountable = this.state.selectedTask.accountable.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.consulted = this.state.selectedTask.consulted.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.informed = this.state.selectedTask.informed.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    // For each function, do a diff to find the user_ids which have been removed \n    // from selectedTask (i.e. those we need to delete)\n\n    userIdsForUserTasksToDelete.responsible = selectedTaskUserIds.responsible.filter(n => !taskToEditUserIds.responsible.includes(n))\n    userIdsForUserTasksToDelete.accountable = selectedTaskUserIds.accountable.filter(n => !taskToEditUserIds.accountable.includes(n))\n    userIdsForUserTasksToDelete.consulted = selectedTaskUserIds.consulted.filter(n => !taskToEditUserIds.consulted.includes(n))\n    userIdsForUserTasksToDelete.informed = selectedTaskUserIds.informed.filter(n => !taskToEditUserIds.informed.includes(n))\n\n    // For each function, do a diff to find the user_ids which have been added \n    // to selectedTask (i.e. those we need to create)\n    \n    userIdsForUserTasksToCreate.responsible = taskToEditUserIds.responsible.filter(n => !selectedTaskUserIds.responsible.includes(n))\n    userIdsForUserTasksToCreate.accountable = taskToEditUserIds.accountable.filter(n => !selectedTaskUserIds.accountable.includes(n))\n    userIdsForUserTasksToCreate.consulted = taskToEditUserIds.consulted.filter(n => !selectedTaskUserIds.consulted.includes(n))\n    userIdsForUserTasksToCreate.informed = taskToEditUserIds.informed.filter(n => !selectedTaskUserIds.informed.includes(n))\n  \n    // Build array of user task IDs which need to be deleted\n\n    userTaskIdsForUserTasksToDelete.responsible = this.state.selectedTask.responsible.map(user_task => {\n      if (userIdsForUserTasksToDelete.responsible.includes(user_task.user_id)) {\n          return (user_task.user_task_id)\n        }\n      })\n\n    userTaskIdsForUserTasksToDelete.accountable = this.state.selectedTask.accountable.map(user_task => {\n      if (userIdsForUserTasksToDelete.accountable.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.consulted = this.state.selectedTask.consulted.map(user_task => {\n      if (userIdsForUserTasksToDelete.consulted.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.informed = this.state.selectedTask.informed.map(user_task => {\n      if (userIdsForUserTasksToDelete.informed.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    const getKeys = Object.values(userTaskIdsForUserTasksToDelete)\n    const deleteThesePuppies = [].concat.apply([], getKeys)\n    const deleteThesePuppiesFiltered = deleteThesePuppies.filter((itemInArray) => {\n      return itemInArray !== undefined\n    })\n\n    // Build user tasks to be created\n\n    const taskId = task.id\n    const userTasksToCreate = []\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n            {\n              task_id: taskId,\n              function_id: 1,\n              user_id: userId\n            }\n        )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n\n    // Delete user tasks\n\n    deleteThesePuppiesFiltered.forEach((userTaskId) => {\n        API.UserTask.destroy(userTaskId)\n          .then(this.putProjectDataInState)\n    })\n\n    // Send user tasks to the server for creation!\n\n      userTasksToCreate.forEach((userTask) => {\n          API.UserTask.create(userTask)\n          .then(this.putProjectDataInState)\n      })  \n\n      // Update the task text\n\n\n  }\n\n  putSelectedTaskDataInState = (id) => {\n    let taskToPutInState = null\n\n    const taskToEditUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    this.state.tasks.forEach(task => {\n      if(task.id === id) {\n        // Get the task / user task data to put into state\n\n        taskToPutInState = task\n\n        // Get an array of IDs for the user tasks, organized by function\n\n        taskToEditUserIds.responsible = task.responsible.map(user_task => user_task.user_id)\n        taskToEditUserIds.accountable = task.accountable.map(user_task => user_task.user_id)\n        taskToEditUserIds.consulted = task.consulted.map(user_task => user_task.user_id)\n        taskToEditUserIds.informed = task.informed.map(user_task => user_task.user_id)\n      }  \n    })\n\n    this.setState({\n      selectedTask: taskToPutInState,\n      taskToEditUserIds: taskToEditUserIds\n    })\n  }\n\n  handleDelete = (task) => {\n    API.Task.destroy(task.id)\n    .then(this.putProjectDataInState)\n\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({newMembersToAdd: data.value})\n  }\n\n  handleFlagging = (task) => {\n    let flagToDeleteId = null\n    const flagUserIds = task.flags.map(flag => flag.user_id)\n\n    if (flagUserIds.includes(this.props.userId)) {\n      task.flags.forEach(flag => {\n        if(flag.user_id === this.props.userId) {\n          API.Flag.destroy(flag.flag_id)\n          .then(this.putProjectDataInState)\n        }\n      })\n    }\n    else {\n      API.Flag.create(this.props.userId, task.id)\n        .then(this.putProjectDataInState)\n    }\n  }\n\n  createNewMembers = () => {\n    this.state.newMembersToAdd.forEach((memberId) => {\n\n      API.Membership.create(memberId, this.state.projectId)  \n        .then(this.putProjectDataInState)\n        // .catch((data) => {\n        //   console.log(data)\n        // })\n    })\n    this.setState({ \n      showAddUsers: false,\n      newMembersToAdd: [] })\n  }\n\n  deleteUserTask = (user_task) => {\n    API.UserTask.destroy(user_task.user_task_id)\n      .then(this.putProjectDataInState)\n      // .then(() => {\n      //   this.setState({ hideTopMessage: false, topMessage: { header: `successfully deleted ${user_task.full_name} from task`, message: 'woooh!'}})\n      //   setTimeout(() => this.setState({ hideTopMessage: true, topMessage: { header: ``, message: '' } }), 1000)\n      // })\n  }\n\n  deleteProject = (projectId) => {\n    API.Project.destroy(projectId)\n    .then(this.redirectToProjectsIndexPage)\n  }\n\n  mapAllUsersToDropdown = () => {\n    return this.state.allUsers\n    .filter(user => (!this.state.members.map(member => member.id).includes(parseInt(user.id))))\n    .map(user => ({ \n      key: user.id, \n      text: user.attributes.full_name, \n      value: user.id }))\n  }\n\n  redirectToProjectsIndexPage = () => {\n    this.props.history.push(`/projects`)\n  }\n\n\n  componentDidMount() {\n      if (localStorage.token) {\n        this.props.authenticateMe()\n        this.putProjectDataInState()\n        this.putAllUsersDataInState()\n      } else {\n        this.props.history.push('/login')\n      }\n  }\n\n    render() {\n      return(\n        <Container>\n          <Message positive hidden={this.state.hideTopMessage}>\n            <Message.Header>{this.state.topMessage.header}</Message.Header>\n            <p>\n              {this.state.topMessage.message}\n            </p>\n          </Message>\n          <Nav logOut={this.props.logOut} onBack={this.redirectToProjectsIndexPage} backText={'Back to Projects'} userFullName={this.props.userFullName}/>\n          <Header as=\"h1\">{this.state.projectName}</Header>\n          <Grid>\n          { this.state.showAddUsers ?\n            (\n              <Grid.Column width={8}>\n                  <div>\n                    <Dropdown placeholder='Add Users' onChange={this.handleNewMemberSelection} fluid multiple selection options={this.mapAllUsersToDropdown()} />\n                    <Button\n                      onClick={this.createNewMembers}\n                    >Add users</Button>\n                  </div>\n              </Grid.Column>\n            ) :(\n              <Grid.Column width={8}>\n                <Label.Group circular>\n                  {this.state.members.map((member, index) => <Label key={index}>{member.initials}</Label>)}\n                  <Label color=\"blue\" onClick={() => this.setState({ showAddUsers: true })} as='a'>+</Label>\n                </Label.Group>\n              </Grid.Column>\n            )\n          }\n          </Grid>\n          \n       \n          <Table celled> \n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width='four'>Task</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Responsible</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Accountable</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Consulted</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Informed</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.tasks.map((task, index) => {\n              return (<Table.Row \n                error={task.flags.length > 0}\n                key={index}>\n                <Table.Cell>\n                  {task.task_name}\n                  <Label.Group circular>\n                    {task.flags.map((flag, index) => <Label key={index} color=\"red\">{flag.user_initials}</Label>)}\n                  </Label.Group>\n                <EditTaskModal\n                  task={task}\n                  projectId={this.state.projectId}\n                  createDropdowns={() => this.createDropdownsForEditModal(task)}\n                  putSelectedTaskDataInState={this.putSelectedTaskDataInState}\n                  taskName={this.state.selectedTask.task_name}\n                  handleTextFieldChange={this.handleTextFieldChange}\n                  handleDropdownChange={this.handleDropdownChangeForEditModal}\n                  handleSubmit={this.handleSubmitOnEditTaskModal} \n                  handleDelete={this.handleDelete}  \n                  />\n                <Button \n                  icon \n                  onClick={() => {this.handleFlagging(task)}}\n                  inverted={!(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? true : false)}\n                  floated=\"right\">\n                  <Icon \n                  color=\"grey\"\n                  name=\"flag outline\"></Icon>\n                </Button>\n                </Table.Cell>\n                <Table.Cell>{\n                  task.responsible.map((user_task, i) => {\n                    return (<Label key={i}>\n                      {user_task.user_full_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  } )}\n                </Table.Cell>\n                <Table.Cell>{\n                    task.accountable.map((user_task, i) => {\n                      return (<Label key={i}>\n                        {user_task.user_full_name}\n                        <Icon\n                          onClick={() => this.deleteUserTask(user_task)}\n                          name='delete' />\n                      </Label>)\n                  } )}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.consulted.map((user_task, i) => {\n                    return (<Label key={i}>\n                      {user_task.user_full_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.informed.map((user_task, i) => {\n                    return (<Label key={i}>\n                      {user_task.user_full_name}\n                      <Icon \n                        onClick={() => this.deleteUserTask(user_task)} \n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n              </Table.Row>)\n            })}  \n            </Table.Body>\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <TaskModal\n                    projectId={this.state.projectId}\n                    raciFunctions={this.state.functions}\n                    createDropdowns={this.createDropdownsForCreateModal}\n                    taskName={this.state.selectedTask.task_name}\n                    handleTextFieldChange={this.handleTextFieldChange}\n                    handleDropdownChange={this.handleDropdownChangeForCreateModal}\n                    onTriggerButtonClick={() => {\n                      this.setState({\n                        selectedTask: {\n                          taskId: null,\n                          task_name: null,\n                          responsible: [],\n                          accountable: [],\n                          consulted: [],\n                          informed: []\n                        }\n                      })\n                    }}\n                    handleSubmit={this.handleSubmitOnTaskModal} />\n                </Table.HeaderCell>\n                <Table.HeaderCell colSpan='4'>\n                  <DeleteProjectWarningModal\n                    projectName={this.state.projectName}\n                    projectId={this.state.projectId}\n                    deleteProject={this.deleteProject}\n                  />\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Container>\n      )\n    }\n\n}\n\n\n// const TestComponent = (props) => {\n//   props.fab\n//   return (\n//     <select onChange={(event, data) => props.onChange(event, data, 2)}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//       {/* <option value={2}>hi</option>\n//       <option value={3}>yo</option> */}\n//     </select>\n//   )\n// }\n\n// <TestComponent onChange={(hi, fab, gu) => {alert(gu)}} fab='poop' options={[{text: 'hi', value: 2}, {text: 'yo', value: 3}]}/>\n\n\n{/* <select id=\"poop\"></select>\n\ndocument.querySelector(\"#poop\").addEventListener(\"change\", (event,poop, gu,sup, pickles) => {\n\n})\n\nmyFunciton(event) */}\n\n\n\n// const DropDown = (props) => {\n//   const handleOnChange = (e, data) => {\n//     props.onDropChange(`hello! ${data.value}`)\n//   }\n//   return (\n//     <select onChange={handleOnChange}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//     </select>\n//   )\n// }\n\n\n// <DropDown onDropChange={(alertMessage) => alert(alertMessage)} options={[{ text: 'hi', value: 2 }, { text: 'yo', value: 3 }]} />\n\n\n// Everytime you change the Dropdown, \n// there should be an alert which alerts \n// the third argument of your custom callback for onChange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Input, Button, Form, Card, Container, Grid } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { API_HOST } from '../api/helper';\nimport API from '../api'\n\nexport default class Login extends React.Component {\n  \n  constructor() {\n    super()\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n \n  handleSubmit = (e) => {\n    e.preventDefault()\n    API.User.login(this.state)\n    .then(data => {\n      if(data.token) {\n      localStorage.token = data.token\n      this.props.history.push('/projects')\n      } \n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n\n  render(){\n    return(\n      <Container style={{height: '100vh', marginTop: '10%'}}textAlign=\"center\">\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Login</h2>\n          <Form>\n            <Input\n              placeholder='Email'\n              type='text'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange} />\n            <br />\n            <Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange} />\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              type='submit'>\n              Log in\n            </Button>\n          </Form>\n          <br />\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </Card>\n      </Container>\n    )\n  }\n}","// do componentDidMount wiht same fetch request etc as login but post to signup not login\n\nimport React from 'react'\nimport { Input, Button, Form, Container, Card } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport { API_HOST } from '../api/helper';\nimport API from '../api'\n\nexport default class SignUp extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    API.User.signup(this.state)\n    .then(data => {\n      if(data.token) {\n        localStorage.token = data.token\n\n        this.props.history.push('/projects')\n      }\n    })\n  }\n\n  render () {\n    return (\n      <Container style={{height: '100vh', marginTop: '10%'}} textAlign=\"center\">\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Sign up</h2>\n          <Form>\n            <Input\n              placeholder='First name'\n              type='text'\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Input\n              placeholder='Last name'\n              type='text'\n              name='last_name'\n              value={this.state.last_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Input\n              placeholder='Email'\n              type='text'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              type='submit'>\n              Create account\n            </Button>\n          </Form>\n          <br />\n          Already have an account?  <Link to=\"/login\">Login</Link>\n        </Card>\n      </Container>)\n  }\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={props.trigger}\n    >\n      <Modal.Header>Create Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project Name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Please enter your first name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n                placeholder='Describe the project'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Add Team Members</label>\n              <Dropdown \n              placeholder='Add team members' \n              onChange={props.onDropdownChange} \n              fluid \n              multiple \n              selection \n              options={props.dropdownOptions} />\n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          onClick={\n            () => {\n              setOpen(false)\n              props.onCancel()\n            }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Create Project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { Card, Button, Header, Icon, Container, Menu } from 'semantic-ui-react';\nimport CreateProjectModal from './CreateProjectModal';\nimport Nav from './Nav'\nimport API from '../api';\n\nexport default class ProjectsList extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      projects: [],\n      allUsers: [],\n      projectName: '',\n      newMembersToAdd: [],\n      newProjectNameHasError: false,\n    }\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({ allUsers: data.data }))\n  }\n\n  putProjectsDataInState = () => {\n    API.Project.index()\n    .then(data => {\n      this.setState({\n        projects: data.data\n      })}\n    )\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({ newMembersToAdd: data.value })\n  }\n\n  handleProjectNameChange = (event) => {\n\n    const projectName = event.target.value;\n    if (projectName.length < 2) {\n      this.setState({newProjectNameHasError: true})\n    } else {\n      this.setState({ newProjectNameHasError: false })\n    }\n    this.setState({ projectName: projectName})\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({ \n      key: user.id, \n      text: user.attributes.full_name, \n      value: user.id }))\n  }\n\n  clearProjectNameField = () => {\n    this.setState({projectName: \"\"})\n  }\n\n  createNewMembers = (projectId) => {\n    this.state.newMembersToAdd.forEach((memberId, index) => {\n      API.Membership.create(memberId, projectId)\n    })\n  }\n\n  createNewProject = () => {\n    API.Project.create({name: this.state.projectName, creator_id: this.props.userId})\n      .then(data => {\n        const projectId = data.data.id\n        this.createNewMembers(projectId)\n      })\n      .then(this.putProjectsDataInState)\n  }\n\n  createProjectCards = () => {\n    return this.state.projects.map((project, index) => {\n\n      return (\n        <Card\n          key={index}\n          header={project.attributes.name}\n          description={'Cool project'}\n          meta={'24/04/1987'}\n          onClick={() => {\n            const projectId = project.id\n            this.redirectToProjectPage(projectId)}\n           }>\n        </Card>\n      )\n    })\n  }\n\n  redirectToProjectPage = (projectId) => {\n    this.props.history.push(`/projects/${projectId}`)\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.authenticateMe()\n      this.putProjectsDataInState()\n      this.putAllUsersDataInState()\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n  \n \n  createCardGroup = () => {\n    return(\n      <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n      {this.createProjectCards()}\n        <CreateProjectModal\n          projectNameHasError={this.state.newProjectNameHasError}\n          trigger={<Card color=\"blue\" header={<span><Icon name=\"plus\" color=\"blue\" /><Header color=\"blue\">Add project</Header></span>}/>}\n          onDropdownChange={this.handleNewMemberSelection}\n          dropdownOptions={this.mapAllUsersToDropdownOptions()}\n          onProjectNameChange={this.handleProjectNameChange}\n          projectName={this.state.projectName}\n          onSubmit={this.createNewProject}\n          onCancel={this.clearProjectNameField}\n        />\n      </Card.Group>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav logOut={this.props.logOut} userFullName={this.props.userFullName}/>\n        {this.createCardGroup()}\n      </Container>\n    )\n  }\n}","import './App.css';\nimport React from 'react';\nimport RACITable from './components/RACITable';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport ProjectsList from './components/ProjectsList';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport API from './api'\n\nclass App extends React.Component {\n\n  state = {\n    user_id: null,\n    full_name: null\n\n  }\n\n  authenticateMe = () => {\n    API.User.profile()\n      .then(data => {\n        this.setState({ \n          user_id: parseInt(data.data.id), \n          full_name: data.data.attributes.full_name\n        })})\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n  \n  componentDidMount() {\n    if (localStorage.token) {\n      this.authenticateMe()\n    } else {\n      if (this.props.location.pathname !== '/signup') {\n        this.props.history.push('/login')\n      }\n    }\n\n  }\n\n  render () {\n    return (\n      <div>\n        <Switch>\n          <Route \n            path=\"/login\" \n            render={routerProps => <Login {...routerProps} user_id={this.state.user_id}/> } />\n          <Route \n            path=\"/signup\" \n            render={routerProps => <SignUp {...routerProps}/>} />\n          <Route \n            path=\"/projects/:id\" \n            render={routerProps => <RACITable {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut}/>} />\n          <Route \n            path=\"/projects\" \n            render={routerProps => <ProjectsList {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut} />} />\n          <Route \n            path=\"/\"\n            render={routerProps => <ProjectsList {...routerProps} authenticateMe={this.authenticateMe} userId={this.state.user_id} userFullName={this.state.full_name} logOut={this.logOut} />} />\n        </Switch>\n      </div>\n    )\n\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}