{"version":3,"sources":["components/TaskModal.js","components/EditTaskModal.js","components/DeleteProjectWarningModal.js","components/EditProjectModal.js","components/Nav.js","api/helper.js","api/Project.js","api/UserTask.js","api/Flag.js","api/Function.js","api/User.js","api/Task.js","api/Membership.js","api/index.js","components/RACITable.js","components/Login.js","components/SignUp.js","components/CreateProjectModal.js","components/ProjectsList.js","components/Arrow.js","components/PhotoSlideshow.js","components/LandingPage.js","App.js","reportWebVitals.js","index.js"],"names":["TaskModal","props","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","floated","icon","labelPosition","primary","onClick","onTriggerButtonClick","size","Icon","name","Header","Content","Description","Form","Field","placeholder","value","taskName","onChange","handleTextFieldChange","createDropdowns","Actions","type","event","data","text","handleSubmit","positive","EditTaskModal","putSelectedTaskDataInState","task","id","color","handleDelete","basic","Grid","Column","width","projectName","inverted","deleteProject","projectId","EditProjectModal","style","marginLeft","backgroundColor","populateMembersToEdit","Input","error","projectNameHasError","content","pointing","onProjectNameChange","createDropdown","deleteProjectWarningModal","onSubmit","Menu","borderless","attached","border","position","Item","userFullName","onBack","backText","logOut","API_HOST","AUTH_HEADERS","headers","localStorage","token","index","fetch","then","res","json","show","a","ok","Promise","reject","create","body","method","JSON","stringify","destroy","update","projectStartDate","userTask","userTaskId","userId","taskId","user_id","task_id","flagId","login","email","password","signup","first_name","last_name","profile","available_projects","project_id","memberId","membershipId","Project","UserTask","Flag","Function","User","Task","Membership","RACITable","putProjectDataInState","toggleLoader","match","params","API","setState","functions","attributes","projectNameForUpdating","tasks","creator","members","catch","history","push","putAllUsersDataInState","allUsers","createTeamMemberOptions","state","map","member","key","mapAllUsersToDropdown","user","parseInt","full_name","createDropdownForEditProjectModal","defaultValues","Dropdown","fluid","multiple","selection","options","defaultValue","handleDropdownChangeForEditProjectModal","createDropdownsForEditTaskModal","raciFunction","functionName","toLowerCase","includes","handleDropdownChangeForEditTaskModal","createDropdownsForCreateTaskModal","handleDropdownChangeForCreateModal","mapAllUsersToDropdownOptions","raciFunctionId","taskToCreateUserIds","responsible","accountable","consulted","informed","taskToEditUserIds","projectToEditMembers","taskNameForUpdating","target","createUserTasks","dataFromTaskCreation","userTasksToCreate","userIdsForUserTasksToCreate","forEach","function_id","handleSubmitOnTaskModal","preventDefault","handleSubmitOnEditTaskModal","userIdsForUserTasksToDelete","selectedTaskUserIds","userTaskIdsForUserTasksToDelete","selectedTask","user_task","filter","n","user_task_id","getKeys","Object","values","deleteThesePuppiesFiltered","concat","apply","itemInArray","undefined","apiPromises","allSettled","handleSubmitOnEditProjectModal","existingMemberIds","projectToEditUserIds","membersToDeleteIds","membersToCreateIds","membershipIdsForMembershipsToDelete","membership_id","putSelectedProjectMembersDataInState","membersToShoveInState","taskToPutInState","task_name","handleNewMemberSelection","newMembersToAdd","handleFlagging","flags","flag","flag_id","createNewMembers","topMessage","header","message","errors","hideTopMessage","setTimeout","showAddUsers","deleteUserTask","redirectToProjectsIndexPage","handleProjectNameChange","taskText","this","authenticateMe","Container","Message","hidden","Nav","as","handleDropdownChange","Label","Group","circular","Popup","padding","initials","Table","celled","Row","HeaderCell","Body","length","Cell","user_full_name","user_initials","i","marginTop","marginBottom","user_first_name","Footer","fullWidth","raciFunctions","colSpan","Component","Login","isValidEmailAddress","address","loginInfoIsFull","loginInfo","e","handleChange","prevState","height","textAlign","margin","lineHeight","fontSize","borderRadius","Card","centered","paddingTop","paddingBottom","paddingLeft","paddingRight","to","SignUp","signupInfoIsFull","signupInfo","onDropdownChange","dropdownOptions","onCancel","ProjectsList","putProjectsDataInState","projects","clearProjectNameField","createNewProject","creator_id","createProjectCards","project","redirectToProjectPage","createCardGroup","itemsPerRow","CreateProjectModal","newProjectNameHasError","Arrow","direction","slideshowArrow","className","onTouchStart","PhotoSlideshow","dataAos","dataAosDuration","photos","arrowColor","currentPhotoIndex","setCurrentPhotoIndex","altText","split","changePhoto","photosLastIndex","data-aos","data-aos-duration","alt","src","appScreenshots","createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","raciDefinitions","description","HomepageHeading","fontWeight","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","children","greaterThan","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","minHeight","vertical","secondary","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","at","animation","onHide","visible","active","Pusher","dimmed","ResponsiveContainer","LandingPage","container","stackable","verticalAlign","items","flexWrap","maxWidth","divided","List","link","href","App","loaderIsActive","clear","trueOrFalse","location","pathname","Dimmer","Loader","path","render","routerProps","withRouter","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"izCA6DeA,MA1Df,SAAmBC,GAAQ,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAGxB,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QACE,eAACC,EAAA,EAAD,CACEC,QAAQ,OACRC,MAAI,EACJC,cAAgB,OAChBC,SAAO,EACPC,QAASd,EAAMe,qBACfC,KAAK,QANP,UAOI,cAACC,EAAA,EAAD,CAAMC,KAAK,gBAPf,eALJ,UAgBE,cAACb,EAAA,EAAMc,OAAP,8BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,yCACA,uBACEC,YAAY,0BACZC,MAAOzB,EAAM0B,SACbC,SAAU3B,EAAM4B,2BAGnB5B,EAAM6B,yBAIb,eAACxB,EAAA,EAAMyB,QAAP,WACE,cAACrB,EAAA,EAAD,CAEAK,QAAS,kBAAMV,GAAQ,IAFvB,oBAKA,cAACK,EAAA,EAAD,CACIsB,KAAK,SACLpB,KAAK,YACLG,QAAS,SAACkB,EAAOC,GACf,IAAMC,EAAOD,EAAKP,SAClBtB,GAAQ,GACRJ,EAAMmC,aAAaH,EAAOE,IAE5BE,UAAQ,EARZ,gCC+BOC,MAzEf,SAAuBrC,GAAQ,IAAD,EACJE,oBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,KAQ5B,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QACE,cAACC,EAAA,EAAD,CACEE,MAAI,EACJG,QAZyB,WAC/Bd,EAAMsC,2BAA2BtC,EAAMuC,KAAKC,KAYtC9B,QAAQ,QAHV,SAIE,cAACO,EAAA,EAAD,CAAMC,KAAK,oBATjB,UAaA,cAACb,EAAA,EAAMc,OAAP,wBACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UACE,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,WACE,yCACA,uBACEC,YAAY,0BACZC,MAAOzB,EAAM0B,SACbC,SAAU3B,EAAM4B,2BAGnB5B,EAAM6B,gBAAgB7B,EAAMuC,aAInC,eAAClC,EAAA,EAAMyB,QAAP,WACE,eAACrB,EAAA,EAAD,CACEE,MAAI,EACJC,cAAc,QACd6B,MAAM,MACN/B,QAAQ,OACRI,QAAS,WACP,IAAMyB,EAAOvC,EAAMuC,KACnBnC,GAAQ,GACRJ,EAAM0C,aAAaH,IARvB,wBAYA,cAACtB,EAAA,EAAD,CAAMC,KAAK,+BAEX,cAACT,EAAA,EAAD,CACEK,QAAS,kBAAMV,GAAQ,IADzB,oBAIA,cAACK,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,EAAOC,GACf,IAAMM,EAAOvC,EAAMuC,KACnBnC,GAAQ,GACRJ,EAAMmC,aAAaH,EAAOO,IAE5BH,UAAQ,EAPV,gCCzDO,WAACpC,GAAW,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAGxB,OACE,eAACC,EAAA,EAAD,CACEsC,OAAK,EACLrC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNa,KAAK,QACLR,QAAS,eAACC,EAAA,EAAD,CACTgC,MAAM,MACN/B,QAAQ,OAFC,UAGT,cAACO,EAAA,EAAD,CAAMC,KAAK,4BAHF,oBANX,UAYE,eAACC,EAAA,EAAD,CAAQR,MAAI,EAAZ,UACE,cAACM,EAAA,EAAD,CAAMC,KAAK,4BACX,uBAFF,mDAKA,cAACb,EAAA,EAAMe,QAAP,UACA,eAACwB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,IACpB,cAACF,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,8CACc9C,EAAM+C,YADpB,0CAIE,cAACH,EAAA,EAAKC,OAAN,CAAaC,MAAO,SAIxB,eAACzC,EAAA,EAAMyB,QAAP,WACE,eAACrB,EAAA,EAAD,CAAQkC,OAAK,EAACF,MAAM,OAAOO,UAAQ,EAAClC,QAAS,kBAAMV,GAAQ,IAA3D,UACE,cAACa,EAAA,EAAD,CAAMC,KAAK,WADb,kBAGA,eAACT,EAAA,EAAD,CAAQgC,MAAM,MAAMO,UAAQ,EAC5BlC,QAAS,WACRd,EAAMiD,cAAcjD,EAAMkD,WAC3B9C,GAAQ,IAHR,UAIE,cAACa,EAAA,EAAD,CAAMC,KAAK,cAJb,yBCwCOiC,EA3EU,SAACnD,GAAW,IAAD,EACVC,IAAMC,UAAS,GADL,mBAC3BC,EAD2B,KACrBC,EADqB,KAQlC,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,WAAOH,GAAQ,IACvBD,KAAMA,EACNK,QAAS,+BAAM,cAACC,EAAA,EAAD,CACb2C,MAAO,CAAEC,WAAY,QAASC,gBAAiB,SAC/C3C,MAAI,EACJ8B,MAAM,QACNzB,KAAK,MACLF,QAf2B,WAE/Bd,EAAMuD,yBAQW,SAOX,cAACtC,EAAA,EAAD,CACEC,KAAK,sBAZb,UAeE,cAACb,EAAA,EAAMc,OAAP,2BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UAIE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,iDACA,cAACD,EAAA,EAAKkC,MAAN,CACEC,MAAOzD,EAAM0D,oBAAsB,CAAEC,QAAS,2BAA4BC,SAAU,SAAY,KAChGjC,SAAU3B,EAAM6D,oBAChBpC,MAAOzB,EAAM+C,iBAGjB,eAACzB,EAAA,EAAKC,MAAN,WACE,iDACGvB,EAAM8D,yBAKjB,eAACzD,EAAA,EAAMyB,QAAP,WACGiC,EACC,CACEhB,YAAa/C,EAAM+C,YACnBG,UAAWlD,EAAMkD,UACjBD,cAAejD,EAAMiD,gBAGzB,cAACxC,EAAA,EAAD,CACEK,QAAS,WACPV,GAAQ,IAFZ,oBAOA,cAACK,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,GACR5B,GAAQ,GACRJ,EAAMgE,SAAShC,IAEjBI,UAAQ,EANV,mC,SC/DO,WAACpC,GAAD,OACb,cAACiE,EAAA,EAAD,CAAMC,YAAU,EAACC,SAAS,MAAMf,MAAO,CAAEgB,OAAQ,QAAjD,SACE,eAACH,EAAA,EAAKA,KAAN,CAAWI,SAAS,QAApB,UACE,cAACJ,EAAA,EAAKK,KAAN,UACCtE,EAAMuE,aAAN,uBAAqCvE,EAAMuE,cAAiB,KAE5DvE,EAAMwE,QACP,cAACP,EAAA,EAAKK,KAAN,UACE,cAAC7D,EAAA,EAAD,CACEK,QAASd,EAAMwE,OACf9D,QAAQ,QAFV,SAGEV,EAAMyE,aAEV,cAACR,EAAA,EAAKK,KAAN,UACE,cAAC7D,EAAA,EAAD,CACEK,QAASd,EAAM0E,OADjB,6B,yBChBKC,EAAQ,wDASRC,EAAe,CAC1BC,QAAQ,2BAPC,CACP,OAAU,mBACV,eAAgB,qBAKX,IAEL,cAAgB,UAAhB,OAA2BC,aAAaC,UCX/BC,EAAQ,WAGnB,OAFqBC,MAAM,GAAD,OAAIN,EAAJ,aAAyBC,GACXM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAI7CC,EAAO,SAACnC,GACnB,OAAO+B,MAAM,GAAD,OAAIN,EAAJ,qBAAyBzB,GAAa0B,GAC/CM,KADI,uCACC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CADD,wDAWIyD,EAAS,SAACC,GACrB,OAAOV,MAAM,GAAD,OAAIN,EAAJ,yBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAUH,MACpBT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGRW,EAAU,SAAC7C,GACtB,OAAO+B,MAAM,GAAD,OAAIN,EAAJ,qBAAyBzB,GAAzB,aACV0C,OAAQ,UACLhB,KAIMoB,EAAS,SAAC9C,EAAWH,EAAakD,GAC7C,OAAOhB,MAAM,GAAD,OAAIN,EAAJ,qBAAyBzB,GAAzB,aACV0C,OAAQ,MACRD,KAAME,KAAKC,UAAU,CACnB5E,KAAM6B,KAGL6B,IACFM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCzCRM,EAAS,SAACQ,GACrB,OAAOjB,MAAM,GAAD,OAAIN,EAAJ,2BAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAUI,MAEtBhB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGNW,EAAU,SAACI,GACtB,OAAOlB,MAAM,GAAD,OAAIN,EAAJ,uBAA2BwB,GAA3B,aACVP,OAAQ,UACLhB,KCXMc,EAAS,SAACU,EAAQC,GAQ7B,OAAOpB,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CAACQ,QAASF,EAAQG,QAASF,QAIvCN,EAAU,SAACS,GACtB,OAAOvB,MAAM,GAAD,OAAIN,EAAJ,kBAAsB6B,GAAtB,YAAC,eACR5B,GADO,IAEVgB,OAAQ,aCnBCZ,GAAQ,WACnB,OAAOC,MAAM,GAAD,OAAIN,EAAJ,cAA0BC,GACrCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCFNJ,GAAQ,WACnB,OAAOC,MAAM,GAAD,OAAIN,EAAJ,WAAuBC,GAChCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGRqB,GAAQ,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OAAO1B,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBY,MAAOA,EACPC,SAAUA,OAGXzB,KARI,uCAQC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CARD,wDAkBI2E,GAAS,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,UAAWJ,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACpD,OAAO1B,MAAM,GAAD,OAAIN,EAAJ,uBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBe,WAAYA,EACZC,UAAWA,EACXJ,MAAOA,EACPC,SAAUA,OAGXzB,KAVI,uCAUC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CAVD,wDAoBI8E,GAAU,WACrB,OAAO9B,MAAM,GAAD,OAAIN,EAAJ,YAAwBC,GACnCM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGN4B,GAAqB,WAChC,OAAO/B,MAAK,UAAKN,EAAL,uBAAoCC,GAC/CM,KADM,uCACD,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CADC,wDCnDIyD,GAAS,SAACxD,EAAMgB,GAC3B,OAAO+B,MAAM,GAAD,OAAIN,EAAJ,sBAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnB5D,KAAMA,EACN+E,WAAY/D,OAGfgC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAGNY,GAAS,SAACK,EAAQ3E,EAAUwB,GACvC,OAAO+B,MAAM,GAAD,OAAIN,EAAJ,kBAAsB0B,GAAtB,YAAC,eACRzB,GADO,IAEVgB,OAAQ,MACRD,KAAME,KAAKC,UAAU,CACrB5D,KAAMR,EACNwB,UAAWA,QAKF6C,GAAU,SAACM,GACtB,OAAOpB,MAAM,GAAD,OAAIN,EAAJ,kBAAsB0B,GAAtB,YAAC,eACRzB,GADO,IAEVgB,OAAQ,aC1BCF,GAAS,SAACwB,EAAUhE,GAC/B,OAAO+B,MAAM,GAAD,OAAIN,EAAJ,4BAAC,eACRC,GADO,IAEVgB,OAAQ,OACRD,KAAME,KAAKC,UAAU,CACnBQ,QAASY,EACTD,WAAY/D,OAGfgC,KARM,uCAQD,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CARC,wDAkBI8D,GAAU,SAACoB,GACtB,OAAOlC,MAAM,GAAD,OAAIN,EAAJ,wBAA4BwC,GAA5B,YAAC,eACRvC,GADO,IAEVgB,OAAQ,YAEPV,KAJI,uCAIC,WAAOC,GAAP,eAAAG,EAAA,sEACeH,EAAIC,OADnB,UACEnD,EADF,QAEAkD,EAAII,GAFJ,yCAGKtD,GAHL,gCAKKuD,QAAQC,OAAOxD,IALpB,2CAJD,wDCZM,IAACmF,UAASC,WAAUC,OAAMC,WAAUC,OAAMC,OAAMC,cCA1CC,G,kDACnB,aAAe,IAAD,8BACZ,gBA2CFC,sBAAwB,WACtB,EAAK5H,MAAM6H,cAAa,GAExB,IAAM3E,EAAY,EAAKlD,MAAM8H,MAAMC,OAAOvF,GAE1CwF,GAAIT,SAASvC,QACVE,MAAK,SAAAjD,GAAI,OAAI,EAAKgG,SAAS,CAC1BC,UAAWjG,EAAKA,UAGpB+F,GAAIZ,QAAQ/B,KAAKnC,GACdgC,MAAK,SAAAjD,GAAS,EAAKgG,SAAS,CAC3B/E,UAAWjB,EAAKA,KAAKO,GACrBO,YAAad,EAAKA,KAAKkG,WAAWjH,KAClCkH,uBAAwBnG,EAAKA,KAAKkG,WAAWjH,KAC7CmH,MAAOpG,EAAKA,KAAKkG,WAAWE,MAC5BC,QAASrG,EAAKA,KAAKkG,WAAWG,QAC9BC,QAAStG,EAAKA,KAAKkG,WAAWI,UAE9B,EAAKvI,MAAM6H,cAAa,MAEzBW,OAAM,kBAAM,EAAKxI,MAAMyI,QAAQC,KAAK,iBAjE3B,EAoEdC,uBAAyB,WACvBX,GAAIR,KAAKxC,QACRE,MAAK,SAAAjD,GAAI,OAAI,EAAKgG,SAAS,CAACW,SAAU3G,EAAKA,WAtEhC,EAyEd4G,wBAA0B,WACxB,OAAO,EAAKC,MAAMP,QAAQQ,KAAI,SAAAC,GAAM,MAAK,CACnCC,IAAKD,EAAOxG,GACZN,KAAM8G,EAAOnC,WACbpF,MAAOuH,EAAOxG,QA7ER,EAiFd0G,sBAAwB,WACtB,OAAO,EAAKJ,MAAMF,SAEfG,KAAI,SAAAI,GAAI,MAAK,CACZF,IAAKG,SAASD,EAAK3G,IACnBN,KAAMiH,EAAKhB,WAAWkB,UACtB5H,MAAO2H,SAASD,EAAK3G,SAvFb,EA2Fd8G,kCAAoC,WAClC,IAAMC,EAAgB,EAAKT,MAAMP,QAAU,EAAKO,MAAMP,QAAQQ,KAAI,SAACC,GAAD,OAAYA,EAAOxG,MAAM,GAE3F,OACE,cAACgH,EAAA,EAAD,CACEhI,YAAY,mBACZiI,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAAS,EAAKV,wBACdW,aAAcN,EACd5H,SAAU,SAACK,EAAOC,GAAW,EAAK6H,wCAAwC7H,OAtGlE,EA4Gd8H,gCAAkC,SAACxH,GAEjC,OACE,EAAKuG,MAAMZ,UAAUa,KAAI,SAACiB,EAAchF,GACtC,IAAMiF,EAAeD,EAAa7B,WAAWjH,KAAKgJ,cAC5CX,EAAgBhH,EAAOA,EAAK0H,GAAclB,KAAI,SAAA7C,GAAQ,OAAIA,EAASI,WAAW,GACpF,OACE,eAAChF,EAAA,EAAKC,MAAN,WAEE,gCAAQyI,EAAa7B,WAAWjH,OAChC,cAACsI,EAAA,EAAD,CACEhI,YAAY,qBACZiI,OAAK,EACLC,SAAU,CAAC,EAAE,GAAGS,SAASf,SAASY,EAAaxH,KAC/CqH,aAAc,CAAC,EAAE,GAAGM,SAASf,SAASY,EAAaxH,KAAO+G,EAAgBA,EAAc,GACxFI,WAAS,EACTC,QAAS,EAAKf,0BACdlH,SAAU,SAACK,EAAOC,GAAU,EAAKmI,qCAAqCnI,EAAM+H,QATzEhF,OApHD,EAqIdqF,kCAAoC,SAAC9H,GAEnC,OACE,EAAKuG,MAAMZ,UAAUa,KAAI,SAACiB,EAAchF,GACjBgF,EAAa7B,WAAWjH,KAAKgJ,cAClD,OACE,eAAC5I,EAAA,EAAKC,MAAN,WAEE,gCAAQyI,EAAa7B,WAAWjH,OAChC,cAACsI,EAAA,EAAD,CACEhI,YAAY,qBACZiI,OAAK,EACLC,SAAU,CAAC,EAAG,GAAGS,SAASf,SAASY,EAAaxH,KAChDmH,WAAS,EACTC,QAAS,EAAKf,0BACdlH,SAAU,SAACK,EAAOC,GAAW,EAAKqI,mCAAmCrI,EAAM+H,QARxEhF,OA5ID,EA4JduF,6BAA+B,WAC7B,OAAO,EAAKzB,MAAMF,SAASG,KAAI,SAAAI,GAAI,MAAK,CACtCF,IAAKE,EAAK3G,GACVN,KAAMiH,EAAKhB,WAAWkB,UACtB5H,MAAO0H,EAAK3G,QAhKF,EAoKd8H,mCAAqC,SAACrI,EAAM+H,GAE1C,IAAMQ,EAAiBpB,SAASY,EAAaxH,IAEtB,IAAnBgI,EACF,EAAKvC,SAAS,CACZwC,oBAAoB,2BACf,EAAK3B,MAAM2B,qBADG,IAEjBC,YAAa,CAACzI,EAAKR,WAIG,IAAnB+I,EACP,EAAKvC,SAAS,CACZwC,oBAAoB,2BACf,EAAK3B,MAAM2B,qBADG,IAEjBE,YAAa,CAAC1I,EAAKR,WAIG,IAAnB+I,EACP,EAAKvC,SAAS,CACZwC,oBAAoB,2BACf,EAAK3B,MAAM2B,qBADG,IAEjBG,UAAW3I,EAAKR,UAIM,IAAnB+I,GACP,EAAKvC,SAAS,CACZwC,oBAAoB,2BACf,EAAK3B,MAAM2B,qBADG,IAEjBI,SAAU5I,EAAKR,WApMT,EA0Md2I,qCAAuC,SAACnI,EAAM+H,GAE5C,IAAMQ,EAAiBpB,SAASY,EAAaxH,IAEtB,IAAnBgI,EACF,EAAKvC,SAAS,CACZ6C,kBAAkB,2BACb,EAAKhC,MAAMgC,mBADC,IAEfJ,YAAa,CAACzI,EAAKR,WAIG,IAAnB+I,EACP,EAAKvC,SAAS,CACZ6C,kBAAkB,2BACb,EAAKhC,MAAMgC,mBADC,IAEfH,YAAa,CAAC1I,EAAKR,WAIG,IAAnB+I,EACP,EAAKvC,SAAS,CACZ6C,kBAAkB,2BACb,EAAKhC,MAAMgC,mBADC,IAEfF,UAAW3I,EAAKR,UAIM,IAAnB+I,GACP,EAAKvC,SAAS,CACZ6C,kBAAkB,2BACb,EAAKhC,MAAMgC,mBADC,IAEfD,SAAU5I,EAAKR,WA1OT,EAgPdqI,wCAA0C,SAAC7H,GACvC,EAAKgG,SAAS,CACZ8C,qBAAsB9I,EAAKR,SAlPnB,EAuPdG,sBAAwB,SAAAI,GACtB,EAAKiG,SAAS,CAIZ+C,oBAAqBhJ,EAAMiJ,OAAOxJ,SA5PxB,EAgQdyJ,gBAAkB,SAACC,GAEjB,IAAM9E,EAAS+C,SAAS+B,EAAqBlJ,KAAKO,IAE5C4I,EAAoB,GAEpBC,EAA8B,EAAKvC,MAAM2B,oBAE/CY,EAA4BX,YAAYY,SAAQ,SAAAlF,GAE9CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKfiF,EAA4BV,YAAYW,SAAQ,SAAAlF,GAE9CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKfiF,EAA4BT,UAAUU,SAAQ,SAAAlF,GAE5CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKfiF,EAA4BR,SAASS,SAAQ,SAAAlF,GAE3CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAMfgF,EAAkBE,SAAQ,SAACpF,GACvB8B,GAAIX,SAAS3B,OAAOQ,GACjBhB,KAAK,EAAK0C,0BAGf,EAAKK,SAAS,CACZmD,kBAAmB,MA3TX,EA+TdI,wBAA0B,SAACxJ,GACzBA,EAAMyJ,iBACN,IAAMvI,EAAY,EAAK4F,MAAM5F,UACvBhB,EAAO,EAAK4G,MAAMkC,oBACxBhD,GAAIP,KAAK/B,OAAOxD,EAAMgB,GACnBgC,MAAK,SAAAjD,GAAI,OAAI,EAAKiJ,gBAAgBjJ,OApUzB,EAuUdyJ,4BAA8B,SAAC1J,EAAOO,GACpCP,EAAMyJ,iBAEN,IAAMvI,EAAY,EAAK4F,MAAM5F,UAEvBmI,EAA8B,CAClCX,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNc,EAA8B,CAClCjB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNe,EAAsB,CAC1BlB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGNgB,EAAkC,CACtCnB,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAKNC,EAAoB,EAAKhC,MAAMgC,kBAKrCc,EAAoBlB,YAAc,EAAK5B,MAAMgD,aAAapB,YAAY3B,KAAI,SAAAgD,GACxE,OAAOA,EAAUzF,WAGnBsF,EAAoBjB,YAAc,EAAK7B,MAAMgD,aAAanB,YAAY5B,KAAI,SAAAgD,GACxE,OAAQA,EAAUzF,WAGpBsF,EAAoBhB,UAAY,EAAK9B,MAAMgD,aAAalB,UAAU7B,KAAI,SAAAgD,GACpE,OAAQA,EAAUzF,WAGpBsF,EAAoBf,SAAW,EAAK/B,MAAMgD,aAAajB,SAAS9B,KAAI,SAAAgD,GAClE,OAAQA,EAAUzF,WAMpBqF,EAA4BjB,YAAckB,EAAoBlB,YAAYsB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBJ,YAAYP,SAAS8B,MAC9HN,EAA4BhB,YAAciB,EAAoBjB,YAAYqB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBH,YAAYR,SAAS8B,MAC9HN,EAA4Bf,UAAYgB,EAAoBhB,UAAUoB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBF,UAAUT,SAAS8B,MACxHN,EAA4Bd,SAAWe,EAAoBf,SAASmB,QAAO,SAAAC,GAAC,OAAKnB,EAAkBD,SAASV,SAAS8B,MAKrHZ,EAA4BX,YAAcI,EAAkBJ,YAAYsB,QAAO,SAAAC,GAAC,OAAKL,EAAoBlB,YAAYP,SAAS8B,MAC9HZ,EAA4BV,YAAcG,EAAkBH,YAAYqB,QAAO,SAAAC,GAAC,OAAKL,EAAoBjB,YAAYR,SAAS8B,MAC9HZ,EAA4BT,UAAYE,EAAkBF,UAAUoB,QAAO,SAAAC,GAAC,OAAKL,EAAoBhB,UAAUT,SAAS8B,MACxHZ,EAA4BR,SAAWC,EAAkBD,SAASmB,QAAO,SAAAC,GAAC,OAAKL,EAAoBf,SAASV,SAAS8B,MAIrHJ,EAAgCnB,YAAc,EAAK5B,MAAMgD,aAAapB,YAAY3B,KAAI,SAAAgD,GACpF,GAAIJ,EAA4BjB,YAAYP,SAAS4B,EAAUzF,SAC3D,OAAQyF,EAAUG,gBAIxBL,EAAgClB,YAAc,EAAK7B,MAAMgD,aAAanB,YAAY5B,KAAI,SAAAgD,GACpF,GAAIJ,EAA4BhB,YAAYR,SAAS4B,EAAUzF,SAC7D,OAAQyF,EAAUG,gBAItBL,EAAgCjB,UAAY,EAAK9B,MAAMgD,aAAalB,UAAU7B,KAAI,SAAAgD,GAChF,GAAIJ,EAA4Bf,UAAUT,SAAS4B,EAAUzF,SAC3D,OAAQyF,EAAUG,gBAItBL,EAAgChB,SAAW,EAAK/B,MAAMgD,aAAajB,SAAS9B,KAAI,SAAAgD,GAC9E,GAAIJ,EAA4Bd,SAASV,SAAS4B,EAAUzF,SAC1D,OAAQyF,EAAUG,gBAItB,IAAMC,EAAUC,OAAOC,OAAOR,GAExBS,EADqB,GAAGC,OAAOC,MAAM,GAAIL,GACOH,QAAO,SAACS,GAC5D,YAAuBC,IAAhBD,KAKHpG,EAAS9D,EAAKC,GACd4I,EAAoB,GAE1BC,EAA4BX,YAAYY,SAAQ,SAAAlF,GAE9CgF,EAAkB1C,KACZ,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKnBiF,EAA4BV,YAAYW,SAAQ,SAAAlF,GAE9CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKfiF,EAA4BT,UAAUU,SAAQ,SAAAlF,GAE5CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAKfiF,EAA4BR,SAASS,SAAQ,SAAAlF,GAE3CgF,EAAkB1C,KAChB,CACEnC,QAASF,EACTkF,YAAa,EACbjF,QAASF,OAOf,IAAMuG,EAAc,GAIpBL,EAA2BhB,SAAQ,SAACnF,GAChCwG,EAAYjE,KAAKV,GAAIX,SAAStB,QAAQI,OAKxCiF,EAAkBE,SAAQ,SAACpF,GACvByG,EAAYjE,KAAKV,GAAIX,SAAS3B,OAAOQ,OAKrC,EAAK4C,MAAMkC,sBAAwB,EAAKlC,MAAMgD,aAAapK,UACtB,KAAnC,EAAKoH,MAAMkC,qBACb2B,EAAYjE,KAAKV,GAAIP,KAAKzB,OAAOK,EAAQ,EAAKyC,MAAMkC,oBAAqB9H,IAM7EsC,QAAQoH,WAAWD,GAAazH,KAAK,EAAK0C,wBA1fhC,EA8fdiF,+BAAiC,SAAC7K,GAChCA,EAAMyJ,iBACN,IAAMvI,EAAY,EAAK4F,MAAM5F,UACvB4J,EAAoB,EAAKhE,MAAMP,QAAQQ,KAAI,SAAAC,GAAM,OAAIA,EAAOxG,MAC5DuK,EAAuB,EAAKjE,MAAMiC,qBAClCiC,EAAqB,GACrBC,EAAqB,GACrBC,EAAsC,GAK5CH,EAAqBzB,SAAQ,SAAA9I,GACxBsK,EAAkB3C,SAAS3H,IAG5ByK,EAAmBvE,KAAKlG,MAO5BsK,EAAkBxB,SAAQ,SAAA9I,GACpBuK,EAAqB5C,SAAS3H,IAGhCwK,EAAmBtE,KAAKlG,MAM5B,IAAMmK,EAAc,GAGpBM,EAAmB3B,SAAQ,SAAApE,GAC1ByF,EAAYjE,KAAKV,GAAIN,WAAWhC,OAAOwB,EAAUhE,OAKlD,EAAK4F,MAAMP,QAAQ+C,SAAQ,SAAAtC,GACtBgE,EAAmB7C,SAASnB,EAAOxG,KACpC0K,EAAoCxE,KAAKM,EAAOmE,kBAIpDD,EAAoC5B,SAAQ,SAAAnE,GAC1CwF,EAAYjE,KAAKV,GAAIN,WAAW3B,QAAQoB,OAKtC,EAAK2B,MAAM/F,cAAgB,EAAK+F,MAAMV,wBACE,KAAtC,EAAKU,MAAMV,wBACbuE,EAAYjE,KAAKV,GAAIZ,QAAQpB,OAAO9C,EAAW,EAAK4F,MAAMV,yBAM9D5C,QAAQoH,WAAWD,GAAazH,KAAK,EAAK0C,wBA5jB9B,EAgkBdwF,qCAAuC,WACrC,IAAIC,EAAwB,GAC5B,EAAKvE,MAAMP,QAAQ+C,SAAQ,SAAAtC,GACzBqE,EAAqB,sBAAOA,GAAP,CAA8BrE,EAAOxG,QAE5D,EAAKyF,SAAS,CACZ8C,qBAAsBsC,KAtkBZ,EA0kBd/K,2BAA6B,SAACE,GAC5B,IAAI8K,EAAmB,KACnB5L,EAAW,KAEToJ,EAAoB,CACxBJ,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAGZ,EAAK/B,MAAMT,MAAMiD,SAAQ,SAAA/I,GACpBA,EAAKC,KAAOA,IAGb8K,EAAmB/K,EACnBb,EAAWa,EAAKgL,UAIhBzC,EAAkBJ,YAAcnI,EAAKmI,YAAY3B,KAAI,SAAAgD,GAAS,OAAIA,EAAUzF,WAC5EwE,EAAkBH,YAAcpI,EAAKoI,YAAY5B,KAAI,SAAAgD,GAAS,OAAIA,EAAUzF,WAC5EwE,EAAkBF,UAAYrI,EAAKqI,UAAU7B,KAAI,SAAAgD,GAAS,OAAIA,EAAUzF,WACxEwE,EAAkBD,SAAWtI,EAAKsI,SAAS9B,KAAI,SAAAgD,GAAS,OAAIA,EAAUzF,eAI1E,EAAK2B,SAAS,CACZ6D,aAAcwB,EACdtC,oBAAqBtJ,EACrBoJ,kBAAmBA,KAxmBT,EA4mBdpI,aAAe,SAACH,GACdyF,GAAIP,KAAK1B,QAAQxD,EAAKC,IACrB0C,KAAK,EAAK0C,wBA9mBC,EAknBd4F,yBAA2B,SAACxL,EAAOC,GACjC,EAAKgG,SAAS,CAACwF,gBAAiBxL,EAAKR,SAnnBzB,EAsnBdiM,eAAiB,SAACnL,GAEIA,EAAKoL,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKtH,WAEhC6D,SAAS,EAAKnK,MAAMoG,QAClC7D,EAAKoL,MAAMrC,SAAQ,SAAAsC,GACdA,EAAKtH,UAAY,EAAKtG,MAAMoG,QAC7B4B,GAAIV,KAAKvB,QAAQ6H,EAAKC,SACrB3I,KAAK,EAAK0C,0BAKfI,GAAIV,KAAK5B,OAAO,EAAK1F,MAAMoG,OAAQ7D,EAAKC,IACrC0C,KAAK,EAAK0C,wBApoBH,EAwoBdkG,iBAAmB,WACjB,EAAKhF,MAAM2E,gBAAgBnC,SAAQ,SAACpE,GAElCc,GAAIN,WAAWhC,OAAOwB,EAAU,EAAK4B,MAAM5F,WACxCgC,KAAK,EAAK0C,uBACVY,OAAM,SAACvG,GACN,EAAKgG,SAAS,CACZ8F,WAAY,CACVC,OAAQ,QACRC,QAAShM,EAAKiM,QAEhBC,gBAAgB,IAElBC,YAAW,kBAAM,EAAKnG,SAAS,CAC7BkG,gBAAgB,EAChBJ,WAAY,CAAEC,OAAO,GAAKC,QAAS,QAAS,WAGpD,EAAKhG,SAAS,CACZoG,cAAc,KA3pBJ,EAgqBdC,eAAiB,SAACvC,GAChB/D,GAAIX,SAAStB,QAAQgG,EAAUG,cAC5BhH,KAAK,EAAK0C,wBAlqBD,EAyqBd3E,cAAgB,SAACC,GACf8E,GAAIZ,QAAQrB,QAAQ7C,GACnBgC,KAAK,EAAKqJ,8BA3qBC,EA8qBdA,4BAA8B,WAC5B,EAAKvO,MAAMyI,QAAQC,KAAnB,cA/qBY,EAkrBd8F,wBAA0B,SAACxM,GACzB,IAAMe,EAAcf,EAAMiJ,OAAOxJ,MACjC,EAAKwG,SAAS,CAAEG,uBAAwBrF,KAjrBxC,EAAK+F,MAAQ,CACXF,SAAU,GACV6E,gBAAiB,GACjBY,cAAc,EACdF,gBAAgB,EAChBJ,WAAY,CACVC,OAAQ,GACRC,QAAS,IAEX/K,UAAW,GACXH,YAAa,GACbqF,uBAAwB,GACxBF,UAAW,GACXG,MAAO,GACPC,QAAS,GACTC,QAAS,GACTwC,qBAAsB,GACtBe,aAAc,CACZzF,OAAQ,KACRoI,SAAU,KACV/D,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAEZG,oBAAqB,GACrBP,oBAAqB,CACnBC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,IAEZC,kBAAmB,CACjBJ,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,KAvCF,E,qDAurBd,WACQ/F,aAAaC,OACf2J,KAAK1O,MAAM2O,iBACXD,KAAK/F,yBACL+F,KAAK9G,yBAEL8G,KAAK1O,MAAMyI,QAAQC,KAAK,Y,oBAI5B,WAAU,IAAD,OACP,OACE,eAACkG,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAASC,OAAQJ,KAAK5F,MAAMqF,eAA5B,UACE,cAACU,EAAA,EAAQ1N,OAAT,UAAiBuN,KAAK5F,MAAMiF,WAAWC,SACvC,4BACGU,KAAK5F,MAAMiF,WAAWE,aAG3B,cAACc,EAAD,CAAKrK,OAAQgK,KAAK1O,MAAM0E,OAAQF,OAAQkK,KAAKH,4BAA6B9J,SAAU,mBAAoBF,aAAcmK,KAAK1O,MAAMuE,eACjI,eAACpD,EAAA,EAAD,CAAQ6N,GAAG,KAAX,UAAiBN,KAAK5F,MAAM/F,YAC1B,cAAC,EAAD,CACEG,UAAWwL,KAAK5F,MAAM5F,UACtBK,sBAAuBmL,KAAKtB,qCAC5BvJ,oBAAqB6K,KAAKF,wBAC1BzL,YAAa2L,KAAK5F,MAAMV,uBACxBtE,eAAgB4K,KAAKpF,oCACrB2F,qBAAsBP,KAAK5E,wCAC3B9F,SAAU0K,KAAK7B,+BACf5J,cAAeyL,KAAKzL,mBAIxB,cAACL,EAAA,EAAD,UACE8L,KAAK5F,MAAMuF,aAET,cAACzL,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACI,gCACE,cAAC0G,EAAA,EAAD,CAAUhI,YAAY,YAAYG,SAAU+M,KAAKlB,yBAA0B/D,OAAK,EAACC,UAAQ,EAACC,WAAS,EAACC,QAAS8E,KAAKxF,0BAClH,cAACzI,EAAA,EAAD,CACEK,QAAS4N,KAAKZ,iBADhB,4BAMN,cAAClL,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACoM,EAAA,EAAMC,MAAP,CAAaC,UAAQ,EAArB,SACKV,KAAK5F,MAAMP,QAAQQ,KAAI,SAACC,EAAQhE,GAAT,OAAmB,cAACqK,EAAA,EAAD,CAAOrO,KAAK,OAAOqD,SAAS,gBAAgBjB,MAAO,CAAEkM,QAAS,GAAI3L,QAASqF,EAAOK,UAAW7I,QAAS,cAAC0O,EAAA,EAAD,UAAoBlG,EAAOuG,UAAfvK,cAavK,eAACwK,EAAA,EAAD,CAAOC,QAAM,EAAb,UACE,cAACD,EAAA,EAAMrO,OAAP,UACE,eAACqO,EAAA,EAAME,IAAP,WACE,cAACF,EAAA,EAAMG,WAAP,CAAkB7M,MAAM,OAAxB,kBACA,cAAC0M,EAAA,EAAMG,WAAP,CAAkB7M,MAAM,MAAxB,yBACA,cAAC0M,EAAA,EAAMG,WAAP,CAAkB7M,MAAM,MAAxB,yBACA,cAAC0M,EAAA,EAAMG,WAAP,CAAkB7M,MAAM,MAAxB,uBACA,cAAC0M,EAAA,EAAMG,WAAP,CAAkB7M,MAAM,MAAxB,2BAGJ,cAAC0M,EAAA,EAAMI,KAAP,UACClB,KAAK5F,MAAMT,MAAMU,KAAI,SAACxG,EAAMyC,GAC3B,OAAQ,eAACwK,EAAA,EAAME,IAAP,CACNjM,MAAOlB,EAAKoL,MAAMkC,OAAS,EADrB,UAGN,cAACL,EAAA,EAAMM,KAAP,UACE,eAAClN,EAAA,EAAD,WACA,eAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,UACCP,EAAKgL,UACN,cAAC2B,EAAA,EAAMC,MAAP,CAAaC,UAAQ,EAArB,SACG7M,EAAKoL,MAAM5E,KAAI,SAAC6E,EAAM5I,GAAP,OAAiB,cAACqK,EAAA,EAAD,CAAOrO,KAAK,OAAOqD,SAAS,gBAAgBjB,MAAO,CAAEkM,QAAS,GAAK3L,QAASiK,EAAKmC,eAAgBvP,QAAS,cAAC0O,EAAA,EAAD,CAAmBzM,MAAM,MAAzB,SAAgCmL,EAAKoC,eAAzBhL,aAGvJ,eAACpC,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC,EAAD,CACEP,KAAMA,EACNW,UAAW,EAAK4F,MAAM5F,UACtBrB,gBAAiB,kBAAM,EAAKkI,gCAAgCxH,IAC5DD,2BAA4B,EAAKA,2BACjCZ,SAAU,EAAKoH,MAAMkC,oBACrBpJ,sBAAuB,EAAKA,sBAC5BqN,qBAAsB,EAAK7E,qCAC3BjI,aAAc,EAAKuJ,4BACnBhJ,aAAc,EAAKA,eAErB,cAACjC,EAAA,EAAD,CACEE,MAAI,EACJG,QAAS,WAAQ,EAAK4M,eAAenL,IACrCS,YAAYT,EAAKoL,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKtH,WAAS6D,SAAS,EAAKnK,MAAMoG,QACrEhD,MAAQb,EAAKoL,MAAM5E,KAAI,SAAA6E,GAAI,OAAIA,EAAKtH,WAAS6D,SAAS,EAAKnK,MAAMoG,QAAU,CAAE9C,gBAAiB,SAAY,KAC1G5C,QAAQ,QALV,SAME,cAACO,EAAA,EAAD,CACEwB,MAAOF,EAAKoL,MAAMkC,OAAS,EAAI,MAAQ,OACvC3O,KAAMqB,EAAKoL,MAAMkC,OAAS,EAAI,OAAS,2BAKjD,cAACL,EAAA,EAAMM,KAAP,UAEIvN,EAAKmI,YAAY3B,KAAI,SAACgD,EAAWkE,GAC/B,OAAQ,eAACf,EAAA,EAAD,CAEI9L,MAAO,CAAE8M,UAAW,EAAGC,aAAc,GACvC1N,MAAOsJ,EAAUzF,UAAY,EAAKtG,MAAMoG,QAAS,OAHnD,UAIK2F,EAAUqE,gBACX,cAACnP,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAKwN,eAAevC,IACnC7K,KAAK,aANJ+O,QAWrB,cAACT,EAAA,EAAMM,KAAP,UACIvN,EAAKoI,YAAY5B,KAAI,SAACgD,EAAWkE,GAC/B,OAAQ,eAACf,EAAA,EAAD,CAEE9L,MAAO,CAAE8M,UAAW,EAAGC,aAAc,GACrC1N,MAAOsJ,EAAUzF,UAAY,EAAKtG,MAAMoG,QAAS,OAHnD,UAIG2F,EAAUqE,gBACX,cAACnP,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAKwN,eAAevC,IACnC7K,KAAK,aANF+O,QAUrB,cAACT,EAAA,EAAMM,KAAP,UACEvN,EAAKqI,UAAU7B,KAAI,SAACgD,EAAWkE,GAC7B,OAAQ,eAACf,EAAA,EAAD,CAEN9L,MAAO,CAAE8M,UAAW,EAAGC,aAAc,GACrC1N,MAAOsJ,EAAUzF,UAAY,EAAKtG,MAAMoG,QAAS,OAH3C,UAIL2F,EAAUqE,gBACX,cAACnP,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAKwN,eAAevC,IACnC7K,KAAK,aANF+O,QAUX,cAACT,EAAA,EAAMM,KAAP,UACEvN,EAAKsI,SAAS9B,KAAI,SAACgD,EAAWkE,GAC5B,OAAQ,eAACf,EAAA,EAAD,CAEN9L,MAAO,CAAE8M,UAAW,EAAGC,aAAc,GACrC1N,MAAOsJ,EAAUzF,UAAY,EAAKtG,MAAMoG,QAAS,OAH3C,UAIL2F,EAAUqE,gBACX,cAACnP,EAAA,EAAD,CACEH,QAAS,kBAAM,EAAKwN,eAAevC,IACnC7K,KAAK,aANF+O,UA9ENjL,QA2FT,cAACwK,EAAA,EAAMa,OAAP,CAAcC,WAAS,EAAvB,SACE,eAACd,EAAA,EAAME,IAAP,WACE,cAACF,EAAA,EAAMG,WAAP,UACE,cAAC,EAAD,CACEzM,UAAWwL,KAAK5F,MAAM5F,UACtBqN,cAAe7B,KAAK5F,MAAMZ,UAC1BrG,gBAAiB6M,KAAKrE,kCACtB3I,SAAUgN,KAAK5F,MAAMgD,aAAayB,UAClC3L,sBAAuB8M,KAAK9M,sBAC5BqN,qBAAsBP,KAAKpE,mCAC3BvJ,qBAAsB,WACpB,EAAKkH,SAAS,CACZ6D,aAAc,CACZzF,OAAQ,KACRkH,UAAW,KACX7C,YAAa,GACbC,YAAa,GACbC,UAAW,GACXC,SAAU,OAIhB1I,aAAcuM,KAAKlD,4BAEvB,cAACgE,EAAA,EAAMG,WAAP,CAAkBa,QAAQ,qB,GAr3BHvQ,IAAMwQ,W,4BCLxBC,G,kDAEnB,aAAe,IAAD,8BACZ,gBAWFC,oBAAsB,SAACC,GACrB,QAASA,EAAQ9I,MAAM,UAbX,EAgBd+I,gBAAkB,WAEhB,OAAQ,EAAK/H,MAAMgI,UAAUnK,SAASkJ,OAAS,GAlBnC,EAqBd1N,aAAe,SAAC4O,GACdA,EAAEtF,iBACFzD,GAAIR,KAAKf,MAAM,EAAKqC,MAAMgI,WACzB5L,MAAK,SAAAjD,GACDA,EAAK8C,QACRD,aAAaC,MAAQ9C,EAAK8C,MAC1B,EAAK/E,MAAMyI,QAAQC,KAAK,iBAGzBF,OAAM,SAACvG,GACN,EAAKgG,SAAS,CACZiG,OAAQjM,EAAKiM,OAAO,KAEtBE,YAAW,kBAAM,EAAKnG,SAAS,CAC7BiG,OAAQ,SACL,SApCK,EAwCd8C,aAAe,SAACD,GACd,EAAK9I,UAAS,SAAAgJ,GAAS,MAAK,CACxBH,UAAU,2BACPG,EAAUH,WADJ,mBAERC,EAAE9F,OAAO/J,KAAO6P,EAAE9F,OAAOxJ,aAzC9B,EAAKqH,MAAQ,CACXgI,UAAW,CACTpK,MAAO,GACPC,SAAU,IAEZuH,OAAQ,MARE,E,qDAiDd,WACEQ,KAAK1O,MAAM6H,cAAa,GACpB/C,aAAaC,OACf2J,KAAK1O,MAAMyI,QAAQC,KAAK,e,oBAM5B,WAAS,IAAD,OACN,OACE,eAACkG,EAAA,EAAD,CAAWxL,MAAO,CAAC8N,OAAQ,QAAShB,UAAW,MAAMiB,UAAU,SAA/D,UACE,qBAAK/N,MAAO,CACViB,SAAU,WACV6L,UAAW,MACXC,aAAc,OAHhB,SAIE,cAAC1P,EAAA,EAAD,CACEuO,GAAG,KACHlO,QAAS,kBAAM,EAAKd,MAAMyI,QAAQC,KAAK,MACvCtF,MAAO,CACLgO,OAAQ,SACRtO,MAAO,OACPoO,OAAQ,OACRG,WAAY,QACZC,SAAU,MACVC,aAAc,MACdjO,gBAAiB,UACjBb,MAAO,QAXX,oBAeF,eAAC+O,GAAA,EAAD,CAAMC,UAAQ,EAACrO,MAAO,CAAEsO,WAAY,GAAIC,cAAe,GAAIC,YAAa,GAAIC,aAAc,IAA1F,UACE,uCACA,eAACvQ,EAAA,EAAD,CAAMmC,MAAOiL,KAAK5F,MAAMoF,OAAxB,UACE,cAAC5M,EAAA,EAAKkC,MAAN,CACEhC,YAAY,QACZO,KAAK,QACLb,KAAK,QACLO,MAAOiN,KAAK5F,MAAMpC,MAClB/E,SAAU+M,KAAKsC,eACjB,uBACA,cAAC1P,EAAA,EAAKkC,MAAN,CACEhC,YAAY,WACZO,KAAK,WACLb,KAAK,WACLO,MAAOiN,KAAK5F,MAAMnC,SAClBhF,SAAU+M,KAAKsC,eACf,cAACnC,EAAA,EAAD,CACEpL,OAAK,EACLuK,OAAQ,QACRrK,QAAS+K,KAAK5F,MAAMoF,SAExB,uBACA,uBACA,cAACzN,EAAA,EAAD,CACEK,QAAS4N,KAAKvM,aACdM,SAAOiM,KAAKiC,oBAAoBjC,KAAK5F,MAAMgI,UAAUpK,SAAUgI,KAAKmC,oBAAoB,OACxF9O,KAAK,SAHP,uBAOF,uBA9BF,0BA+ByB,cAAC,KAAD,CAAM+P,GAAG,UAAT,+B,GAjHE7R,IAAMwQ,WCEpBsB,G,kDAEnB,aAAe,IAAD,8BACZ,gBAaFpB,oBAAsB,SAACC,GACrB,QAASA,EAAQ9I,MAAM,UAfX,EAkBdkK,iBAAmB,WAClB,OAAQ,EAAKlJ,MAAMmJ,WAAWpL,WAAWgJ,OAAS,GAAK,EAAK/G,MAAMmJ,WAAWnL,UAAU+I,OAAS,GAAK,EAAK/G,MAAMmJ,WAAWtL,SAASkJ,OAAS,GAnBhI,EAsBdmB,aAAe,SAACD,GACd,EAAK9I,UAAS,SAAAgJ,GAAS,MAAK,CAC1BgB,WAAW,2BACNhB,EAAUgB,YADL,mBAEPlB,EAAE9F,OAAO/J,KAAO6P,EAAE9F,OAAOxJ,aA1BlB,EA+BdU,aAAe,SAAC4O,GACdA,EAAEtF,iBACAzD,GAAIR,KAAKZ,OAAO,EAAKkC,MAAMmJ,YAC1B/M,MAAK,SAAAjD,GACDA,EAAK8C,QACND,aAAaC,MAAQ9C,EAAK8C,MAC1B,EAAK/E,MAAMyI,QAAQC,KAAK,iBAG3BF,OAAM,SAACvG,GACHA,GACD,EAAKgG,SAAS,CACZiG,OAAQjM,EAAKiM,OAAO,KAEtBE,YAAW,WACT,EAAKnG,SAAS,CACZiG,OAAQ,SACL,MAGP,EAAKjG,SAAS,CACZiG,OAAQ,oEAjDhB,EAAKpF,MAAQ,CACXmJ,WAAY,CACVpL,WAAY,GACZC,UAAW,GACXJ,MAAO,GACPC,SAAU,IAEZuH,OAAQ,MAVE,E,qDA0Dd,WACEQ,KAAK1O,MAAM6H,cAAa,K,oBAG1B,WAAW,IAAD,OAER,OACE,eAAC+G,EAAA,EAAD,CAAWxL,MAAO,CAAC8N,OAAQ,QAAShB,UAAW,MAAOiB,UAAU,SAAhE,UACE,qBAAK/N,MAAO,CACViB,SAAU,WACV6L,UAAW,MACXC,aAAc,OAHhB,SAKE,cAAC1P,EAAA,EAAD,CACEuO,GAAG,KACHlO,QAAS,kBAAM,EAAKd,MAAMyI,QAAQC,KAAK,MACvCtF,MAAO,CACLgO,OAAQ,SACRtO,MAAO,OACPoO,OAAQ,OACRG,WAAY,QACZC,SAAU,MACVC,aAAc,MACdjO,gBAAiB,UACjBb,MAAO,QAXX,oBAeF,eAAC+O,GAAA,EAAD,CAAMC,UAAQ,EAACrO,MAAO,CAAEsO,WAAY,GAAIC,cAAe,GAAIC,YAAa,GAAIC,aAAc,IAA1F,UACE,yCACA,eAACvQ,EAAA,EAAD,CAAMmC,MAAOiL,KAAK5F,MAAMoF,OAAxB,UACE,cAAC5M,EAAA,EAAKkC,MAAN,CACEhC,YAAY,aACZO,KAAK,OACLb,KAAK,aACLO,MAAOiN,KAAK5F,MAAMjC,WAClBlF,SAAU+M,KAAKsC,eAEjB,uBACA,cAAC1P,EAAA,EAAKkC,MAAN,CACEhC,YAAY,YACZO,KAAK,OACLb,KAAK,YACLO,MAAOiN,KAAK5F,MAAMhC,UAClBnF,SAAU+M,KAAKsC,eAEjB,uBACA,cAAC1P,EAAA,EAAKkC,MAAN,CACEhC,YAAY,QACZO,KAAK,QACLb,KAAK,QACLO,MAAOiN,KAAK5F,MAAMpC,MAClB/E,SAAU+M,KAAKsC,eAEjB,uBACA,cAAC1P,EAAA,EAAKkC,MAAN,CACEhC,YAAY,WACZO,KAAK,WACLb,KAAK,WACLO,MAAOiN,KAAK5F,MAAMnC,SAClBhF,SAAU+M,KAAKsC,eAEjB,cAACnC,EAAA,EAAD,CACEpL,OAAK,EACLuK,OAAQ,QACRrK,QAAS+K,KAAK5F,MAAMoF,SAEtB,uBACA,uBACA,cAACzN,EAAA,EAAD,CACEK,QAAS4N,KAAKvM,aACdM,SAAOiM,KAAKiC,oBAAoBjC,KAAK5F,MAAMmJ,WAAWvL,SAAUgI,KAAKsD,qBAAqB,OAC1FjQ,KAAK,SAHP,+BAOF,uBAhDF,6BAiD4B,cAAC,KAAD,CAAM+P,GAAG,SAAT,6B,GAzIA7R,IAAMwQ,WCH3B,YAACzQ,GAAW,IAAD,EACAC,IAAMC,UAAS,GADf,mBACjBC,EADiB,KACXC,EADW,KAExB,OACE,eAACC,EAAA,EAAD,CACEC,QAAS,kBAAMF,GAAQ,IACvBG,OAAQ,kBAAMH,GAAQ,IACtBD,KAAMA,EACNK,QAASR,EAAMQ,QAJjB,UAME,cAACH,EAAA,EAAMc,OAAP,6BACA,cAACd,EAAA,EAAMe,QAAP,UACE,cAACf,EAAA,EAAMgB,YAAP,UAIE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,WACE,iDACA,cAACD,EAAA,EAAKkC,MAAN,CACEC,MAAOzD,EAAM0D,oBAAsB,CAAEC,QAAS,+BAAgCC,SAAU,SAAY,KACpGjC,SAAU3B,EAAM6D,oBAChBpC,MAAOzB,EAAM+C,YACbvB,YAAY,4BAGhB,eAACF,EAAA,EAAKC,MAAN,WACE,iDACA,cAACiI,EAAA,EAAD,CACAhI,YAAY,mBACZG,SAAU3B,EAAMkS,iBAChBzI,OAAK,EACLC,UAAQ,EACRC,WAAS,EACTC,QAAS5J,EAAMmS,4BAKvB,eAAC9R,EAAA,EAAMyB,QAAP,WACE,cAACrB,EAAA,EAAD,CACEK,QACE,WACEV,GAAQ,GACRJ,EAAMoS,YAJZ,oBAQA,cAAC3R,EAAA,EAAD,CACEsB,KAAK,SACLjB,QAAS,SAACkB,GACR5B,GAAQ,GACRJ,EAAMgE,SAAShC,IAEjBI,UAAQ,EANV,mCC7CaiQ,G,kDAEnB,aAAe,IAAD,8BACZ,gBAWF1J,uBAAyB,WACvB,OAAOX,GAAIR,KAAKxC,QACfE,MAAK,SAAAjD,GAAI,OAAI,EAAKgG,SAAS,CAAEW,SAAU3G,EAAKA,WAdjC,EAiBdqQ,uBAAyB,WACvB,EAAKtS,MAAM6H,cAAa,GACxBG,GAAIR,KAAKR,qBACR9B,MAAK,SAAAjD,GACJ,EAAKjC,MAAM6H,cAAa,GACxB,EAAKI,SAAS,CACZsK,SAAUtQ,EAAKA,WAvBP,EA6BduL,yBAA2B,SAACxL,EAAOC,GACjC,EAAKgG,SAAS,CAAEwF,gBAAiBxL,EAAKR,SA9B1B,EAiCd+M,wBAA0B,SAACxM,GAEzB,IAAMe,EAAcf,EAAMiJ,OAAOxJ,MAMjC,EAAKwG,SAAS,CAAElF,YAAaA,KAzCjB,EA4CdwH,6BAA+B,WAC7B,OAAO,EAAKzB,MAAMF,SAASG,KAAI,SAAAI,GAAI,MAAK,CACtCF,IAAKE,EAAK3G,GACVN,KAAMiH,EAAKhB,WAAWkB,UACtB5H,MAAO0H,EAAK3G,QAhDF,EAmDdgQ,sBAAwB,WACtB,EAAKvK,SAAS,CAAClF,YAAa,MApDhB,EAuDd+K,iBAAmB,SAAC5K,GAClB,EAAK4F,MAAM2E,gBAAgBnC,SAAQ,SAACpE,EAAUlC,GAC5CgD,GAAIN,WAAWhC,OAAOwB,EAAUhE,OAzDtB,EA6DduP,iBAAmB,WACjBzK,GAAIZ,QAAQ1B,OAAO,CAACxE,KAAM,EAAK4H,MAAM/F,YAAa2P,WAAY,EAAK1S,MAAMoG,SACtElB,MAAK,SAAAjD,GACJ,IAAMiB,EAAYjB,EAAKA,KAAKO,GAC5B,EAAKsL,iBAAiB5K,MAEvBgC,KAAK,EAAKoN,yBAnED,EAsEdK,mBAAqB,WACnB,OAAO,EAAK7J,MAAMyJ,SAASxJ,KAAI,SAAC6J,EAAS5N,GAEvC,OACE,cAACwM,GAAA,EAAD,CAEExD,OAAQ4E,EAAQzK,WAAWjH,KAC3BkC,MAAO,CAAE8N,OAAQ,QAGjBpQ,QAAS,WACP,IAAMoC,EAAY0P,EAAQpQ,GAC1B,EAAKqQ,sBAAsB3P,KAPxB8B,OA3EC,EAyFd6N,sBAAwB,SAAC3P,GACvB,EAAKlD,MAAMyI,QAAQC,KAAnB,oBAAqCxF,KA1FzB,EAwGd4P,gBAAkB,WAChB,OACE,eAACtB,GAAA,EAAKrC,MAAN,CAAY4D,YAAa,EAAG3P,MAAO,CAAE8M,UAAW,IAAhD,UACC,EAAKyC,qBACJ,cAACK,GAAD,CACEtP,oBAAqB,EAAKoF,MAAMmK,uBAChCzS,QAAS,cAACgR,GAAA,EAAD,CAAM/O,MAAM,OAAOuL,OAAQ,iCAAM,cAAC/M,EAAA,EAAD,CAAMC,KAAK,OAAOuB,MAAM,SAAS,cAACtB,EAAA,EAAD,CAAQsB,MAAM,OAAd,8BAC3EyP,iBAAkB,EAAK1E,yBACvB2E,gBAAiB,EAAK5H,+BACtB1G,oBAAqB,EAAK2K,wBAC1BzL,YAAa,EAAK+F,MAAM/F,YACxBiB,SAAU,EAAKyO,iBACfL,SAAU,EAAKI,4BAjHrB,EAAK1J,MAAQ,CACXyJ,SAAU,GACV3J,SAAU,GACV7F,YAAa,GACb0K,gBAAiB,GACjBwF,wBAAwB,GARd,E,qDA6Fd,WACMnO,aAAaC,OACf2J,KAAK1O,MAAM2O,iBACXD,KAAK4D,yBACL5D,KAAK/F,0BAEL+F,KAAK1O,MAAMyI,QAAQC,KAAK,Y,oBAuB5B,WACE,OACE,eAACkG,EAAA,EAAD,WACE,cAACG,EAAD,CAAKrK,OAAQgK,KAAK1O,MAAM0E,OAAQH,aAAcmK,KAAK1O,MAAMuE,eACxDmK,KAAKoE,yB,GAhI4B7S,IAAMwQ,W,UCQjCyC,I,cAZD,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,UAAWrS,EAAqC,EAArCA,QAAS2B,EAA4B,EAA5BA,MAAO2Q,EAAqB,EAArBA,eAEzC,OACE,mCACE,sBAAKC,UAAS,WAAMD,EAAc,0BAAsBD,GAAc,GAAxD,YAA8DA,EAA9D,YAA2E1Q,EAA3E,oBAAoG6Q,aAAcxS,EAASA,QAASA,EAAlJ,UACE,qBAAKuS,UAAS,UAAKF,EAAL,YAAkB1Q,EAAlB,+BACd,qBAAK4Q,UAAS,UAAKF,EAAL,YAAkB1Q,EAAlB,uCC+BP8Q,GAnCQ,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAAiB,EACzBzT,mBAAS,GADgB,mBACpE0T,EADoE,KACjDC,EADiD,KAGrEC,EAAUJ,EAAOE,GACpBG,MADa,WACHH,EAAoB,EADjB,MACuB,GACpCG,MAAM,KAAK,GAERC,EAAc,SAAAb,GAClB,IAAMc,EAAkBP,EAAO7D,OAAQ,EACtB,SAAdsD,EAECU,EADwB,IAAtBD,EACmBK,EAEAL,EAAoB,GAEpB,UAAdT,GAEPU,EADED,IAAsBK,EACH,EAEAL,EAAoB,IAK/C,OACE,sBAAKM,WAAUV,EAASW,oBAAmBV,EAAiBJ,UAAU,4BAAtE,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,0BACf,cAAC,GAAD,CAAOD,gBAAc,EAACD,UAAU,OAAO1Q,MAAOkR,EAAY7S,QAAS,kBAAMkT,EAAY,WACrF,cAAC,GAAD,CAAOZ,gBAAc,EAACD,UAAU,QAAQ1Q,MAAOkR,EAAY7S,QAAS,kBAAMkT,EAAY,YACtF,qBAAKX,UAAU,gBAAgBe,IAAKN,EAASO,IAAKX,EAAOE,S,wCChBzDU,GAAiB,CAAC,qDAAsD,qCAAsC,oCAAqC,0CAA2C,4CAA6C,2CAA4C,wC,GAErPC,uBAAY,CAClDC,YAAa,CACXC,OAAQ,EACRC,OAAQ,IACRC,SAAU,QAJNC,G,GAAAA,qBAAsBC,G,GAAAA,MAQxBC,GAAkB,CACtB,CACE9G,OAAQ,cACR+G,YACE,kCACFtS,MAAO,QAET,CACEuL,OAAQ,cACR+G,YACE,4CACFtS,MAAO,QAET,CACEuL,OAAQ,YACR+G,YACE,0BACFtS,MAAO,QAET,CACEuL,OAAQ,WACR+G,YACE,4CACFtS,MAAO,SAILuS,GAAkB,SAAChV,GACvB,OACE,eAAC4O,EAAA,EAAD,CAAW1M,MAAI,EAAf,UACE,cAACf,EAAA,EAAD,CACE6N,GAAG,KACHrL,QAAQ,OACRX,UAAQ,EACRI,MAAO,CACLkO,SAAUtR,EAAMyU,OAAS,MAAQ,MACjCQ,WAAY,OACZ9E,aAAc,EACdD,UAAWlQ,EAAMyU,OAAS,QAAU,MACpChS,MAAO,aAGX,cAACtB,EAAA,EAAD,CACE6N,GAAG,KACHrL,QAAQ,2DACRX,UAAQ,EACRI,MAAO,CACLkO,SAAUtR,EAAMyU,OAAS,QAAU,MACnCQ,WAAY,SACZ9E,aAAc,EACdD,UAAWlQ,EAAMyU,OAAS,QAAU,WAGxC,eAAChU,EAAA,EAAD,CACEK,QAAS,WACPd,EAAMyI,QAAQC,KAAK,YAGrBtF,MAAO,CACL8M,UAAWlQ,EAAMyU,OAAS,MAAQ,SAEpC5T,SAAO,EAACG,KAAMhB,EAAMyU,OAAS,SAAW,OAR1C,wBAUE,cAACxT,EAAA,EAAD,CAAMC,KAAK,uBAUbgU,G,4MACJpM,MAAQ,G,EAERqM,cAAgB,kBAAM,EAAKlN,SAAS,CAAEmN,OAAO,K,EAC7CC,cAAgB,kBAAM,EAAKpN,SAAS,CAAEmN,OAAO,K,4CAE7C,WAAU,IAAD,OACCE,EAAa5G,KAAK1O,MAAlBsV,SACAF,EAAU1G,KAAK5F,MAAfsM,MAGV,OACI,eAACP,GAAD,CAAOU,YAAY,SAAnB,UACE,cAACC,GAAA,EAAD,CACEC,MAAM,EACNC,eAAgBhH,KAAK2G,cACrBM,sBAAuBjH,KAAKyG,cAH9B,SAKE,eAACS,GAAA,EAAD,CACE5S,UAAQ,EACRmO,UAAU,SACV/N,MAAO,CAAEyS,UAAW,IAAKvG,QAAS,WAClCwG,UAAQ,EAJV,UAME,cAAC7R,EAAA,EAAD,CACEmR,MAAOA,EAAQ,MAAQ,KACvBpS,UAAWoS,EACXxR,UAAWwR,EACXW,WAAYX,EACZpU,KAAK,QALP,SAOE,cAAC4N,EAAA,EAAD,UACE,eAAC3K,EAAA,EAAKK,KAAN,CAAWD,SAAS,QAApB,UACE,cAAC5D,EAAA,EAAD,CAAQK,QAAS,WAAQ,EAAKd,MAAMyI,QAAQC,KAAK,WAAasG,GAAG,IAAIhM,UAAWoS,EAAhF,oBAGA,cAAC3U,EAAA,EAAD,CAAQK,QAAS,WAAO,EAAKd,MAAMyI,QAAQC,KAAK,YAAasG,GAAG,IAAIhM,UAAWoS,EAAOvU,QAASuU,EAAOhS,MAAO,CAAEC,WAAY,SAA3H,4BAMN,cAAC,GAAD,eAAqBqL,KAAK1O,aAI7BsV,S,GA9CsB7E,aAwDzBuF,G,4MACJlN,MAAQ,G,EAERmN,kBAAoB,kBAAM,EAAKhO,SAAS,CAAEiO,eAAe,K,EAEzDC,aAAe,kBAAM,EAAKlO,SAAS,CAAEiO,eAAe,K,4CAEpD,WAAU,IACAZ,EAAa5G,KAAK1O,MAAlBsV,SACAY,EAAkBxH,KAAK5F,MAAvBoN,cAER,OACE,cAACrB,GAAD,CAAO7F,GAAIoH,KAAQC,SAAUC,GAAG,SAAhC,SACE,eAACF,GAAA,EAAQC,SAAT,WACE,eAACD,GAAA,EAAD,CACEpH,GAAI/K,IACJsS,UAAU,UACVvT,UAAQ,EACRwT,OAAQ9H,KAAKuH,kBACbH,UAAQ,EACRW,QAASP,EANX,UAQE,cAACjS,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAI0H,QAAM,EAAxB,kBAGA,cAACzS,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAd,kBACA,cAAC/K,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAd,qBACA,cAAC/K,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAd,qBACA,cAAC/K,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAd,oBACA,cAAC/K,EAAA,EAAKK,KAAN,CAAW0K,GAAG,IAAd,wBAGF,eAACoH,GAAA,EAAQO,OAAT,CAAgBC,OAAQV,EAAxB,UACE,eAACN,GAAA,EAAD,CACE5S,UAAQ,EACRmO,UAAU,SACV/N,MAAO,CAAEyS,UAAW,IAAKvG,QAAS,WAClCwG,UAAQ,EAJV,UAME,cAAClH,EAAA,EAAD,UACE,eAAC3K,EAAA,EAAD,CAAMjB,UAAQ,EAACY,UAAQ,EAACmS,WAAS,EAAC/U,KAAK,QAAvC,UACE,cAACiD,EAAA,EAAKK,KAAN,CAAWxD,QAAS4N,KAAKyH,aAAzB,SACE,cAAClV,EAAA,EAAD,CAAMC,KAAK,cAEb,eAAC+C,EAAA,EAAKK,KAAN,CAAWD,SAAS,QAApB,UACE,cAAC5D,EAAA,EAAD,CAAQuO,GAAG,IAAIhM,UAAQ,EAAvB,oBAGA,cAACvC,EAAA,EAAD,CAAQuO,GAAG,IAAIhM,UAAQ,EAACI,MAAO,CAAEC,WAAY,SAA7C,6BAMN,cAAC,GAAD,2BAAqBqL,KAAK1O,OAA1B,IAAiCyU,QAAM,QAExCa,c,GAxDiB7E,aAoExBoG,GAAsB,SAAC7W,GAE3B,OACE,eAAC4U,GAAD,WACE,cAAC,GAAD,2BAAsB5U,GAAtB,aAA8BA,EAAMsV,YACpC,cAAC,GAAD,2BAAqBtV,GAArB,aAA6BA,EAAMsV,gBASpBwB,G,uKAEnB,WACEpI,KAAK1O,MAAM6H,cAAa,K,oBAG1B,WAAU,IAAD,OAEP,OACE,eAAC,GAAD,2BAAyB6G,KAAK1O,OAA9B,cACE,cAAC4V,GAAA,EAAD,CAASxS,MAAO,CAAEkM,QAAS,WAAawG,UAAQ,EAAhD,SACE,eAAClT,EAAA,EAAD,CAAMmU,WAAS,EAACC,WAAS,EAACC,cAAc,SAAxC,UACE,cAACrB,GAAA,EAAD,CAASxS,MAAO,CAAEkM,QAAS,OAASwG,UAAQ,EAA5C,SACE,cAAClT,EAAA,EAAK8M,IAAN,UACE,cAAC8B,GAAA,EAAKrC,MAAN,CAAYsC,UAAQ,EAACyF,MAAOpC,GAAiB1R,MAAO,CAAE+T,SAAU,SAAU/F,OAAQ,oBAAqBgG,SAAU,aAGnH,eAACxU,EAAA,EAAK8M,IAAN,WACA,eAAC9M,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC3B,EAAA,EAAD,CAAQ6N,GAAG,KAAK5L,MAAO,CAAEkO,SAAU,MAAOpB,UAAW,OAArD,gCAGA,oBAAG9M,MAAO,CAAEkO,SAAU,UAAtB,wBAEE,+BACE,iGACA,oJACA,wFAGJ,cAACnQ,EAAA,EAAD,CAAQ6N,GAAG,KAAK5L,MAAO,CAAEkO,SAAU,OAAnC,0BAGA,mBAAGlO,MAAO,CAAEkO,SAAU,UAAtB,SACE,+BACE,qFACA,8FACA,6GAIN,cAAC1O,EAAA,EAAKC,OAAN,CAAanC,QAAQ,QAAQoC,MAAO,EAApC,SACE,cAAC,GAAD,CAAgB4Q,OAAQY,UAG5B,cAAC1R,EAAA,EAAK8M,IAAN,UACE,cAAC9M,EAAA,EAAKC,OAAN,CAAasO,UAAU,SAAvB,SACE,eAAC1Q,EAAA,EAAD,CACEK,QAAS,WACP,EAAKd,MAAMyI,QAAQC,KAAK,YAE1BtF,MAAO,CAAEgO,OAAQ,SACjBpQ,KAAK,OALP,wBAOE,cAACC,EAAA,EAAD,CAAMC,KAAK,4BAOrB,cAAC0U,GAAA,EAAD,CAAS5S,UAAQ,EAAC8S,UAAQ,EAAC1S,MAAO,CAAEkM,QAAS,WAA7C,SACE,cAACV,EAAA,EAAD,UACE,cAAChM,EAAA,EAAD,CAAMyU,SAAO,EAACrU,UAAQ,EAACgU,WAAS,EAAhC,SACE,cAACpU,EAAA,EAAK8M,IAAN,UACE,eAAC9M,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,cAAC3B,EAAA,EAAD,CAAQ6B,UAAQ,EAACgM,GAAG,KAAKrL,QAAQ,iDACjC,eAAC2T,GAAA,EAAD,CAAMC,MAAI,EAACvU,UAAQ,EAAnB,UACE,cAACsU,GAAA,EAAKhT,KAAN,CAAW0K,GAAG,IAAIwI,KAAK,0CAA0CvM,OAAO,SAAxE,2BACA,cAACqM,GAAA,EAAKhT,KAAN,CAAW0K,GAAG,IAAIwI,KAAK,mCAAmCvM,OAAO,SAAjE,2C,GArEqBhL,IAAMwQ,W,sCCnOzCgH,G,4MAEJ3O,MAAQ,CACN4O,gBAAgB,EAChBpR,QAAS,KACT+C,UAAW,M,EAGbsF,eAAiB,WACf3G,GAAIR,KAAKT,UACN7B,MAAK,SAAAjD,GACJ,EAAKgG,SAAS,CACZ3B,QAAS8C,SAASnH,EAAKA,KAAKO,IAC5B6G,UAAWpH,EAAKA,KAAKkG,WAAWkB,gB,EAIxC3E,OAAS,WACPI,aAAa6S,QACb,EAAK3X,MAAMyI,QAAQC,KAAK,W,EAG1Bb,aAAe,SAAC+P,GACd,EAAK3P,SAAS,CAACyP,eAAgBE,K,uDAGjC,WACM9S,aAAaC,MACf2J,KAAKC,iBACqC,MAAjCD,KAAK1O,MAAM6X,SAASC,UAAqD,YAAjCpJ,KAAK1O,MAAM6X,SAASC,UACrEpJ,KAAK1O,MAAMyI,QAAQC,KAAK,Y,oBAI5B,WAAW,IAAD,OACR,OACE,gCACE,cAACqP,GAAA,EAAD,CAAQ/U,UAAQ,EAAC0T,OAAQhI,KAAK5F,MAAM4O,eAApC,SACE,cAACM,GAAA,EAAD,CAAQhV,UAAQ,EAACW,QAAQ,cAE3B,eAAC,KAAD,WACE,cAAC,KAAD,CACEsU,KAAK,SACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGxJ,eAAgB,EAAKA,eACrB+I,eAAgB,EAAK5O,MAAM4O,eAC3B7P,aAAc,EAAKA,aACnBvB,QAAS,EAAKwC,MAAMxC,cAChD,cAAC,KAAD,CACE2R,KAAK,UACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACKA,GADL,IAECT,eAAgB,EAAK5O,MAAM4O,eAC3B7P,aAAc,EAAKA,mBAC7C,cAAC,KAAD,CACEoQ,KAAK,gBACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGxJ,eAAgB,EAAKA,eACrB+I,eAAgB,EAAK5O,MAAM4O,eAC3B7P,aAAc,EAAKA,aACnBzB,OAAQ,EAAK0C,MAAMxC,QACnB/B,aAAc,EAAKuE,MAAMO,UACzB3E,OAAQ,EAAKA,aACzC,cAAC,KAAD,CACEuT,KAAK,YACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGxJ,eAAgB,EAAKA,eACrB+I,eAAgB,EAAK5O,MAAM4O,eAC3B7P,aAAc,EAAKA,aACnBzB,OAAQ,EAAK0C,MAAMxC,QACnB/B,aAAc,EAAKuE,MAAMO,UACzB3E,OAAQ,EAAKA,aACzC,cAAC,KAAD,CACEuT,KAAK,IACLC,OAAQ,SAAAC,GAAW,OAAI,cAAC,GAAD,2BACOA,GADP,IAEGxJ,eAAgB,EAAKA,eACrB+I,eAAgB,EAAK5O,MAAM4O,eAC3B7P,aAAc,EAAKA,aACnBzB,OAAQ,EAAK0C,MAAMxC,QACnB/B,aAAc,EAAKuE,MAAMO,UACzB3E,OAAQ,EAAKA,uB,GApFjCzE,IAAMwQ,WA4FT2H,gBAAWX,IC5FXY,GAZS,SAAAC,GAClBA,GAAeA,aAAuB/Q,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CqT,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCAdM,IAASV,OACP,cAAC,KAAD,UACA,cAAC,IAAMW,WAAP,UACE,cAAC,GAAD,QAEgBC,SAASC,eAAe,SAM5CV,O","file":"static/js/main.fbe21c37.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction TaskModal(props) {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button \n          floated='left'\n          icon\n          labelPosition = 'left'\n          primary\n          onClick={props.onTriggerButtonClick}\n          size='small'>\n            <Icon name='plus square' /> Add Task\n        </Button>\n      }\n    >\n      <Modal.Header>Create new task</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input \n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n                />\n            </Form.Field>\n            {props.createDropdowns()}\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n        // color='black' \n        onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n            type='submit'\n            icon='checkmark'\n            onClick={(event, data) => {\n              const text = data.taskName\n              setOpen(false)\n              props.handleSubmit(event, text)\n              }}\n            positive>\n          Create task\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default TaskModal","import React, {useState} from 'react'\nimport { Button, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\nfunction EditTaskModal(props) {\n  const [open, setOpen] = useState(false)\n\n\n  const handleTriggerButtonClick = () => {\n    props.putSelectedTaskDataInState(props.task.id)\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={\n        <Button\n          icon\n          onClick={handleTriggerButtonClick}\n          floated='right'>\n          <Icon name='pencil square' />\n        </Button>\n      }\n    >\n    <Modal.Header>Edit task</Modal.Header>\n    <Modal.Content>\n      <Modal.Description>\n        <Form>\n            <Form.Field>\n              <label>Text</label>\n              <input\n                placeholder='Define the task here...'\n                value={props.taskName}\n                onChange={props.handleTextFieldChange}\n              />\n            </Form.Field>\n            {props.createDropdowns(props.task)}\n        </Form>\n      </Modal.Description>\n    </Modal.Content>\n      <Modal.Actions>\n        <Button\n          icon\n          labelPosition='right'\n          color='red'\n          floated='left'\n          onClick={() => {\n            const task = props.task\n            setOpen(false)\n            props.handleDelete(task)\n          }}\n        >\n          Delete task\n        <Icon name='trash alternate outline' />\n        </Button>\n        <Button  \n          onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event, data) => {\n            const task = props.task\n            setOpen(false)\n            props.handleSubmit(event, task)\n          }}\n          positive>\n          Update task\n        </Button>\n        \n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditTaskModal\n","import React from 'react'\nimport { Button, Header, Icon, Modal, Grid } from 'semantic-ui-react'\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <Modal\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      size='small'\n      trigger={<Button\n      color='red'\n      floated='left'>\n      <Icon name='trash alternate outline'/>\n      Delete project</Button>}\n    >\n      <Header icon>\n        <Icon name='trash alternate outline' />\n        <br/>\n        Are you sure you want to delete this project?\n      </Header>\n      <Modal.Content>\n      <Grid>\n        <Grid.Column width={3}/>\n        <Grid.Column width={10}>\n        <p>\n          {`Delete \"${props.projectName}\" along with all associated tasks?`}\n        </p>\n          </Grid.Column>\n          <Grid.Column width={3}/>\n      </Grid>\n      \n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='grey' inverted onClick={() => setOpen(false)}>\n          <Icon name='remove' /> No, go back\n        </Button>\n        <Button color='red' inverted \n        onClick={() => \n        {props.deleteProject(props.projectId)\n        setOpen(false)}}>\n          <Icon name='checkmark' /> Yes, delete\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\nimport deleteProjectWarningModal from './DeleteProjectWarningModal'\n\n\nconst EditProjectModal = (props) => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleTriggerButtonClick = () => {\n    // props.putSelectedProjectDataInState(props.project.id)\n    props.populateMembersToEdit()\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => {setOpen(true)}}\n      open={open}\n      trigger={<span><Button\n        style={{ marginLeft: '1.5vh', backgroundColor: \"white\" }}\n        icon\n        color='white'\n        size='big'\n        onClick={handleTriggerButtonClick}\n        >\n          <Icon \n            name='pencil square' />\n      </Button></span>}\n    >\n      <Modal.Header>Edit Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Project must have a name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n                {props.createDropdown}  \n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        {deleteProjectWarningModal(\n          {\n            projectName: props.projectName, \n            projectId: props.projectId, \n            deleteProject: props.deleteProject\n          }\n        )}\n        <Button\n          onClick={() => {\n            setOpen(false)               \n          // props.onCancel()\n          }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Update project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default EditProjectModal","import React from 'react'\nimport { Menu, Button } from 'semantic-ui-react'\n\nexport default (props) => (\n  <Menu borderless attached='top' style={{ border: 'none'}}>\n    <Menu.Menu position='right'>\n      <Menu.Item>\n      {props.userFullName ? `Logged in as ${props.userFullName}` : ''}\n      </Menu.Item>\n      {props.onBack && \n      <Menu.Item>\n        <Button\n          onClick={props.onBack}\n          floated=\"right\"\n        >{props.backText}</Button>\n      </Menu.Item>}\n      <Menu.Item>\n        <Button\n          onClick={props.logOut}\n        >Log out</Button>\n      </Menu.Item>\n    </Menu.Menu>\n  </Menu>\n)","// export const API_HOST = `http://localhost:3001/api/v1`;\nexport const API_HOST = `https://enigmatic-fortress-89780.herokuapp.com/api/v1`;\n\nexport const REQUEST_HEADERS = {\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n};\n\nexport const AUTH_HEADERS = { \n  headers: { \n    ...REQUEST_HEADERS.headers, \n    'Authorization': `Bearer ${localStorage.token}` \n  }\n};","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  const fetchPromise = fetch(`${API_HOST}/projects`, AUTH_HEADERS)\n  const parsedFetchPromise = fetchPromise.then(res => res.json())\n  return parsedFetchPromise;\n}\n\nexport const show = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, AUTH_HEADERS)\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const create = (body) => {\n  return fetch(`${API_HOST}/projects`, {\n    ...AUTH_HEADERS, \n    method: 'POST',\n    body: JSON.stringify(body)\n  }).then(res => res.json())\n}\n\nexport const destroy = (projectId) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS\n  })\n}\n\nexport const update = (projectId, projectName, projectStartDate) => {\n  return fetch(`${API_HOST}/projects/${projectId}`, {\n    method: 'PUT',\n    body: JSON.stringify({\n      name: projectName,\n      // start_date: projectStartDate\n    }),\n    ...AUTH_HEADERS\n  }).then(res => res.json())\n}\n\n// export const AUTH_HEADERS = \n// {\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json',\n//     'Authorization': `Bearer ${localStorage.token}`\n//   }\n// };\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const create = (userTask) => {\n  return fetch(`${API_HOST}/user_tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify(userTask)\n  })\n  .then(res => res.json())\n}\n\nexport const destroy = (userTaskId) => {\n  return fetch(`${API_HOST}/user_tasks/${userTaskId}`, {\n    method: 'DELETE',\n    ...AUTH_HEADERS})\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\n\nexport const create = (userId, taskId) => {\n\n  // Example object destructuring. \n  // If I pass an object {user_id: X, task_id: Y} as an argument when this function is called, \n  // I can put {user_id, task_id} in the parameters here, and I will end up with \n  // two variables with those key names + values already assigned\n  // const {user_id, task_id} = body \n\n  return fetch(`${API_HOST}/flags`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({user_id: userId, task_id: taskId})\n  })\n}\n\nexport const destroy = (flagId) => {\n  return fetch(`${API_HOST}/flags/${flagId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}\n","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/functions`, AUTH_HEADERS)\n  .then(res => res.json())\n}","import {API_HOST, AUTH_HEADERS} from './helper.js'\n\nexport const index = () => {\n  return fetch(`${API_HOST}/users/`, AUTH_HEADERS)\n    .then(res => res.json())\n}\n\nexport const login = ({email, password}) => {\n  return fetch(`${API_HOST}/login`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const signup = ({first_name, last_name, email, password}) => {\n  return fetch(`${API_HOST}/signup`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password\n    })\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}\n\nexport const profile = () => {\n  return fetch(`${API_HOST}/profile`, AUTH_HEADERS)\n  .then(res => res.json())\n}\n\nexport const available_projects = () => {\n  return fetch (`${API_HOST}/available_projects`, AUTH_HEADERS)\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\n  ","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (text, projectId) => {\n  return fetch(`${API_HOST}/tasks`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      text: text,\n      project_id: projectId\n    })\n  })\n  .then(res => res.json())\n}\n\nexport const update = (taskId, taskName, projectId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'PUT',\n    body: JSON.stringify({\n    text: taskName,\n    projectId: projectId\n    })\n  })\n}\n\nexport const destroy = (taskId) => {\n  return fetch(`${API_HOST}/tasks/${taskId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE'\n  })\n}","import {API_HOST, AUTH_HEADERS} from './helper'\n\nexport const create = (memberId, projectId) => {\n  return fetch(`${API_HOST}/memberships`, {\n    ...AUTH_HEADERS,\n    method: 'POST',\n    body: JSON.stringify({\n      user_id: memberId,\n      project_id: projectId\n    })\n  })\n  .then(async (res) => {\n    const data = await res.json();\n    if (res.ok) {\n      return data\n    } else {\n      return Promise.reject(data)\n    }\n  })\n}\n\nexport const destroy = (membershipId) => {\n  return fetch(`${API_HOST}/memberships/${membershipId}`, {\n    ...AUTH_HEADERS,\n    method: 'DELETE',\n  })\n    .then(async (res) => {\n      const data = await res.json();\n      if (res.ok) {\n        return data\n      } else {\n        return Promise.reject(data)\n      }\n    })\n}","// import all (*) the methods from all Model.js files; then export them all as one object (default) so that whenever you import you get all of them\n\nimport * as Project from './Project.js'\nimport * as UserTask from './UserTask.js'\nimport * as Flag from './Flag.js'\nimport * as Function from './Function.js'\nimport * as User from './User.js'\nimport * as Task from './Task.js'\nimport * as Membership from './Membership'\n\nexport default {Project, UserTask, Flag, Function, User, Task, Membership}","import React from \"react\";\nimport { Grid, Icon, Label, Table, Button, Form, Dropdown, Message, Header, Container, TableBody, Popup } from 'semantic-ui-react';\nimport TaskModal from './TaskModal';\nimport EditTaskModal from './EditTaskModal';\n// import DeleteProjectWarningModal from './DeleteProjectWarningModal'\nimport EditProjectModal from './EditProjectModal';\nimport Nav from './Nav'\nimport { Link } from 'react-router-dom';\nimport API from '../api';\n\nexport default class RACITable extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      allUsers: [],\n      newMembersToAdd: [],\n      showAddUsers: false,\n      hideTopMessage: true,\n      topMessage: {\n        header: '',\n        message: '',\n      },\n      projectId: '',\n      projectName: '',\n      projectNameForUpdating: '',\n      functions: [],\n      tasks: [],\n      creator: {},\n      members: [],\n      projectToEditMembers: [],\n      selectedTask: {\n        taskId: null,\n        taskText: null,\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskNameForUpdating: '',\n      taskToCreateUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      },\n      taskToEditUserIds: {\n        responsible: [],\n        accountable: [],\n        consulted: [],\n        informed: []\n      }\n    }\n  }\n\n  putProjectDataInState = () => {\n    this.props.toggleLoader(true)\n\n    const projectId = this.props.match.params.id\n\n    API.Function.index()\n      .then(data => this.setState({\n        functions: data.data\n      }))\n\n    API.Project.show(projectId)\n      .then(data => {this.setState({\n        projectId: data.data.id,\n        projectName: data.data.attributes.name,\n        projectNameForUpdating: data.data.attributes.name,\n        tasks: data.data.attributes.tasks,\n        creator: data.data.attributes.creator,\n        members: data.data.attributes.members,\n        })\n        this.props.toggleLoader(false)\n      })\n      .catch(() => this.props.history.push('/projects'))\n  }\n\n  putAllUsersDataInState = () => {\n    API.User.index()\n    .then(data => this.setState({allUsers: data.data}))\n  }\n\n  createTeamMemberOptions = () => {\n    return this.state.members.map(member => ({\n          key: member.id,\n          text: member.first_name,\n          value: member.id\n        }))\n  }\n\n  mapAllUsersToDropdown = () => {\n    return this.state.allUsers\n      // .filter(user => (!this.state.members.map(member => member.id).includes(parseInt(user.id))))\n      .map(user => ({\n        key: parseInt(user.id),\n        text: user.attributes.full_name,\n        value: parseInt(user.id)\n      }))\n  }\n\n  createDropdownForEditProjectModal = () => {\n    const defaultValues = this.state.members ? this.state.members.map((member) => member.id) : []\n    \n    return (\n      <Dropdown\n        placeholder='Add team members'\n        fluid\n        multiple\n        selection\n        options={this.mapAllUsersToDropdown()}\n        defaultValue={defaultValues}\n        onChange={(event, data) => { this.handleDropdownChangeForEditProjectModal(data) }}\n\n      />\n    )\n  }\n\n  createDropdownsForEditTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        const defaultValues = task ? task[functionName].map(userTask => userTask.user_id) : [];\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3,4].includes(parseInt(raciFunction.id))}\n              defaultValue={[3,4].includes(parseInt(raciFunction.id)) ? defaultValues : defaultValues[0]}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => {this.handleDropdownChangeForEditTaskModal(data, raciFunction)}}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  createDropdownsForCreateTaskModal = (task) => {\n\n    return (\n      this.state.functions.map((raciFunction, index) => {\n        const functionName = raciFunction.attributes.name.toLowerCase()\n        return (\n          <Form.Field\n            key={index}>\n            <label>{raciFunction.attributes.name}</label>\n            <Dropdown\n              placeholder='Select team member'\n              fluid\n              multiple={[3, 4].includes(parseInt(raciFunction.id))}\n              selection\n              options={this.createTeamMemberOptions()}\n              onChange={(event, data) => { this.handleDropdownChangeForCreateModal(data, raciFunction) }}\n            />\n          </Form.Field>\n        )\n      })\n    )\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({\n      key: user.id,\n      text: user.attributes.full_name,\n      value: user.id\n    }))\n  }\n\n  handleDropdownChangeForCreateModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToCreateUserIds: {\n          ...this.state.taskToCreateUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditTaskModal = (data, raciFunction) => {\n\n    const raciFunctionId = parseInt(raciFunction.id)\n\n    if (raciFunctionId === 1){\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          responsible: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 2) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          accountable: [data.value]\n        }\n      })\n    }\n    else if (raciFunctionId === 3) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          consulted: data.value\n        }\n      })\n    }\n    else if (raciFunctionId === 4) {\n      this.setState({\n        taskToEditUserIds: {\n          ...this.state.taskToEditUserIds,\n          informed: data.value\n        }\n      })\n    }\n  }\n\n  handleDropdownChangeForEditProjectModal = (data) => {\n      this.setState({\n        projectToEditMembers: data.value\n      })\n  }\n\n\n  handleTextFieldChange = event => {\n    this.setState({\n      // selectedTask: {\n      //   ...this.state.selectedTask,\n      // task_name: event.target.value}\n      taskNameForUpdating: event.target.value\n    })\n  }\n\n  createUserTasks = (dataFromTaskCreation) => {\n\n    const taskId = parseInt(dataFromTaskCreation.data.id)\n\n    const userTasksToCreate = []\n\n    const userIdsForUserTasksToCreate = this.state.taskToCreateUserIds\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 1,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n      // Send the now-complete userTasks to the server for creation\n      \n    userTasksToCreate.forEach((userTask) => {\n        API.UserTask.create(userTask)\n          .then(this.putProjectDataInState)\n    })\n\n      this.setState({\n        userTasksToCreate: []\n      })\n}\n\n  handleSubmitOnTaskModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const text = this.state.taskNameForUpdating\n    API.Task.create(text, projectId)\n      .then(data => this.createUserTasks(data))\n  }\n\n  handleSubmitOnEditTaskModal = (event, task) => {\n    event.preventDefault()\n\n    const projectId = this.state.projectId\n\n    const userIdsForUserTasksToCreate = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const selectedTaskUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    const userTaskIdsForUserTasksToDelete = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n    \n    // Assign data from state to our little variable here, for convenience\n\n    const taskToEditUserIds = this.state.taskToEditUserIds\n\n    // Parse data out of selectedTask (i.e. the user_ids for user_tasks already in the database) \n    // into the same shape as taskToEditUserIds\n\n    selectedTaskUserIds.responsible = this.state.selectedTask.responsible.map(user_task => {\n      return(user_task.user_id)\n    })\n\n    selectedTaskUserIds.accountable = this.state.selectedTask.accountable.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.consulted = this.state.selectedTask.consulted.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    selectedTaskUserIds.informed = this.state.selectedTask.informed.map(user_task => {\n      return (user_task.user_id)\n    })\n\n    // For each function, do a diff to find the user_ids which have been removed \n    // from selectedTask (i.e. those we need to delete)\n\n    userIdsForUserTasksToDelete.responsible = selectedTaskUserIds.responsible.filter(n => !taskToEditUserIds.responsible.includes(n))\n    userIdsForUserTasksToDelete.accountable = selectedTaskUserIds.accountable.filter(n => !taskToEditUserIds.accountable.includes(n))\n    userIdsForUserTasksToDelete.consulted = selectedTaskUserIds.consulted.filter(n => !taskToEditUserIds.consulted.includes(n))\n    userIdsForUserTasksToDelete.informed = selectedTaskUserIds.informed.filter(n => !taskToEditUserIds.informed.includes(n))\n\n    // For each function, do a diff to find the user_ids which have been added \n    // to selectedTask (i.e. those we need to create)\n    \n    userIdsForUserTasksToCreate.responsible = taskToEditUserIds.responsible.filter(n => !selectedTaskUserIds.responsible.includes(n))\n    userIdsForUserTasksToCreate.accountable = taskToEditUserIds.accountable.filter(n => !selectedTaskUserIds.accountable.includes(n))\n    userIdsForUserTasksToCreate.consulted = taskToEditUserIds.consulted.filter(n => !selectedTaskUserIds.consulted.includes(n))\n    userIdsForUserTasksToCreate.informed = taskToEditUserIds.informed.filter(n => !selectedTaskUserIds.informed.includes(n))\n  \n    // Build array of user task IDs which need to be deleted\n\n    userTaskIdsForUserTasksToDelete.responsible = this.state.selectedTask.responsible.map(user_task => {\n      if (userIdsForUserTasksToDelete.responsible.includes(user_task.user_id)) {\n          return (user_task.user_task_id)\n        }\n      })\n\n    userTaskIdsForUserTasksToDelete.accountable = this.state.selectedTask.accountable.map(user_task => {\n      if (userIdsForUserTasksToDelete.accountable.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.consulted = this.state.selectedTask.consulted.map(user_task => {\n      if (userIdsForUserTasksToDelete.consulted.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    userTaskIdsForUserTasksToDelete.informed = this.state.selectedTask.informed.map(user_task => {\n      if (userIdsForUserTasksToDelete.informed.includes(user_task.user_id)) {\n        return (user_task.user_task_id)\n      }\n    })\n\n    const getKeys = Object.values(userTaskIdsForUserTasksToDelete)\n    const deleteThesePuppies = [].concat.apply([], getKeys)\n    const deleteThesePuppiesFiltered = deleteThesePuppies.filter((itemInArray) => {\n      return itemInArray !== undefined\n    })\n\n    // Build user tasks to be created\n\n    const taskId = task.id\n    const userTasksToCreate = []\n\n    userIdsForUserTasksToCreate.responsible.forEach(userId => {\n\n      userTasksToCreate.push(\n            {\n              task_id: taskId,\n              function_id: 1,\n              user_id: userId\n            }\n        )\n    })\n\n    userIdsForUserTasksToCreate.accountable.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 2,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.consulted.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 3,\n          user_id: userId\n        }\n      )\n    })\n\n    userIdsForUserTasksToCreate.informed.forEach(userId => {\n\n      userTasksToCreate.push(\n        {\n          task_id: taskId,\n          function_id: 4,\n          user_id: userId\n        }\n      )\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Delete user tasks\n\n    deleteThesePuppiesFiltered.forEach((userTaskId) => {\n        apiPromises.push(API.UserTask.destroy(userTaskId))\n    })\n\n    // Send user tasks to the server for creation!\n\n      userTasksToCreate.forEach((userTask) => {\n          apiPromises.push(API.UserTask.create(userTask))\n      })  \n\n      // Update the task text\n\n      if (this.state.taskNameForUpdating !== this.state.selectedTask.taskName) {\n        if (this.state.taskNameForUpdating !== '') {\n          apiPromises.push(API.Task.update(taskId, this.state.taskNameForUpdating, projectId))\n        } else {\n          // do error thing here\n        }\n      }\n\n      Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n\n  handleSubmitOnEditProjectModal = (event) => {\n    event.preventDefault()\n    const projectId = this.state.projectId\n    const existingMemberIds = this.state.members.map(member => member.id)\n    const projectToEditUserIds = this.state.projectToEditMembers\n    const membersToDeleteIds = []\n    const membersToCreateIds = []\n    const membershipIdsForMembershipsToDelete = []\n\n    // Check if there are any IDs in projectToEditUserIds which are not in existingMembers, \n    // and add them to membersToCreate\n    \n    projectToEditUserIds.forEach(id => {\n      if(existingMemberIds.includes(id)) {\n        return\n      } else {\n        membersToCreateIds.push(id) \n      }\n    })\n\n    // Check if there are any IDs which have been removed, when compared with existing Members\n    // and add them to membersToDelete\n    \n    existingMemberIds.forEach(id => {\n      if (projectToEditUserIds.includes(id)) {\n        return\n      } else {\n        membersToDeleteIds.push(id) \n      }\n    })\n\n    // Create an empty array for all the returned promises that are about to be made\n\n    const apiPromises = []\n\n    // Create Memberships\n    membersToCreateIds.forEach(memberId => {\n     apiPromises.push(API.Membership.create(memberId, projectId))\n    })\n\n    // Delete Memberships\n\n    this.state.members.forEach(member => {\n      if(membersToDeleteIds.includes(member.id)) {\n        membershipIdsForMembershipsToDelete.push(member.membership_id)\n      }\n    })\n\n    membershipIdsForMembershipsToDelete.forEach(membershipId => {\n      apiPromises.push(API.Membership.destroy(membershipId))\n    })\n\n    // Update the text on the project, if it has changed\n\n    if (this.state.projectName !== this.state.projectNameForUpdating) {\n      if (this.state.projectNameForUpdating !== '') {\n        apiPromises.push(API.Project.update(projectId, this.state.projectNameForUpdating))\n      } else {\n        // do error thing here\n      }\n    }\n\n    Promise.allSettled(apiPromises).then(this.putProjectDataInState)\n\n  }\n      \n  putSelectedProjectMembersDataInState = () => {\n    let membersToShoveInState = []\n    this.state.members.forEach(member => {\n      membersToShoveInState = [...membersToShoveInState, member.id]\n      })\n    this.setState({\n      projectToEditMembers: membersToShoveInState\n    })\n  }\n\n  putSelectedTaskDataInState = (id) => {\n    let taskToPutInState = null\n    let taskName = null\n\n    const taskToEditUserIds = {\n      responsible: [],\n      accountable: [],\n      consulted: [],\n      informed: []\n    }\n\n    this.state.tasks.forEach(task => {\n      if(task.id === id) {\n        // Get the task / user task data to put into state\n\n        taskToPutInState = task\n        taskName = task.task_name\n\n        // Get an array of IDs for the user tasks, organized by function\n\n        taskToEditUserIds.responsible = task.responsible.map(user_task => user_task.user_id)\n        taskToEditUserIds.accountable = task.accountable.map(user_task => user_task.user_id)\n        taskToEditUserIds.consulted = task.consulted.map(user_task => user_task.user_id)\n        taskToEditUserIds.informed = task.informed.map(user_task => user_task.user_id)\n      }  \n    })\n\n    this.setState({\n      selectedTask: taskToPutInState,\n      taskNameForUpdating: taskName,\n      taskToEditUserIds: taskToEditUserIds\n    })\n  }\n\n  handleDelete = (task) => {\n    API.Task.destroy(task.id)\n    .then(this.putProjectDataInState)\n\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({newMembersToAdd: data.value})\n  }\n\n  handleFlagging = (task) => {\n    let flagToDeleteId = null\n    const flagUserIds = task.flags.map(flag => flag.user_id)\n\n    if (flagUserIds.includes(this.props.userId)) {\n      task.flags.forEach(flag => {\n        if(flag.user_id === this.props.userId) {\n          API.Flag.destroy(flag.flag_id)\n          .then(this.putProjectDataInState)\n        }\n      })\n    }\n    else {\n      API.Flag.create(this.props.userId, task.id)\n        .then(this.putProjectDataInState)\n    }\n  }\n\n  createNewMembers = () => {\n    this.state.newMembersToAdd.forEach((memberId) => {\n\n      API.Membership.create(memberId, this.state.projectId)  \n        .then(this.putProjectDataInState)\n        .catch((data) => {\n          this.setState({\n            topMessage: {\n              header: 'Error',\n              message: data.errors\n            },\n            hideTopMessage: false\n          })\n          setTimeout(() => this.setState({ \n            hideTopMessage: true, \n            topMessage: { header: ``, message: '' } }), 2000)\n        })\n    })\n    this.setState({ \n      showAddUsers: false,\n      // newMembersToAdd: [] \n    })\n  }\n\n  deleteUserTask = (user_task) => {\n    API.UserTask.destroy(user_task.user_task_id)\n      .then(this.putProjectDataInState)\n      // .then(() => {\n      //   this.setState({ hideTopMessage: false, topMessage: { header: `successfully deleted ${user_task.full_name} from task`, message: 'woooh!'}})\n      //   setTimeout(() => this.setState({ hideTopMessage: true, topMessage: { header: ``, message: '' } }), 1000)\n      // })\n  }\n\n  deleteProject = (projectId) => {\n    API.Project.destroy(projectId)\n    .then(this.redirectToProjectsIndexPage)\n  }\n\n  redirectToProjectsIndexPage = () => {\n    this.props.history.push(`/projects`)\n  }\n\n  handleProjectNameChange = (event) => {\n    const projectName = event.target.value;\n    this.setState({ projectNameForUpdating: projectName })\n  }\n\n  componentDidMount() {\n      if (localStorage.token) {\n        this.props.authenticateMe()\n        this.putAllUsersDataInState()\n        this.putProjectDataInState()\n      } else {\n        this.props.history.push('/login')\n      }\n  }\n\n    render() {\n      return(\n        <Container>\n          <Message hidden={this.state.hideTopMessage}>\n            <Message.Header>{this.state.topMessage.header}</Message.Header>\n            <p>\n              {this.state.topMessage.message}\n            </p>\n          </Message>\n          <Nav logOut={this.props.logOut} onBack={this.redirectToProjectsIndexPage} backText={'Back to Projects'} userFullName={this.props.userFullName}/>\n          <Header as=\"h1\">{this.state.projectName}\n            <EditProjectModal \n              projectId={this.state.projectId}\n              populateMembersToEdit={this.putSelectedProjectMembersDataInState}\n              onProjectNameChange={this.handleProjectNameChange}\n              projectName={this.state.projectNameForUpdating}\n              createDropdown={this.createDropdownForEditProjectModal()}\n              handleDropdownChange={this.handleDropdownChangeForEditProjectModal}\n              onSubmit={this.handleSubmitOnEditProjectModal}\n              deleteProject={this.deleteProject}\n            />\n          </Header>\n          \n          <Grid>\n          { this.state.showAddUsers ?\n            (\n              <Grid.Column width={8}>\n                  <div>\n                    <Dropdown placeholder='Add Users' onChange={this.handleNewMemberSelection} fluid multiple selection options={this.mapAllUsersToDropdown()} />\n                    <Button\n                      onClick={this.createNewMembers}\n                    >Add users</Button>\n                  </div>\n              </Grid.Column>\n            ) :(\n              <Grid.Column width={8}>\n                <Label.Group circular>\n                    {this.state.members.map((member, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6}} content={member.full_name} trigger={<Label key={index}>{member.initials}</Label>}></Popup>)}\n                </Label.Group>\n              </Grid.Column>\n            )\n          }\n\n            {/* <Popup content='Add users to your feed' trigger={<Button icon='add' />} /> */}\n\n\n\n          </Grid>\n          \n       \n          <Table celled> \n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell width='four'>Task</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Responsible</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Accountable</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Consulted</Table.HeaderCell>\n                <Table.HeaderCell width='two'>Informed</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {this.state.tasks.map((task, index) => {\n              return (<Table.Row \n                error={task.flags.length > 0}\n                key={index}>\n                <Table.Cell>\n                  <Grid>\n                  <Grid.Column width={11}>\n                  {task.task_name}\n                  <Label.Group circular>\n                    {task.flags.map((flag, index) => <Popup size='tiny' position='bottom center' style={{ padding: 6 }} content={flag.user_full_name} trigger={<Label key={index} color=\"red\">{flag.user_initials}</Label>}></Popup>)}\n                  </Label.Group>\n                    </Grid.Column>\n                    <Grid.Column width={5}>\n                      <EditTaskModal\n                        task={task}\n                        projectId={this.state.projectId}\n                        createDropdowns={() => this.createDropdownsForEditTaskModal(task)}\n                        putSelectedTaskDataInState={this.putSelectedTaskDataInState}\n                        taskName={this.state.taskNameForUpdating}\n                        handleTextFieldChange={this.handleTextFieldChange}\n                        handleDropdownChange={this.handleDropdownChangeForEditTaskModal}\n                        handleSubmit={this.handleSubmitOnEditTaskModal}\n                        handleDelete={this.handleDelete}\n                      />\n                      <Button\n                        icon\n                        onClick={() => { this.handleFlagging(task) }}\n                        inverted={!(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? true : false)}\n                        style={(task.flags.map(flag => flag.user_id).includes(this.props.userId) ? { backgroundColor: 'white' } : null)}\n                        floated=\"right\">\n                        <Icon\n                          color={task.flags.length > 0 ? 'red' : 'grey'}\n                          name={task.flags.length > 0 ? 'flag' : 'flag outline'}></Icon>\n                      </Button>\n                    </Grid.Column>\n                  </Grid>\n                </Table.Cell>\n                <Table.Cell>\n                  {\n                    task.responsible.map((user_task, i) => {\n                      return (<Label \n                                key={i}\n                                  style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                  {user_task.user_first_name}\n                                  <Icon\n                                    onClick={() => this.deleteUserTask(user_task)}\n                                    name='delete' />\n                                </Label>)\n                    })\n                      }\n                </Table.Cell>\n                <Table.Cell>{\n                    task.accountable.map((user_task, i) => {\n                      return (<Label\n                                key={i}\n                                style={{ marginTop: 2, marginBottom: 2 }}\n                                color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                                {user_task.user_first_name}\n                                <Icon\n                                  onClick={() => this.deleteUserTask(user_task)}\n                                  name='delete' />\n                              </Label>)\n                  } )}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.consulted.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n                <Table.Cell>{\n                  task.informed.map((user_task, i) => {\n                    return (<Label\n                      key={i}\n                      style={{ marginTop: 2, marginBottom: 2 }}\n                      color={user_task.user_id === this.props.userId ? 'grey' : false} >\n                      {user_task.user_first_name}\n                      <Icon\n                        onClick={() => this.deleteUserTask(user_task)}\n                        name='delete' />\n                    </Label>)\n                  })}\n                </Table.Cell>\n              </Table.Row>)\n            })}  \n            </Table.Body>\n            <Table.Footer fullWidth>\n              <Table.Row>\n                <Table.HeaderCell>\n                  <TaskModal\n                    projectId={this.state.projectId}\n                    raciFunctions={this.state.functions}\n                    createDropdowns={this.createDropdownsForCreateTaskModal}\n                    taskName={this.state.selectedTask.task_name}\n                    handleTextFieldChange={this.handleTextFieldChange}\n                    handleDropdownChange={this.handleDropdownChangeForCreateModal}\n                    onTriggerButtonClick={() => {\n                      this.setState({\n                        selectedTask: {\n                          taskId: null,\n                          task_name: null,\n                          responsible: [],\n                          accountable: [],\n                          consulted: [],\n                          informed: []\n                        }\n                      })\n                    }}\n                    handleSubmit={this.handleSubmitOnTaskModal} />\n                </Table.HeaderCell>\n                <Table.HeaderCell colSpan='4'>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Footer>\n          </Table>\n        </Container>\n      )\n    }\n\n}\n\n\n// const TestComponent = (props) => {\n//   props.fab\n//   return (\n//     <select onChange={(event, data) => props.onChange(event, data, 2)}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//       {/* <option value={2}>hi</option>\n//       <option value={3}>yo</option> */}\n//     </select>\n//   )\n// }\n\n// <TestComponent onChange={(hi, fab, gu) => {alert(gu)}} fab='poop' options={[{text: 'hi', value: 2}, {text: 'yo', value: 3}]}/>\n\n\n{/* <select id=\"poop\"></select>\n\ndocument.querySelector(\"#poop\").addEventListener(\"change\", (event,poop, gu,sup, pickles) => {\n\n})\n\nmyFunciton(event) */}\n\n\n\n// const DropDown = (props) => {\n//   const handleOnChange = (e, data) => {\n//     props.onDropChange(`hello! ${data.value}`)\n//   }\n//   return (\n//     <select onChange={handleOnChange}>\n//       {props.options.map(option => <option value={option.value}>{option.text}</option>)}\n//     </select>\n//   )\n// }\n\n\n// <DropDown onDropChange={(alertMessage) => alert(alertMessage)} options={[{ text: 'hi', value: 2 }, { text: 'yo', value: 3 }]} />\n\n\n// Everytime you change the Dropdown, \n// there should be an alert which alerts \n// the third argument of your custom callback for onChange\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport { Button, Form, Card, Container, Header, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport API from '../api'\n\nexport default class Login extends React.Component {\n  \n  constructor() {\n    super()\n\n    this.state = {\n      loginInfo: {\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  loginInfoIsFull = () => {\n\n    return (this.state.loginInfo.password.length > 1 ? true : false)\n  }\n \n  handleSubmit = (e) => {\n    e.preventDefault()\n    API.User.login(this.state.loginInfo)\n    .then(data => {\n      if(data.token) {\n      localStorage.token = data.token\n      this.props.history.push('/projects')\n      } \n    })\n    .catch((data) => {\n      this.setState({\n        errors: data.errors[0]\n        })\n      setTimeout(() => this.setState({\n        errors: null,\n       }), 2000)\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n        loginInfo: {\n        ...prevState.loginInfo,\n        [e.target.name]: e.target.value\n        }\n    }))\n  }\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n    if (localStorage.token) {\n      this.props.history.push('/projects')\n    }\n  }\n\n\n\n  render(){\n    return(\n      <Container style={{height: '100vh', marginTop: '1%'}}textAlign=\"center\">\n        <div style={{\n          position: 'relative',\n          marginTop: '2em',\n          marginBottom: '3em'}}>\n          <Button \n            as='h1'\n            onClick={() => this.props.history.push('/')}\n            style={{\n              margin: '0 auto',\n              width: '80px',\n              height: '30px',\n              lineHeight: '0.5em',\n              fontSize: '1em',\n              borderRadius: '4px',\n              backgroundColor: '#2185d0',\n              color: '#fff'\n            }}\n            >RACI</Button>\n        </div>\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Login</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange} />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange} />\n              <Message\n                error\n                header={'Error'}\n                content={this.state.errors}  \n                ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.loginInfo.email) && this.loginInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Log in\n            </Button>\n          </Form>\n          <br />\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </Card>\n      </Container>\n    )\n  }\n}","// do componentDidMount wiht same fetch request etc as login but post to signup not login\n\nimport React from 'react'\nimport { Button, Form, Container, Card, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom'\nimport API from '../api'\n\nexport default class SignUp extends React.Component {\n\n  constructor() {\n    super()\n\n    this.state = {\n      signupInfo: {\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: ''\n      },\n      errors: null\n    }\n  }\n\n  isValidEmailAddress = (address) => {\n    return !!address.match(/.+@.+/);\n  }\n\n  signupInfoIsFull = () => {\n   return (this.state.signupInfo.first_name.length > 1 && this.state.signupInfo.last_name.length > 1 && this.state.signupInfo.password.length > 1 ? true : false)\n  }\n\n  handleChange = (e) => {\n    this.setState(prevState => ({\n      signupInfo: {\n        ...prevState.signupInfo,\n        [e.target.name]: e.target.value\n      }\n    }))\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n      API.User.signup(this.state.signupInfo)\n      .then(data => {\n        if(data.token) {\n          localStorage.token = data.token\n          this.props.history.push('/projects')\n        }\n      })\n      .catch((data) => {\n        if(data) {\n          this.setState({\n            errors: data.errors[0]\n          })\n          setTimeout(() => {\n            this.setState({\n              errors: null\n            })}, 2000)\n        }\n        else {\n          this.setState({\n            errors: 'There was a problem creating your account. Please try again'\n          })\n        }\n      })\n  }\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n  }\n  \n  render () {\n    \n    return (\n      <Container style={{height: '100vh', marginTop: '1%'}} textAlign=\"center\">\n        <div style={{\n          position: 'relative',\n          marginTop: '2em',\n          marginBottom: '3em'\n        }}>\n          <Button\n            as='h1'\n            onClick={() => this.props.history.push('/')}\n            style={{\n              margin: '0 auto',\n              width: '80px',\n              height: '30px',\n              lineHeight: '0.5em',\n              fontSize: '1em',\n              borderRadius: '4px',\n              backgroundColor: '#2185d0',\n              color: '#fff'\n            }}\n          >RACI</Button>\n        </div>\n        <Card centered style={{ paddingTop: 50, paddingBottom: 50, paddingLeft: 20, paddingRight: 20}}>\n          <h2>Sign up</h2>\n          <Form error={this.state.errors}>\n            <Form.Input\n              placeholder='First name'\n              type='text'\n              name='first_name'\n              value={this.state.first_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Last name'\n              type='text'\n              name='last_name'\n              value={this.state.last_name}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Email'\n              type='email'\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <br />\n            <Form.Input\n              placeholder='Password'\n              type='password'\n              name='password'\n              value={this.state.password}\n              onChange={this.handleChange}\n            />\n            <Message \n              error\n              header={'Error'}\n              content={this.state.errors}\n            ></Message>\n            <br />\n            <br />\n            <Button\n              onClick={this.handleSubmit}\n              color={this.isValidEmailAddress(this.state.signupInfo.email) && this.signupInfoIsFull() ? 'blue' : false}\n              type='submit'>\n              Create account\n            </Button>\n          </Form>\n          <br />\n          Already have an account?  <Link to=\"/login\">Login</Link>\n        </Card>\n      </Container>)\n  }\n}","import React from 'react'\nimport { Button, Header, Modal, Icon, Form, Dropdown } from 'semantic-ui-react'\n\n\nexport default (props) => {\n  const [open, setOpen] = React.useState(false)\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={props.trigger}\n    >\n      <Modal.Header>Create Project</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          {/* <p>\n            Placeholder in case I want to write instructions\n          </p> */}\n          <Form>\n            <Form.Field>\n              <label>Project name</label>\n              <Form.Input\n                error={props.projectNameHasError ? { content: 'Please enter your first name', pointing: 'below' } : null}\n                onChange={props.onProjectNameChange}\n                value={props.projectName}\n                placeholder='Describe the project'\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Team members</label>\n              <Dropdown \n              placeholder='Add team members' \n              onChange={props.onDropdownChange} \n              fluid \n              multiple \n              selection \n              options={props.dropdownOptions} />\n            </Form.Field>\n          </Form>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button \n          onClick={\n            () => {\n              setOpen(false)\n              props.onCancel()\n            }}>\n          Cancel\n        </Button>\n        <Button\n          type='submit'\n          onClick={(event) => {\n            setOpen(false)\n            props.onSubmit(event)\n          }}\n          positive>\n          Create project\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  )\n}\n","import React from 'react';\nimport { Card, Header, Icon, Container} from 'semantic-ui-react';\nimport CreateProjectModal from './CreateProjectModal';\nimport Nav from './Nav'\nimport API from '../api';\n\nexport default class ProjectsList extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      projects: [],\n      allUsers: [],\n      projectName: '',\n      newMembersToAdd: [],\n      newProjectNameHasError: false,\n    }\n  }\n\n  putAllUsersDataInState = () => {\n    return API.User.index()\n    .then(data => this.setState({ allUsers: data.data }))\n  }\n\n  putProjectsDataInState = () => {\n    this.props.toggleLoader(true)\n    API.User.available_projects()\n    .then(data => {\n      this.props.toggleLoader(false)\n      this.setState({\n        projects: data.data\n      })\n    }\n    )\n  }\n\n  handleNewMemberSelection = (event, data) => {\n    this.setState({ newMembersToAdd: data.value })\n  }\n\n  handleProjectNameChange = (event) => {\n\n    const projectName = event.target.value;\n    // if (projectName.length < 2) {\n    //   this.setState({newProjectNameHasError: true})\n    // } else {\n    //   this.setState({ newProjectNameHasError: false })\n    // }\n    this.setState({ projectName: projectName})\n  }\n\n  mapAllUsersToDropdownOptions = () => {\n    return this.state.allUsers.map(user => ({ \n      key: user.id, \n      text: user.attributes.full_name, \n      value: user.id }))\n  }\n\n  clearProjectNameField = () => {\n    this.setState({projectName: \"\"})\n  }\n\n  createNewMembers = (projectId) => {\n    this.state.newMembersToAdd.forEach((memberId, index) => {\n      API.Membership.create(memberId, projectId)\n    })\n  }\n\n  createNewProject = () => {\n    API.Project.create({name: this.state.projectName, creator_id: this.props.userId})\n      .then(data => {\n        const projectId = data.data.id\n        this.createNewMembers(projectId)\n      })\n      .then(this.putProjectsDataInState)\n  }\n\n  createProjectCards = () => {\n    return this.state.projects.map((project, index) => {\n\n      return (\n        <Card\n          key={index}\n          header={project.attributes.name}\n          style={{ height: '15vh' }}\n          // description={''}\n          // meta={''}\n          onClick={() => {\n            const projectId = project.id\n            this.redirectToProjectPage(projectId)}\n           }>\n        </Card>\n      )\n    })\n  }\n\n  redirectToProjectPage = (projectId) => {\n    this.props.history.push(`/projects/${projectId}`)\n  }\n\n  componentDidMount() {\n    if (localStorage.token) {\n      this.props.authenticateMe()\n      this.putProjectsDataInState()\n      this.putAllUsersDataInState()\n    } else {\n      this.props.history.push('/login')\n    }\n  }\n\n \n  createCardGroup = () => {\n    return (\n      <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n      {this.createProjectCards()}\n        <CreateProjectModal\n          projectNameHasError={this.state.newProjectNameHasError}\n          trigger={<Card color=\"blue\" header={<span><Icon name=\"plus\" color=\"blue\" /><Header color=\"blue\">Add project</Header></span>}/>}\n          onDropdownChange={this.handleNewMemberSelection}\n          dropdownOptions={this.mapAllUsersToDropdownOptions()}\n          onProjectNameChange={this.handleProjectNameChange}\n          projectName={this.state.projectName}\n          onSubmit={this.createNewProject}\n          onCancel={this.clearProjectNameField}\n        />\n      </Card.Group>\n    )\n  }\n\n  render() {\n    return (\n      <Container>\n        <Nav logOut={this.props.logOut} userFullName={this.props.userFullName}/>\n        {this.createCardGroup()}\n      </Container>\n    )\n  }\n}\n","import '../arrow.css'\n\nconst Arrow = ({direction, onClick, color, slideshowArrow }) => {\n\n  return(\n    <>\n      <div className={` ${slideshowArrow ? `slideshow-arrow-${direction}` : ''} ${direction} ${color}-arrow nav-arrow`} onTouchStart={onClick} onClick={onClick}>\n        <div className={`${direction} ${color}-arrow nav-arrow-left-tip`}></div>\n        <div className={`${direction} ${color}-arrow nav-arrow-right-tip`}></div>\n      </div>\n    </>\n  )\n}\n\nexport default Arrow","import '../photo-slideshow.css'\nimport { useState } from 'react'\nimport Arrow from './Arrow'\n\nconst PhotoSlideshow = ({ dataAos, dataAosDuration, photos, arrowColor }) => {\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0)\n\n  const altText = photos[currentPhotoIndex]\n    .split(`-${currentPhotoIndex + 1}-`)[1]\n    .split('.')[0]\n\n  const changePhoto = direction => {\n    const photosLastIndex = photos.length -1\n    if(direction === 'left') {\n      if (currentPhotoIndex === 0) {\n        setCurrentPhotoIndex(photosLastIndex)\n      } else {\n        setCurrentPhotoIndex(currentPhotoIndex - 1)\n      }\n    } else if (direction === 'right') {\n      if (currentPhotoIndex === photosLastIndex) {\n        setCurrentPhotoIndex(0)\n      } else {\n        setCurrentPhotoIndex(currentPhotoIndex + 1)\n      }\n    }\n  }\n\n  return (\n    <div data-aos={dataAos} data-aos-duration={dataAosDuration} className=\"photo-slideshow-container\">\n      <div className='slideshow-panel-left'/>\n      <div className='slideshow-panel-right' />\n      <Arrow slideshowArrow direction='left' color={arrowColor} onClick={() => changePhoto('left')} />\n      <Arrow slideshowArrow direction='right' color={arrowColor} onClick={() => changePhoto('right')} />\n      <img className='project-image' alt={altText} src={photos[currentPhotoIndex]}/>\n    </div>\n  )\n}\n\nexport default PhotoSlideshow","import { createMedia } from '@artsy/fresnel'\nimport PhotoSlideshow from './PhotoSlideshow'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n  Button,\n  Container,\n  Grid,\n  Header,\n  Icon,\n  List,\n  Menu,\n  Segment,\n  Sidebar,\n  Visibility,\n  Card\n} from 'semantic-ui-react'\n\nconst appScreenshots = ['/app-screenshots/raci-1-project-and-tasks-page.png', '/app-screenshots/raci-2-signup.png', '/app-screenshots/raci-3-login.png', '/app-screenshots/raci-4-login-error.png', '/app-screenshots/raci-5-projects-page.png', '/app-screenshots/raci-6-edit-project.png', '/app-screenshots/raci-7-new-task.png']\n\nconst { MediaContextProvider, Media } = createMedia({\n  breakpoints: {\n    mobile: 0,\n    tablet: 768,\n    computer: 1024,\n  },\n})\n\nconst raciDefinitions = [\n  {\n    header: 'Responsible',\n    description:\n      'You are hands-on doing the work',\n    color: 'blue',\n  },\n  {\n    header: 'Accountable',\n    description:\n      'You are answerable for timing and quality',\n    color: 'blue'\n  },\n  {\n    header: 'Consulted',\n    description:\n      'Your input is necessary',\n    color: 'blue'\n  },\n  {\n    header: 'Informed',\n    description:\n      'You need updates to do your own work well',\n    color: 'blue'\n  },\n]\n\nconst HomepageHeading = (props) => {\n  return(\n    <Container text >\n      <Header\n        as='h1'\n        content='RACI'\n        inverted\n        style={{\n          fontSize: props.mobile ? '2em' : '4em',\n          fontWeight: 'bold',\n          marginBottom: 0,\n          marginTop: props.mobile ? '0.5em' : '1em',\n          color: '#2185d0'\n        }}\n      />\n      <Header\n        as='h1'\n        content='Do only what you need to. Know the rest is getting done.'\n        inverted\n        style={{\n          fontSize: props.mobile ? '1.5em' : '3em',\n          fontWeight: 'normal',\n          marginBottom: 0,\n          marginTop: props.mobile ? '0.2em' : '0.5em',\n        }}\n      />\n      <Button \n        onClick={() => {\n          props.history.push('/signup')\n          }\n        }\n        style={{\n          marginTop: props.mobile ? '2em' : '2.2em'\n        }}\n        primary size={props.mobile ? 'medium' : 'huge'}>\n        Get Started\n        <Icon name='right arrow' />\n      </Button>\n    </Container>\n  )\n}\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool,\n}\n\nclass DesktopContainer extends Component {\n  state = {}\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n \n  return (\n      <Media greaterThan='mobile'>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 600, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : null}\n              inverted={!fixed}\n              pointing={!fixed}\n              secondary={!fixed}\n              size='large'\n            >\n              <Container>\n                <Menu.Item position='right'>\n                  <Button onClick={() => { this.props.history.push('/login') }} as='a' inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button onClick={() => {this.props.history.push('/signup')}} as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n            <HomepageHeading {...this.props}/>\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Media>\n    )\n  }\n}\n\nDesktopContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nclass MobileContainer extends Component {\n  state = {}\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Media as={Sidebar.Pushable} at='mobile'>\n        <Sidebar.Pushable>\n          <Sidebar\n            as={Menu}\n            animation='overlay'\n            inverted\n            onHide={this.handleSidebarHide}\n            vertical\n            visible={sidebarOpened}\n          >\n            <Menu.Item as='a' active>\n              Home\n            </Menu.Item>\n            <Menu.Item as='a'>Work</Menu.Item>\n            <Menu.Item as='a'>Company</Menu.Item>\n            <Menu.Item as='a'>Careers</Menu.Item>\n            <Menu.Item as='a'>Log in</Menu.Item>\n            <Menu.Item as='a'>Sign Up</Menu.Item>\n          </Sidebar>\n\n          <Sidebar.Pusher dimmed={sidebarOpened}>\n            <Segment\n              inverted\n              textAlign='center'\n              style={{ minHeight: 350, padding: '1em 0em' }}\n              vertical\n            >\n              <Container>\n                <Menu inverted pointing secondary size='large'>\n                  <Menu.Item onClick={this.handleToggle}>\n                    <Icon name='sidebar' />\n                  </Menu.Item>\n                  <Menu.Item position='right'>\n                    <Button as='a' inverted>\n                      Log in\n                    </Button>\n                    <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                      Sign Up\n                    </Button>\n                  </Menu.Item>\n                </Menu>\n              </Container>\n              <HomepageHeading {...this.props} mobile />\n            </Segment>\n            {children}\n          </Sidebar.Pusher>\n        </Sidebar.Pushable>\n      </Media>\n    )\n  }\n}\n\nMobileContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nconst ResponsiveContainer = (props) => {\n\n  return(\n    <MediaContextProvider>\n      <DesktopContainer {...props}>{props.children}</DesktopContainer>\n      <MobileContainer {...props}>{props.children}</MobileContainer>\n    </MediaContextProvider>\n  )\n}\n\nResponsiveContainer.propTypes = {\n  children: PropTypes.node,\n}\n\nexport default class LandingPage extends React.Component  {\n\n  componentDidMount() {\n    this.props.toggleLoader(false)\n  }\n\n  render() {\n\n    return(\n      <ResponsiveContainer {...this.props}>\n        <Segment style={{ padding: '2em 0em' }} vertical>\n          <Grid container stackable verticalAlign='middle'>\n            <Segment style={{ padding: '0em' }} vertical>\n              <Grid.Row>\n                <Card.Group centered items={raciDefinitions} style={{ flexWrap: 'nowrap', margin: '3em auto 3em auto', maxWidth: '70%'}} />\n              </Grid.Row>\n            </Segment>\n              <Grid.Row>              \n              <Grid.Column width={9}>\n                <Header as='h3' style={{ fontSize: '2em', marginTop: '2em' }}>\n                  The RACI Framework\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                  RACI helps:\n                  <ol>\n                    <li>reduce the risk of low quality work due to murky accountability</li>\n                    <li>make sure the right people have input on tasks (and gives team members authority to make decisions without input!)</li>\n                    <li>prompt conversations about workload and capacity</li>\n                  </ol>\n                </p>\n                <Header as='h3' style={{ fontSize: '2em' }}>\n                  How it works\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                  <ul>\n                    <li>Create a projects, and define tasks on each project</li>\n                    <li>Show which team members are R, A, C and / or I for each task</li>\n                    <li>Team members can flag tasks when a scoping or workload issue arises</li>\n                  </ul>\n                </p>\n              </Grid.Column>\n              <Grid.Column floated='right' width={6}>\n                <PhotoSlideshow photos={appScreenshots} />\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column textAlign='center'>\n                <Button  \n                  onClick={() => {\n                    this.props.history.push('/signup')\n                  }}\n                  style={{ margin: '3em 0' }}\n                  size='huge'>\n                  Get started\n                  <Icon name='right arrow' />\n                </Button>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n        {/* Footer */}\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n          <Container>\n            <Grid divided inverted stackable>\n              <Grid.Row>\n                <Grid.Column width={8}>\n                  <Header inverted as='h4' content='© 2021 Bridget Fitzgerald. I ♥ RACI.' />\n                  <List link inverted>\n                    <List.Item as='a' href='https://github.com/bridgetrosefitz/raci' target='_blank'>View the code</List.Item>\n                    <List.Item as='a' href='mailto:bridgetrosefitz@gmail.com' target='_blank'>Contact</List.Item>\n                  </List>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Container>\n        </Segment>\n      </ResponsiveContainer>\n    )\n  }\n}","import './App.css';\nimport React from 'react';\nimport RACITable from './components/RACITable';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport ProjectsList from './components/ProjectsList';\nimport LandingPage from './components/LandingPage'; \nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport API from './api'\n\nclass App extends React.Component {\n\n  state = {\n    loaderIsActive: true,\n    user_id: null,\n    full_name: null\n  }\n\n  authenticateMe = () => {\n    API.User.profile()\n      .then(data => {\n        this.setState({ \n          user_id: parseInt(data.data.id), \n          full_name: data.data.attributes.full_name\n        })})\n  }\n\n  logOut = () => {\n    localStorage.clear()\n    this.props.history.push('/login')\n  }\n\n  toggleLoader = (trueOrFalse) => {\n    this.setState({loaderIsActive: trueOrFalse})\n  }\n  \n  componentDidMount() {\n    if (localStorage.token) {\n      this.authenticateMe()\n    } else if (this.props.location.pathname !== '/' || this.props.location.pathname === '/signup' ) {\n      this.props.history.push('/login')\n      }\n    }\n\n  render () {\n    return (\n      <div>\n        <Dimmer inverted active={this.state.loaderIsActive} >\n          <Loader inverted content='Loading' />\n        </Dimmer>\n        <Switch>\n          <Route \n            path=\"/login\" \n            render={routerProps => <Login \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe} \n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      user_id={this.state.user_id}/>} />\n          <Route \n            path=\"/signup\" \n            render={routerProps => <SignUp \n                                    {...routerProps}\n                                    loaderIsActive={this.state.loaderIsActive}\n                                    toggleLoader={this.toggleLoader}/>} />\n          <Route \n            path=\"/projects/:id\" \n            render={routerProps => <RACITable \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe}\n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut}/>} />\n          <Route \n            path=\"/projects\" \n            render={routerProps => <ProjectsList \n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe}\n                                      loaderIsActive={this.state.loaderIsActive} \n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut} />} />\n          <Route \n            path=\"/\"\n            render={routerProps => <LandingPage\n                                      {...routerProps} \n                                      authenticateMe={this.authenticateMe} \n                                      loaderIsActive={this.state.loaderIsActive}\n                                      toggleLoader={this.toggleLoader}\n                                      userId={this.state.user_id} \n                                      userFullName={this.state.full_name} \n                                      logOut={this.logOut} />} />\n        </Switch>\n      </div>\n    )\n\n  }\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}